{
	"info": {
		"_postman_id": "31c3a4af-947a-49ed-9221-2f878026bf30",
		"name": "Kiran_Smoke_Suite",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "12719325"
	},
	"item": [
		{
			"name": "1.01 Login  Copy",
			"item": [
				{
					"name": "Authorization User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var data = JSON.parse(responseBody);",
									"pm.environment.set(\"SanityAcToken1\", data.authorization.accessToken);",
									"tests[\"accessToken is \" + pm.environment.get(\"SanityAcToken1\")] = true;",
									"pm.environment.set(\"SanityUserID1\", data.userInfo.id);",
									"tests[\"user ID is \" + pm.environment.get(\"SanityUserID1\")] = true;",
									"",
									"",
									"var data = JSON.parse(responseBody);",
									"console.log(data.userInfo.pwdChangeRequire.value);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "bot-language",
								"value": "{{Lang}}"
							},
							{
								"key": "Connection",
								"value": "keep-alive"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"password\": \"{{password1}}\",\n    \"client_id\": \"1\",\n    \"client_secret\": \"1\",\n    \"scope\": \"friends\",\n    \"grant_type\": \"password\",\n    \"username\": \"{{username1}}\"\n}"
						},
						"url": {
							"raw": "{{url}}/api/{{version}}/oAuth/token",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"{{version}}",
								"oAuth",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "App Control",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var data = JSON.parse(responseBody);",
									"var flag = 0;",
									"_.forEach(data.associatedAccounts,function(ind,val){",
									"        pm.environment.unset(\"accountID1\");",
									"        // if(ind.accountName === postman.getEnvironmentVariable(\"domain\")){",
									"          if(ind.userId ===  pm.environment.get(\"SanityUserID1\")){",
									"            // postman.setGlobalVariable(\"accountID1\",ind.accountId);",
									"            // pm.globals.get(\"variable_key\");",
									"            pm.environment.set(\"SanityAccountID1\", ind.accountId);",
									"            flag = 1;",
									"        }",
									"});",
									"",
									"if (flag === 0)",
									"{",
									"    tests[\"Account ID\"+ pm.environment.get(\"SanityAccountID1\")+\" is not returned\"] = false;",
									"}else",
									"{",
									"  tests[\"Account ID \"+ pm.environment.get(\"SanityAccountID1\")+\" is returned\"] = true;",
									"}",
									"",
									"",
									"var data = JSON.parse(responseBody);",
									"var flag = 0;",
									"_.forEach(data.associatedAccounts,function(ind,val){",
									"",
									"        // if(ind.accountName === postman.getEnvironmentVariable(\"domain\")){",
									"          if(ind.userId ===  pm.environment.get(\"SanityUserID1\")){",
									"            pm.environment.set(\"SanityOrgId1\", ind.orgId);",
									"            flag = 1;",
									"        }",
									"});",
									"",
									"if (flag === 0)",
									"{",
									"    tests[\"orgId1 ID\"+ pm.environment.get(\"SanityOrgId1\")+\" is not returned\"] = false;",
									"}else",
									"{",
									"  tests[\"orgId1 ID \"+ pm.environment.get(\"SanityOrgId1\")+\" is returned\"] = true;",
									"}",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "bearer {{SanityAcToken1}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "bot-language",
								"value": "{{Lang}}"
							},
							{
								"key": "Connection",
								"value": "keep-alive"
							},
							{
								"key": "user-agent",
								"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/63.0.3239.132 Safari/537.36"
							}
						],
						"url": {
							"raw": "{{url}}/api/1.1/users/{{SanityUserID1}}/AppControlList",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"1.1",
								"users",
								"{{SanityUserID1}}",
								"AppControlList"
							]
						},
						"description": "Generated from a curl request: \ncurl 'https://qa1-bots.kore.ai/api/1.1/users/u-6c28bcb4-dbe9-5e9f-a295-5db78d880841/AppControlList?rnd=mijus' -H 'Authorization: bearer RYPoGxdmYCTW-Vp9neSt5dEpubTFrTZPJi7YcBknHWEyOEW8OhPp23a_HP_wTaGM' -H 'Accept-Encoding: gzip, deflate, br' -H 'Accept-Language: en-US,en;q=0.9' -H 'User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/63.0.3239.132 Safari/537.36' -H 'Content-Type: application/json;charset=UTF-8' -H 'Accept: application/json, text/plain, */*' -H 'Referer: https://qa1-bots.kore.ai/botbuilder/login' -H 'Cookie: _ga=GA1.2.284550059.1516702523; _gid=GA1.2.1184022775.1517031553; _gat=1' -H 'Connection: keep-alive' -H 'bot-language: en' --compressed"
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "1.02 Standard Bot Creation",
			"item": [
				{
					"name": "1.CreateBot",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"postman.setEnvironmentVariable(\"SanityBotName\", \"SanityBot\" + parseInt(Math.random() * 1000000));",
									"postman.setEnvironmentVariable(\"SanityBotDesc\", \"SanityBot\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var data = JSON.parse(responseBody);",
									"",
									"pm.environment.set(\"SanityBotStreamId\", data._id);",
									"",
									"// tests[\"###\" + postman.getEnvironmentVariable(\"ConsumerbotstreamID\")+\"###\"]  = true === true;",
									"tests[\"###\" + pm.environment.get(\"SanityBotName\") + \"###\"] = true === true;",
									"tests[\"@@@\" + pm.environment.get(\"SanityBotStreamId\") + \"@@@\"] = true === true;",
									"//  tests[\"###Umesh Singh Kushwaha###\"] = true === true;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "bearer {{SanityAcToken1}}"
							},
							{
								"key": "accountid",
								"value": "{{SanityAccountID1}}"
							},
							{
								"key": "user-agent",
								"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/63.0.3239.132 Safari/537.36"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "bot-language",
								"value": "{{Lang}}"
							},
							{
								"key": "Connection",
								"value": "keep-alive"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"{{SanityBotName}}\",\n    \"type\": \"default\",\n    \"description\": \"{{SanityBotDesc}}\",\n    \"color\": \"{{CreateBotColor}}\",\n    \"categoryIds\": [\n        \"{{CreateBotCategoryID}}\"\n    ],\n    \"skipMakeEditLinks\": false,\n    \"purpose\": \"customer\",\n    \"errorCodes\": {\n        \"pollError\": []\n    },\n    \"visibility\": {\n        \"namespace\": [],\n        \"namespaceIds\": []\n    },\n    \"defaultLanguage\": \"en\",\n    \"icon\": \"{{CreateBotIcon}}\"\n}"
						},
						"url": {
							"raw": "{{url}}/api/1.1/users/{{SanityUserID1}}/builder/streams",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"1.1",
								"users",
								"{{SanityUserID1}}",
								"builder",
								"streams"
							]
						},
						"description": "Generated from a curl request: \ncurl 'https://qa1-bots.kore.com/api/1.1/users/u-bff670bb-b592-5a95-930c-d06be3a1e607/builder/streams?rnd=63gs5' -H 'Authorization: bearer f6U3YUh780JNLSA0TzpGusMay2_NhiybzkptlJrZRYHCMsQsmjdOaDp9blZ1RUTt' -H 'Origin: https://qa1-bots.kore.com' -H 'Accept-Encoding: gzip, deflate, br' -H 'Accept-Language: en-US,en;q=0.8' -H 'User-Agent: Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/57.0.2987.133 Safari/537.36' -H 'Content-Type: application/json;charset=UTF-8' -H 'Accept: application/json, text/plain, */*' -H 'Referer: https://qa1-bots.kore.com/botbuilder' -H 'Cookie: unq=D9Gy1TnE2hRQtC6X' -H 'Connection: keep-alive' --data-binary '{\\\"name\\\":\\\"NewBotCheck1\\\",\\\"type\\\":\\\"taskbot\\\",\\\"description\\\":\\\"NewBotCheck1\\\",\\\"color\\\":\\\"#E44929\\\",\\\"categoryIds\\\":\\\"451902a073c071463e2ce7c6\\\",\\\"skipMakeEditLinks\\\":false,\\\"purpose\\\":\\\"employee\\\",\\\"errorCodes\\\":{\\\"pollError\\\":[]},\\\"visibility\\\":{\\\"namespace\\\":[],\\\"namespaceIds\\\":[]}}' --compressed"
					},
					"response": []
				},
				{
					"name": "2.GetBotId",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"    function delay(ms) {\r",
									"        var cur_d = new Date();\r",
									"        var cur_ticks = cur_d.getTime();\r",
									"        var ms_passed = 0;\r",
									"        while(ms_passed < ms) {\r",
									"            var d = new Date();  // Possible memory leak?\r",
									"            var ticks = d.getTime();\r",
									"            ms_passed = ticks - cur_ticks;\r",
									"        }\r",
									"    }\r",
									"    delay(4000);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "bearer {{SanityAcToken1}}"
							},
							{
								"key": "accountid",
								"value": "{{SanityAccountID1}}"
							},
							{
								"key": "user-agent",
								"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/63.0.3239.132 Safari/537.36"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "bot-language",
								"value": "{{Lang}}"
							},
							{
								"key": "Connection",
								"value": "keep-alive"
							}
						],
						"url": {
							"raw": "{{url}}/api/1.1/users/{{SanityUserID1}}/builder/streams",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"1.1",
								"users",
								"{{SanityUserID1}}",
								"builder",
								"streams"
							]
						},
						"description": "Generated from a curl request: \ncurl 'https://qa1-bots.kore.com/api/1.1/users/u-bff670bb-b592-5a95-930c-d06be3a1e607/builder/streams?rnd=o6uo5' -H 'Cookie: unq=D9Gy1TnE2hRQtC6X' -H 'Accept-Encoding: gzip, deflate, sdch, br' -H 'Accept-Language: en-US,en;q=0.8' -H 'Authorization: bearer f6U3YUh780JNLSA0TzpGusMay2_NhiybzkptlJrZRYHCMsQsmjdOaDp9blZ1RUTt' -H 'Content-Type: application/json;charset=UTF-8' -H 'Accept: application/json, text/plain, */*' -H 'Referer: https://qa1-bots.kore.com/botbuilder' -H 'User-Agent: Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/57.0.2987.133 Safari/537.36' -H 'Connection: keep-alive' --compressed"
					},
					"response": []
				},
				{
					"name": "3.Market",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"    function delay(ms) {\r",
									"        var cur_d = new Date();\r",
									"        var cur_ticks = cur_d.getTime();\r",
									"        var ms_passed = 0;\r",
									"        while(ms_passed < ms) {\r",
									"            var d = new Date();  // Possible memory leak?\r",
									"            var ticks = d.getTime();\r",
									"            ms_passed = ticks - cur_ticks;\r",
									"        }\r",
									"    }\r",
									"    delay(4000);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "bearer {{SanityAcToken1}}"
							},
							{
								"key": "accountid",
								"value": "{{SanityAccountID1}}"
							},
							{
								"key": "user-agent",
								"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/63.0.3239.132 Safari/537.36"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "bot-language",
								"value": "{{Lang}}"
							},
							{
								"key": "Connection",
								"value": "keep-alive"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"_id\": \"{{SanityBotStreamId}}\",\n    \"name\": \"{{SanityBotName}}\",\n    \"description\": \"{{SanityBotDesc}}\",\n    \"categoryIds\": [\n        \"{{CreateBotCategoryID}}\"\n    ],\n    \"icon\": \"{{CreateBotIcon}}\",\n    \"keywords\": [],\n    \"languages\": [],\n    \"price\": 1,\n    \"screenShots\": [],\n    \"namespace\": \"private\",\n    \"namespaceIds\": [],\n    \"color\": \"{{CreateBotColor}}\",\n    \"bBanner\": \"\",\n    \"sBanner\": \"\",\n    \"bBannerColor\": \"{{CreateBotColor}}\",\n    \"sBannerColor\": \"{{CreateBotColor}}\",\n    \"profileRequired\": true,\n    \"sendVcf\": false\n}"
						},
						"url": {
							"raw": "{{url}}/api/1.1/market/streams",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"1.1",
								"market",
								"streams"
							]
						},
						"description": "Generated from a curl request: \ncurl 'https://qa1-bots.kore.com/api/1.1/market/streams?rnd=4vmgq' -H 'Authorization: bearer f6U3YUh780JNLSA0TzpGusMay2_NhiybzkptlJrZRYHCMsQsmjdOaDp9blZ1RUTt' -H 'Origin: https://qa1-bots.kore.com' -H 'Accept-Encoding: gzip, deflate, br' -H 'Accept-Language: en-US,en;q=0.8' -H 'User-Agent: Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/57.0.2987.133 Safari/537.36' -H 'Content-Type: application/json;charset=UTF-8' -H 'Accept: application/json, text/plain, */*' -H 'Referer: https://qa1-bots.kore.com/botbuilder' -H 'Cookie: unq=D9Gy1TnE2hRQtC6X' -H 'Connection: keep-alive' --data-binary '{\\\"_id\\\":\\\"st-d60af6f8-1306-53bd-b0d7-d0a8791dff32\\\",\\\"name\\\":\\\"NewBotCheck1\\\",\\\"description\\\":\\\"NewBotCheck1\\\",\\\"categoryIds\\\":\\\"451902a073c071463e2ce7c6\\\",\\\"icon\\\":\\\"590976b37e45c9aa17b25440\\\",\\\"keywords\\\":[],\\\"languages\\\":[],\\\"price\\\":1,\\\"screenShots\\\":[],\\\"namespace\\\":\\\"private\\\",\\\"namespaceIds\\\":[],\\\"color\\\":\\\"#E44929\\\",\\\"bBanner\\\":\\\"\\\",\\\"sBanner\\\":\\\"\\\",\\\"bBannerColor\\\":\\\"#E44929\\\",\\\"sBannerColor\\\":\\\"#E44929\\\",\\\"profileRequired\\\":true,\\\"sendVcf\\\":false}' --compressed"
					},
					"response": []
				},
				{
					"name": "CreateApp",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"var data = JSON.parse(responseBody);\r",
									"pm.environment.set(\"App1Stream1\", data.appName);\r",
									"pm.test(\"AppName is available in the response\", function () {\r",
									"    var responseJson = JSON.parse(responseBody);\r",
									"    var app = responseJson.appName;\r",
									"    pm.expect(app).to.equal(pm.environment.get(\"App1Stream1\"));\r",
									"});\r",
									"pm.environment.set(\"App1Stream1ClientId1\", data.clientId);\r",
									"pm.test(\"ClientID is available in the response\", function () {\r",
									"    var responseJson = JSON.parse(responseBody);\r",
									"    var id = responseJson.clientId;\r",
									"    pm.expect(id).to.equal(pm.environment.get(\"App1Stream1ClientId1\"));\r",
									"});\r",
									"pm.environment.set(\"App1Stream1ClientSecret1\", data.clientSecret);\r",
									"pm.test(\"ClientSecret is available in the response\", function () {\r",
									"    var responseJson = JSON.parse(responseBody);\r",
									"    var secret = responseJson.clientSecret;\r",
									"    pm.expect(secret).to.equal(pm.environment.get(\"App1Stream1ClientSecret1\"));\r",
									"});\r",
									"tests[\"ClientID for created app is : \" + data.clientId] = true;\r",
									"tests[\"clientSecret for created app is : \" + data.clientSecret] = true;\r",
									"tests[\"AppName is : \" + data.appName] = true;\r",
									"\r",
									"pm.test(\"AppName available in the response \", function () {\r",
									"    var responseJson = JSON.parse(responseBody);\r",
									"    var name = responseJson.appName;\r",
									"    pm.expect(name).to.equal(pm.environment.get(\"App1Stream1\"));\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"App1Stream1\", \"Auto1\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Connection",
								"value": "keep-alive"
							},
							{
								"key": "X-Timezone-Offset",
								"value": "-330"
							},
							{
								"key": "Authorization",
								"value": "bearer {{SanityAcToken1}}"
							},
							{
								"key": "state",
								"value": "configured"
							},
							{
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8"
							},
							{
								"key": "Accept",
								"value": "application/json, text/plain, */*"
							},
							{
								"key": "User-Agent",
								"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.138 Safari/537.36"
							},
							{
								"key": "bot-language",
								"value": "{{Lang}}"
							},
							{
								"key": "AccountId",
								"value": "{{SanityAccountID1}}"
							},
							{
								"key": "Origin",
								"value": "https://qa1-bots.kore.ai"
							},
							{
								"key": "Sec-Fetch-Site",
								"value": "same-origin"
							},
							{
								"key": "Sec-Fetch-Mode",
								"value": "cors"
							},
							{
								"key": "Sec-Fetch-Dest",
								"value": "empty"
							},
							{
								"key": "Referer",
								"value": "https://qa1-bots.kore.ai/botbuilder"
							},
							{
								"key": "Accept-Language",
								"value": "en-US,en;q=0.9"
							},
							{
								"key": "Cookie",
								"value": "_ga=GA1.2.911535481.1586497890; __hs_opt_out=no; hubspotutk=c8a344e15c1a384e2645eafb285bf05a; _vwo_uuid_v2=DA136D087CC5B2A2663395C6EECED51A9|065feef042135d1a68a721dae7548c94; _gcl_au=1.1.747703786.1586774907; _vis_opt_s=2%7C; __hssrc=1; _gid=GA1.2.1823592650.1589179004; __hstc=59894770.c8a344e15c1a384e2645eafb285bf05a.1586497890226.1589179012271.1589203884380.86"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"appName\": \"{{App1Stream1}}\",\n    \"scope\": [],\n    \"pushNotifications\": {\n        \"enable\": false,\n        \"webhookUrl\": \"\"\n    },\n    \"algorithm\": \"HS256\",\n    \"bots\": [\n        \"{{SanityBotStreamId}}\"\n    ]\n}"
						},
						"url": {
							"raw": "{{url}}/api/{{version}}/users/{{SanityUserID1}}/streams/{{SanityBotStreamId}}/sdk/apps",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"{{version}}",
								"users",
								"{{SanityUserID1}}",
								"streams",
								"{{SanityBotStreamId}}",
								"sdk",
								"apps"
							]
						}
					},
					"response": []
				},
				{
					"name": "AddGlobalVariable",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									"var data = JSON.parse(responseBody);\r",
									"if(data.streamId === pm.environment.get('SanityBotStreamId')){\r",
									"pm.environment.set(\"GlobalVariableID\",data._id);\r",
									"tests[\"Variable Added is of type : \" + data.variableType+ \".\"] = true;\r",
									"tests[\"Variable Key is : \" + data.key+ \".\"] = true;\r",
									"tests[\"Variable Value is : \" + data.value+ \".\"] = true;\r",
									"\r",
									"}else{\r",
									"tests[\"Sanity Bot Doesn't have variables defined : \" ] = false;\r",
									"}\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"setTimeout(() => {}, 4000); \r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Connection",
								"value": "keep-alive"
							},
							{
								"key": "X-Timezone-Offset",
								"value": "-330"
							},
							{
								"key": "Authorization",
								"value": "bearer {{SanityAcToken1}}"
							},
							{
								"key": "state",
								"value": "configured"
							},
							{
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8"
							},
							{
								"key": "Accept",
								"value": "application/json, text/plain, */*"
							},
							{
								"key": "User-Agent",
								"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36"
							},
							{
								"key": "bot-language",
								"value": "{{Lang}}"
							},
							{
								"key": "AccountId",
								"value": "{{SanityAccountID1}}"
							},
							{
								"key": "Origin",
								"value": "https://qa1-bots.kore.ai"
							},
							{
								"key": "Sec-Fetch-Site",
								"value": "same-origin"
							},
							{
								"key": "Sec-Fetch-Mode",
								"value": "cors"
							},
							{
								"key": "Sec-Fetch-Dest",
								"value": "empty"
							},
							{
								"key": "Referer",
								"value": "https://qa1-bots.kore.ai/botbuilder"
							},
							{
								"key": "Accept-Language",
								"value": "en-US,en;q=0.9"
							},
							{
								"key": "Cookie",
								"value": "_ga=GA1.2.911535481.1586497890; __hs_opt_out=no; hubspotutk=c8a344e15c1a384e2645eafb285bf05a; _vwo_uuid_v2=DA136D087CC5B2A2663395C6EECED51A9|065feef042135d1a68a721dae7548c94; _vis_opt_s=3%7C; __hstc=59894770.c8a344e15c1a384e2645eafb285bf05a.1586497890226.1594907288378.1594998476867.163; _gid=GA1.2.1831138518.1595214499"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"key\": \"place\",\r\n    \"value\": \"Mumbai\",\r\n    \"hint\": \"\",\r\n    \"variableType\": \"env\",\r\n    \"audioTag\": \"\",\r\n    \"group\": \"\"\r\n}"
						},
						"url": {
							"raw": "{{url}}/api/{{version}}/users/{{SanityUserID1}}/builder/stream/{{SanityBotStreamId}}/variables",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"{{version}}",
								"users",
								"{{SanityUserID1}}",
								"builder",
								"stream",
								"{{SanityBotStreamId}}",
								"variables"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "1.03 TaskCreation_variableCheck",
			"item": [
				{
					"name": "Selecting Created Bot",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"    function delay(ms) {\r",
									"        var cur_d = new Date();\r",
									"        var cur_ticks = cur_d.getTime();\r",
									"        var ms_passed = 0;\r",
									"        while(ms_passed < ms) {\r",
									"            var d = new Date();  // Possible memory leak?\r",
									"            var ticks = d.getTime();\r",
									"            ms_passed = ticks - cur_ticks;\r",
									"        }\r",
									"    }\r",
									"    delay(4000);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "bearer {{SanityAcToken1}}"
							},
							{
								"key": "bot-language",
								"value": "{{Lang}}"
							},
							{
								"key": "Connection",
								"value": "keep-alive"
							},
							{
								"key": "accountId",
								"value": "{{SanityAccountID1}}"
							}
						],
						"url": {
							"raw": "{{url}}/api/{{version}}/users/{{SanityUserID1}}/builder/streams/{{SanityBotStreamId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"{{version}}",
								"users",
								"{{SanityUserID1}}",
								"builder",
								"streams",
								"{{SanityBotStreamId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Component - Intent",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"SanityRefId1\", data._id);",
									"postman.setEnvironmentVariable(\"SanityIntentName1\", data.name);",
									"",
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "bearer {{SanityAcToken1}}"
							},
							{
								"key": "User-Agent",
								"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.36"
							},
							{
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8"
							},
							{
								"key": "bot-language",
								"value": "{{Lang}}"
							},
							{
								"key": "Connection",
								"value": "keep-alive"
							},
							{
								"key": "accountId",
								"value": "{{SanityAccountID1}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"desc\": \"Test Automation\",\r\n    \"type\": \"intent\",\r\n    \"intent\": \"variableCheck\"\r\n}"
						},
						"url": {
							"raw": "{{url}}/api/1.1/builder/streams/{{SanityBotStreamId}}/components",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"1.1",
								"builder",
								"streams",
								"{{SanityBotStreamId}}",
								"components"
							]
						},
						"description": "Generated from a curl request: \ncurl 'https://bots.kore.com/api/1.1/builder/streams/st-c714fe28-d155-500d-9e96-413de6270657/components?rnd=yz2g1' -H 'Authorization: bearer BpiVvGhpB8l1n6YoLRidfpCzcpVQivMmxwqQJ2WrCz7QTxMPRSbEbesz8DBySW_m' -H 'Origin: https://bots.kore.com' -H 'Accept-Encoding: gzip, deflate, br' -H 'Accept-Language: en-US,en;q=0.8' -H 'User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.36' -H 'Content-Type: application/json;charset=UTF-8' -H 'Accept: application/json, text/plain, */*' -H 'Referer: https://bots.kore.com/botbuilder' -H 'Cookie: unq=i3t8FZIOTwjF9Qhs' -H 'Connection: keep-alive' --data-binary '{\\\"desc\\\":\\\"Create an issue in Jira\\\",\\\"type\\\":\\\"intent\\\",\\\"intent\\\":\\\"CreateIssue\\\"}' --compressed"
					},
					"response": []
				},
				{
					"name": "Add component to Dialog",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"SanityDialogID1\", data._id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "bearer {{SanityAcToken1}}"
							},
							{
								"key": "User-Agent",
								"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.36"
							},
							{
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8"
							},
							{
								"key": "bot-language",
								"value": "{{Lang}}"
							},
							{
								"key": "Connection",
								"value": "keep-alive"
							},
							{
								"key": "accountId",
								"value": "{{SanityAccountID1}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"{{SanityIntentName1}}\",\n    \"shortDesc\": \"Verify For variable Request\",\n    \"nodes\": [\n        {\n            \"nodeId\": \"intent0\",\n            \"type\": \"intent\",\n            \"componentId\": \"{{SanityRefId1}}\",\n            \"transitions\": [\n                {\n                    \"default\": \"\",\n                    \"metadata\": {\n                        \"color\": \"#299d8e\",\n                        \"connId\": \"dummy0\"\n                    }\n                }\n            ],\n            \"metadata\": {\n                \"left\": 31,\n                \"top\": 18\n            }\n        }\n    ],\n    \"visibility\": {\n        \"namespace\": \"private\",\n        \"namespaceIds\": [\n            \"\"\n        ]\n    }\n}"
						},
						"url": {
							"raw": "{{url}}/api/{{version}}/builder/streams/{{SanityBotStreamId}}/dialogs",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"{{version}}",
								"builder",
								"streams",
								"{{SanityBotStreamId}}",
								"dialogs"
							]
						},
						"description": "Generated from a curl request: \ncurl 'https://bots.kore.com/api/1.1/builder/streams/st-c714fe28-d155-500d-9e96-413de6270657/dialogs?rnd=na8ku' -H 'Authorization: bearer BpiVvGhpB8l1n6YoLRidfpCzcpVQivMmxwqQJ2WrCz7QTxMPRSbEbesz8DBySW_m' -H 'Origin: https://bots.kore.com' -H 'Accept-Encoding: gzip, deflate, br' -H 'Accept-Language: en-US,en;q=0.8' -H 'User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.36' -H 'Content-Type: application/json;charset=UTF-8' -H 'Accept: application/json, text/plain, */*' -H 'Referer: https://bots.kore.com/botbuilder' -H 'Cookie: unq=i3t8FZIOTwjF9Qhs' -H 'Connection: keep-alive' --data-binary '{\\\"name\\\":\\\"CreateIssue\\\",\\\"shortDesc\\\":\\\"Create an issue in Jira\\\",\\\"nodes\\\":[{\\\"nodeId\\\":\\\"intent0\\\",\\\"type\\\":\\\"intent\\\",\\\"componentId\\\":\\\"dc-b696b29b-44b9-53ca-baa1-e2378384dc88\\\",\\\"transitions\\\":[{\\\"default\\\":\\\"\\\",\\\"metadata\\\":{\\\"color\\\":\\\"#299d8e\\\",\\\"connId\\\":\\\"dummy0\\\"}}],\\\"metadata\\\":{\\\"left\\\":30,\\\"top\\\":170}}],\\\"visibility\\\":{\\\"namespace\\\":\\\"private\\\",\\\"namespaceIds\\\":[\\\"\\\"]}}' --compressed"
					},
					"response": []
				},
				{
					"name": "Add Dialog to Bot",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is \" + responseCode.code + \" \" + responseCode.name ] = responseCode.code === 200;",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "bearer {{SanityAcToken1}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "bot-language",
								"value": "{{Lang}}"
							},
							{
								"key": "Connection",
								"value": "keep-alive"
							},
							{
								"key": "accountId",
								"value": "{{SanityAccountID1}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{SanityIntentName1}}\",\r\n    \"dialogId\": \"{{SanityDialogID1}}\"\r\n}"
						},
						"url": {
							"raw": "{{url}}/api/1.1/builder/streams/{{SanityBotStreamId}}/components/{{SanityRefId1}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"1.1",
								"builder",
								"streams",
								"{{SanityBotStreamId}}",
								"components",
								"{{SanityRefId1}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "CreateScriptCheck",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var data = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"ScriptRequestId1\", data._id);\r",
									"postman.setEnvironmentVariable(\"variableScriptName\", data.name);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "authority",
								"value": "staging-bots.korebots.com"
							},
							{
								"key": "x-timezone-offset",
								"value": "-330"
							},
							{
								"key": "authorization",
								"value": "bearer {{SanityAcToken1}}"
							},
							{
								"key": "state",
								"value": "configured"
							},
							{
								"key": "content-type",
								"value": "application/json;charset=UTF-8"
							},
							{
								"key": "accept",
								"value": "application/json, text/plain, */*"
							},
							{
								"key": "user-agent",
								"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36"
							},
							{
								"key": "bot-language",
								"value": "{{Lang}}"
							},
							{
								"key": "accountid",
								"value": "{{SanityAccountID1}}"
							},
							{
								"key": "origin",
								"value": "https://staging-bots.korebots.com"
							},
							{
								"key": "sec-fetch-site",
								"value": "same-origin"
							},
							{
								"key": "sec-fetch-mode",
								"value": "cors"
							},
							{
								"key": "sec-fetch-dest",
								"value": "empty"
							},
							{
								"key": "referer",
								"value": "https://staging-bots.korebots.com/botbuilder"
							},
							{
								"key": "accept-language",
								"value": "en-US,en;q=0.9"
							},
							{
								"key": "cookie",
								"value": "_ga=GA1.2.636363819.1595827177; _gid=GA1.2.1709581646.1595827177"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"ScriptChecking\",\r\n    \"type\": \"script\"\r\n}"
						},
						"url": {
							"raw": "{{url}}/api/{{version}}/builder/streams/{{SanityBotStreamId}}/components",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"{{version}}",
								"builder",
								"streams",
								"{{SanityBotStreamId}}",
								"components"
							]
						}
					},
					"response": []
				},
				{
					"name": "AddScriptComponent",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "authority",
								"value": "staging-bots.korebots.com"
							},
							{
								"key": "x-timezone-offset",
								"value": "-330"
							},
							{
								"key": "authorization",
								"value": "bearer {{SanityAcToken1}}"
							},
							{
								"key": "state",
								"value": "configured"
							},
							{
								"key": "content-type",
								"value": "application/json;charset=UTF-8"
							},
							{
								"key": "accept",
								"value": "application/json, text/plain, */*"
							},
							{
								"key": "bot-language",
								"value": "{{Lang}}"
							},
							{
								"key": "user-agent",
								"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36"
							},
							{
								"key": "x-http-method-override",
								"value": "put"
							},
							{
								"key": "accountid",
								"value": "{{SanityAccountID1}}"
							},
							{
								"key": "origin",
								"value": "https://staging-bots.korebots.com"
							},
							{
								"key": "sec-fetch-site",
								"value": "same-origin"
							},
							{
								"key": "sec-fetch-mode",
								"value": "cors"
							},
							{
								"key": "sec-fetch-dest",
								"value": "empty"
							},
							{
								"key": "referer",
								"value": "https://staging-bots.korebots.com/botbuilder"
							},
							{
								"key": "accept-language",
								"value": "en-US,en;q=0.9"
							},
							{
								"key": "cookie",
								"value": "_ga=GA1.2.636363819.1595827177; _gid=GA1.2.1709581646.1595827177"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"streamId\": \"{{SanityBotStreamId}}\",\r\n    \"name\": \"{{SanityIntentName1}}\",\r\n    \"nodes\": [\r\n        {\r\n            \"nodeOptions\": {\r\n                \"customTags\": {\r\n                    \"session\": [],\r\n                    \"message\": [],\r\n                    \"user\": []\r\n                },\r\n                \"transitionType\": \"auto\",\r\n                \"promptOptions\": \"required\",\r\n                \"reuseMarkedupPhrases\": false,\r\n                \"interruptOptions\": {\r\n                    \"priority\": \"task\"\r\n                },\r\n                \"transitionMode\": \"initiateCurrentTask\",\r\n                \"inputHandlingOptions\": \"useAsEntityValue\",\r\n                \"reuseOptions\": \"1\",\r\n                \"userInputCorrection\": true,\r\n                \"notForReuse\": false,\r\n                \"contextTags\": []\r\n            },\r\n            \"nodeId\": \"intent0\",\r\n            \"type\": \"intent\",\r\n            \"componentId\": \"{{SanityRefId1}}\",\r\n            \"transitions\": [\r\n                {\r\n                    \"default\": \"\",\r\n                    \"metadata\": {\r\n                        \"color\": \"#299d8e\",\r\n                        \"connId\": \"dummy0\"\r\n                    }\r\n                }\r\n            ],\r\n            \"metadata\": {\r\n                \"left\": 15,\r\n                \"top\": 81\r\n            }\r\n        },\r\n        {\r\n            \"nodeId\": \"script1\",\r\n            \"type\": \"script\",\r\n            \"componentId\": \"{{ScriptRequestId1}}\",\r\n            \"transitions\": [\r\n                {\r\n                    \"default\": \"\",\r\n                    \"metadata\": {\r\n                        \"color\": \"#299d8e\",\r\n                        \"connId\": \"dummy1\"\r\n                    }\r\n                }\r\n            ],\r\n            \"nodeOptions\": {\r\n                \"transitionType\": \"auto\"\r\n            }\r\n        }\r\n    ],\r\n    \"visibility\": {\r\n        \"namespace\": \"private\",\r\n        \"namespaceIds\": [\r\n            \"{{SanityUserID1}}\"\r\n        ]\r\n    }\r\n}"
						},
						"url": {
							"raw": "{{url}}/api/{{version}}/builder/streams/{{SanityBotStreamId}}/dialogs/{{SanityDialogID1}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"{{version}}",
								"builder",
								"streams",
								"{{SanityBotStreamId}}",
								"dialogs",
								"{{SanityDialogID1}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "AddComponentAgain",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "authority",
								"value": "staging-bots.korebots.com"
							},
							{
								"key": "x-timezone-offset",
								"value": "-330"
							},
							{
								"key": "authorization",
								"value": "bearer {{SanityAcToken1}}"
							},
							{
								"key": "state",
								"value": "configured"
							},
							{
								"key": "content-type",
								"value": "application/json;charset=UTF-8"
							},
							{
								"key": "accept",
								"value": "application/json, text/plain, */*"
							},
							{
								"key": "bot-language",
								"value": "{{Lang}}"
							},
							{
								"key": "user-agent",
								"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36"
							},
							{
								"key": "x-http-method-override",
								"value": "put"
							},
							{
								"key": "accountid",
								"value": "{{SanityAccountID1}}"
							},
							{
								"key": "origin",
								"value": "https://staging-bots.korebots.com"
							},
							{
								"key": "sec-fetch-site",
								"value": "same-origin"
							},
							{
								"key": "sec-fetch-mode",
								"value": "cors"
							},
							{
								"key": "sec-fetch-dest",
								"value": "empty"
							},
							{
								"key": "referer",
								"value": "https://staging-bots.korebots.com/botbuilder"
							},
							{
								"key": "accept-language",
								"value": "en-US,en;q=0.9"
							},
							{
								"key": "cookie",
								"value": "_ga=GA1.2.636363819.1595827177; _gid=GA1.2.1709581646.1595827177"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"streamId\": \"{{SanityBotStreamId}}\",\r\n    \"name\": \"{{SanityIntentName1}}\",\r\n    \"nodes\": [\r\n        {\r\n            \"nodeOptions\": {\r\n                \"customTags\": {\r\n                    \"session\": [],\r\n                    \"message\": [],\r\n                    \"user\": []\r\n                },\r\n                \"transitionType\": \"auto\",\r\n                \"promptOptions\": \"required\",\r\n                \"reuseMarkedupPhrases\": false,\r\n                \"interruptOptions\": {\r\n                    \"priority\": \"task\"\r\n                },\r\n                \"transitionMode\": \"initiateCurrentTask\",\r\n                \"inputHandlingOptions\": \"useAsEntityValue\",\r\n                \"reuseOptions\": \"1\",\r\n                \"userInputCorrection\": true,\r\n                \"notForReuse\": false,\r\n                \"contextTags\": [],\r\n                \"isOptional\": false\r\n            },\r\n            \"nodeId\": \"intent0\",\r\n            \"type\": \"intent\",\r\n            \"componentId\": \"{{SanityRefId1}}\",\r\n            \"transitions\": [\r\n                {\r\n                    \"default\": \"script1\",\r\n                    \"metadata\": {\r\n                        \"color\": \"#299d8e\",\r\n                        \"connId\": \"dummy0\"\r\n                    }\r\n                }\r\n            ],\r\n            \"metadata\": {\r\n                \"left\": 15,\r\n                \"top\": 81\r\n            }\r\n        },\r\n        {\r\n            \"nodeOptions\": {\r\n                \"customTags\": {\r\n                    \"session\": [],\r\n                    \"message\": [],\r\n                    \"user\": []\r\n                },\r\n                \"transitionType\": \"auto\",\r\n                \"promptOptions\": \"required\",\r\n                \"reuseMarkedupPhrases\": false,\r\n                \"interruptOptions\": {\r\n                    \"priority\": \"task\"\r\n                },\r\n                \"transitionMode\": \"initiateCurrentTask\",\r\n                \"inputHandlingOptions\": \"useAsEntityValue\",\r\n                \"reuseOptions\": \"1\",\r\n                \"userInputCorrection\": true,\r\n                \"notForReuse\": false,\r\n                \"contextTags\": []\r\n            },\r\n            \"nodeId\": \"script1\",\r\n            \"type\": \"script\",\r\n            \"componentId\": \"{{ScriptRequestId1}}\",\r\n            \"transitions\": [\r\n                {\r\n                    \"default\": \"\",\r\n                    \"metadata\": {\r\n                        \"color\": \"#299d8e\",\r\n                        \"connId\": \"dummy1\"\r\n                    }\r\n                }\r\n            ]\r\n        }\r\n    ],\r\n    \"visibility\": {\r\n        \"namespace\": \"private\",\r\n        \"namespaceIds\": [\r\n            \"{{SanityUserID1}}\"\r\n        ]\r\n    }\r\n}"
						},
						"url": {
							"raw": "{{url}}/api/{{version}}/builder/streams/{{SanityBotStreamId}}/dialogs/{{SanityDialogID1}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"{{version}}",
								"builder",
								"streams",
								"{{SanityBotStreamId}}",
								"dialogs",
								"{{SanityDialogID1}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "AddComponenttoDialog",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "authority",
								"value": "staging-bots.korebots.com"
							},
							{
								"key": "x-timezone-offset",
								"value": "-330"
							},
							{
								"key": "authorization",
								"value": "bearer {{SanityAcToken1}}"
							},
							{
								"key": "state",
								"value": "configured"
							},
							{
								"key": "content-type",
								"value": "application/json;charset=UTF-8"
							},
							{
								"key": "accept",
								"value": "application/json, text/plain, */*"
							},
							{
								"key": "bot-language",
								"value": "{{Lang}}"
							},
							{
								"key": "user-agent",
								"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36"
							},
							{
								"key": "x-http-method-override",
								"value": "put"
							},
							{
								"key": "accountid",
								"value": "{{SanityAccountID1}}"
							},
							{
								"key": "origin",
								"value": "https://staging-bots.korebots.com"
							},
							{
								"key": "sec-fetch-site",
								"value": "same-origin"
							},
							{
								"key": "sec-fetch-mode",
								"value": "cors"
							},
							{
								"key": "sec-fetch-dest",
								"value": "empty"
							},
							{
								"key": "referer",
								"value": "https://staging-bots.korebots.com/botbuilder"
							},
							{
								"key": "accept-language",
								"value": "en-US,en;q=0.9"
							},
							{
								"key": "cookie",
								"value": "_ga=GA1.2.636363819.1595827177; _gid=GA1.2.1709581646.1595827177"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"metadata\":{\"left\":316,\"top\":81}}"
						},
						"url": {
							"raw": "{{url}}/api/{{version}}/builder/streams/{{SanityBotStreamId}}/dialogs/{{SanityDialogID1}}/nodes/script1",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"{{version}}",
								"builder",
								"streams",
								"{{SanityBotStreamId}}",
								"dialogs",
								"{{SanityDialogID1}}",
								"nodes",
								"script1"
							]
						}
					},
					"response": []
				},
				{
					"name": "EditScriptNode",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "authority",
								"value": "staging-bots.korebots.com"
							},
							{
								"key": "x-timezone-offset",
								"value": "-330"
							},
							{
								"key": "authorization",
								"value": "bearer {{SanityAcToken1}}"
							},
							{
								"key": "state",
								"value": "configured"
							},
							{
								"key": "content-type",
								"value": "application/json;charset=UTF-8"
							},
							{
								"key": "accept",
								"value": "application/json, text/plain, */*"
							},
							{
								"key": "bot-language",
								"value": "{{Lang}}"
							},
							{
								"key": "user-agent",
								"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36"
							},
							{
								"key": "x-http-method-override",
								"value": "put"
							},
							{
								"key": "accountid",
								"value": "{{SanityAccountID1}}"
							},
							{
								"key": "origin",
								"value": "https://staging-bots.korebots.com"
							},
							{
								"key": "sec-fetch-site",
								"value": "same-origin"
							},
							{
								"key": "sec-fetch-mode",
								"value": "cors"
							},
							{
								"key": "sec-fetch-dest",
								"value": "empty"
							},
							{
								"key": "referer",
								"value": "https://staging-bots.korebots.com/botbuilder"
							},
							{
								"key": "accept-language",
								"value": "en-US,en;q=0.9"
							},
							{
								"key": "cookie",
								"value": "_ga=GA1.2.636363819.1595827177; _gid=GA1.2.1709581646.1595827177"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"script\": \"context.locate%3Denv.place%3B\"\r\n}"
						},
						"url": {
							"raw": "{{url}}/api/{{version}}/builder/streams/{{SanityBotStreamId}}/components/{{ScriptRequestId1}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"{{version}}",
								"builder",
								"streams",
								"{{SanityBotStreamId}}",
								"components",
								"{{ScriptRequestId1}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Bot Response",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"variableMessageID1\", data._id);",
									"",
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "bearer {{SanityAcToken1}}"
							},
							{
								"key": "User-Agent",
								"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/59.0.3071.115 Safari/537.36"
							},
							{
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8"
							},
							{
								"key": "bot-language",
								"value": "{{Lang}}"
							},
							{
								"key": "Connection",
								"value": "keep-alive"
							},
							{
								"key": "accountId",
								"value": "{{SanityAccountID1}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Botresponse1\",\r\n    \"type\": \"message\",\r\n    \"message\": [\r\n        {\r\n            \"channel\": \"default\",\r\n            \"text\": \"%7B%7Bcontext.locate%7D%7D\",\r\n            \"type\": \"basic\"\r\n        }\r\n    ]\r\n}"
						},
						"url": {
							"raw": "{{url}}/api/{{version}}/builder/streams/{{SanityBotStreamId}}/components",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"{{version}}",
								"builder",
								"streams",
								"{{SanityBotStreamId}}",
								"components"
							]
						},
						"description": "Generated from a curl request: \ncurl 'https://qa1-bots.kore.ai/api/1.1/builder/streams/st-50d2f95b-caec-5eb2-9f20-fd38d046aadc/components?rnd=zdfcby' -H 'Authorization: bearer tIexWiLDp2hLaZhmLpiFUCdCFARigMoFGtJQWUqYMdKVK2FiikExDe7Q9C0Ych4L' -H 'Origin: https://qa1-bots.kore.ai' -H 'Accept-Encoding: gzip, deflate, br' -H 'Accept-Language: en-US,en;q=0.8' -H 'User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/59.0.3071.115 Safari/537.36' -H 'Content-Type: application/json;charset=UTF-8' -H 'Accept: application/json, text/plain, */*' -H 'Referer: https://qa1-bots.kore.ai/botbuilder' -H 'Cookie: unq=ceAq8vvAYpoymyxS; _ga=GA1.2.1747719766.1500544695; _gid=GA1.2.1492743728.1500872710; connect.sid=s%3AEXEpfWlnQjPUqOL7j2bmtGY7q4sSpbTe.JjUmYoH4qzj4dBIDzkMLjS58MQ0nmQWbuMlbIbLsX1o' -H 'Connection: keep-alive' --data-binary '{\\\"name\\\":\\\"Botresponse\\\",\\\"type\\\":\\\"message\\\",\\\"message\\\":[{\\\"channel\\\":\\\"default\\\",\\\"text\\\":\\\"SOAP Request validation successful\\\",\\\"type\\\":\\\"basic\\\"}]}' --compressed"
					},
					"response": []
				},
				{
					"name": "Add Component to dialog",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "bearer {{SanityAcToken1}}"
							},
							{
								"key": "User-Agent",
								"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/59.0.3071.115 Safari/537.36"
							},
							{
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8"
							},
							{
								"key": "bot-language",
								"value": "{{Lang}}"
							},
							{
								"key": "Connection",
								"value": "keep-alive"
							},
							{
								"key": "accountId",
								"value": "{{SanityAccountID1}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"streamId\": \"{{SanityBotStreamId}}\",\n  \"name\": \"{{SanityIntentName1}}\",\n  \"nodes\": [\n    {\n      \"nodeOptions\": {\n        \"customTags\": {\n          \"session\": [],\n          \"message\": [],\n          \"user\": []\n        },\n        \"transitionType\": \"auto\",\n        \"promptOptions\": \"required\",\n        \"reuseMarkedupPhrases\": false,\n        \"interruptOptions\": {\n          \"priority\": \"task\"\n        },\n        \"transitionMode\": \"initiateCurrentTask\",\n        \"inputHandlingOptions\": \"useAsEntityValue\",\n        \"reuseOptions\": \"1\",\n        \"userInputCorrection\": true,\n        \"notForReuse\": false,\n        \"contextTags\": []\n      },\n      \"nodeId\": \"intent0\",\n      \"type\": \"intent\",\n      \"componentId\": \"{{SanityRefId1}}\",\n      \"transitions\": [\n        {\n          \"default\": \"script1\",\n          \"metadata\": {\n            \"color\": \"#299d8e\",\n            \"connId\": \"dummy0\"\n          }\n        }\n      ],\n      \"metadata\": {\n        \"left\": 30,\n        \"top\": 170\n      }\n    },\n    {\n      \"nodeOptions\": {\n        \"customTags\": {\n          \"session\": [],\n          \"message\": [],\n          \"user\": []\n        },\n        \"transitionType\": \"auto\",\n        \"promptOptions\": \"required\",\n        \"reuseMarkedupPhrases\": false,\n        \"interruptOptions\": {\n          \"priority\": \"task\"\n        },\n        \"transitionMode\": \"initiateCurrentTask\",\n        \"inputHandlingOptions\": \"useAsEntityValue\",\n        \"reuseOptions\": \"1\",\n        \"userInputCorrection\": true,\n        \"notForReuse\": false,\n        \"contextTags\": []\n      },\n      \"nodeId\": \"script1\",\n      \"type\": \"script\",\n      \"componentId\": \"{{ScriptRequestId1}}\",\n      \"transitions\": [\n        {\n          \"default\": \"\",\n          \"metadata\": {\n            \"color\": \"#299d8e\",\n            \"connId\": \"dummy1\"\n          }\n        }\n      ],\n      \"metadata\": {\n        \"left\": 331,\n        \"top\": 170\n      }\n    },\n    {\n      \"nodeId\": \"message2\",\n      \"type\": \"message\",\n      \"componentId\": \"{{variableMessageID1}}\",\n      \"transitions\": [\n        {\n          \"default\": \"\",\n          \"metadata\": {\n            \"color\": \"#299d8e\",\n            \"connId\": \"dummy3\"\n          }\n        }\n      ],\n      \"nodeOptions\": {\n        \"transitionType\": \"auto\"\n      }\n    }\n  ],\n  \"visibility\": {\n    \"namespace\": \"private\",\n    \"namespaceIds\": [\n      \"{{SanityUserID1}}\"\n    ]\n  }\n}"
						},
						"url": {
							"raw": "{{url}}/api/{{version}}/builder/streams/{{SanityBotStreamId}}/dialogs/{{SanityDialogID1}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"{{version}}",
								"builder",
								"streams",
								"{{SanityBotStreamId}}",
								"dialogs",
								"{{SanityDialogID1}}"
							]
						},
						"description": "Generated from a curl request: \ncurl 'https://qa1-bots.kore.ai/api/1.1/builder/streams/st-50d2f95b-caec-5eb2-9f20-fd38d046aadc/dialogs/dg-3e6131da-da58-5a96-becb-079f8aa93da9?rnd=5rnj0r' -H 'Authorization: bearer tIexWiLDp2hLaZhmLpiFUCdCFARigMoFGtJQWUqYMdKVK2FiikExDe7Q9C0Ych4L' -H 'Origin: https://qa1-bots.kore.ai' -H 'Accept-Encoding: gzip, deflate, br' -H 'Accept-Language: en-US,en;q=0.8' -H 'User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/59.0.3071.115 Safari/537.36' -H 'Content-Type: application/json;charset=UTF-8' -H 'Accept: application/json, text/plain, */*' -H 'Referer: https://qa1-bots.kore.ai/botbuilder' -H 'Cookie: unq=ceAq8vvAYpoymyxS; _ga=GA1.2.1747719766.1500544695; _gid=GA1.2.1492743728.1500872710; connect.sid=s%3AEXEpfWlnQjPUqOL7j2bmtGY7q4sSpbTe.JjUmYoH4qzj4dBIDzkMLjS58MQ0nmQWbuMlbIbLsX1o' -H 'Connection: keep-alive' -H 'X-HTTP-Method-Override: put' --data-binary '{\\\"streamId\\\":\\\"st-50d2f95b-caec-5eb2-9f20-fd38d046aadc\\\",\\\"name\\\":\\\"Verify SOAP Request\\\",\\\"nodes\\\":[{\\\"nodeId\\\":\\\"intent0\\\",\\\"type\\\":\\\"intent\\\",\\\"componentId\\\":\\\"dc-e13a263c-f7d7-5070-91d7-ca9356eec985\\\",\\\"transitions\\\":[{\\\"metadata\\\":{\\\"connId\\\":\\\"dummy0\\\",\\\"color\\\":\\\"#299d8e\\\"},\\\"default\\\":\\\"service1\\\"}],\\\"metadata\\\":{\\\"left\\\":31,\\\"top\\\":18},\\\"nodeOptions\\\":{\\\"transitionType\\\":\\\"auto\\\"}},{\\\"nodeId\\\":\\\"service1\\\",\\\"type\\\":\\\"service\\\",\\\"componentId\\\":\\\"dc-fb05b66b-8ff6-5468-8573-a05b298c0c51\\\",\\\"transitions\\\":[{\\\"metadata\\\":{\\\"connId\\\":\\\"dummy1\\\",\\\"color\\\":\\\"#299d8e\\\"},\\\"default\\\":\\\"\\\"}],\\\"nodeOptions\\\":{\\\"transitionType\\\":\\\"auto\\\"},\\\"metadata\\\":{\\\"left\\\":30,\\\"top\\\":171}},{\\\"nodeId\\\":\\\"message2\\\",\\\"type\\\":\\\"message\\\",\\\"componentId\\\":\\\"dc-c115ad54-ae26-5bb3-a66d-e9a3cd301fb2\\\",\\\"transitions\\\":[{\\\"default\\\":\\\"\\\",\\\"metadata\\\":{\\\"color\\\":\\\"#299d8e\\\",\\\"connId\\\":\\\"dummy2\\\"}}],\\\"nodeOptions\\\":{\\\"transitionType\\\":\\\"auto\\\"}}],\\\"visibility\\\":{\\\"namespaceIds\\\":[\\\"u-23d06a5c-f3c0-5f46-9c6f-808a014643dc\\\"],\\\"namespace\\\":\\\"private\\\"}}' --compressed"
					},
					"response": []
				},
				{
					"name": "Add Dialog To Bot",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "bearer {{SanityAcToken1}}"
							},
							{
								"key": "User-Agent",
								"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/59.0.3071.115 Safari/537.36"
							},
							{
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8"
							},
							{
								"key": "bot-language",
								"value": "{{Lang}}"
							},
							{
								"key": "Connection",
								"value": "keep-alive"
							},
							{
								"key": "accountId",
								"value": "{{SanityAccountID1}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"streamId\": \"{{SanityBotStreamId}}\",\n    \"name\": \"{{SanityIntentName1}}\",\n    \"nodes\": [\n        {\n            \"nodeOptions\": {\n                \"customTags\": {\n                    \"session\": [],\n                    \"message\": [],\n                    \"user\": []\n                },\n                \"transitionType\": \"auto\",\n                \"promptOptions\": \"required\",\n                \"reuseMarkedupPhrases\": false,\n                \"interruptOptions\": {\n                    \"priority\": \"task\"\n                },\n                \"transitionMode\": \"initiateCurrentTask\",\n                \"inputHandlingOptions\": \"useAsEntityValue\",\n                \"reuseOptions\": \"1\",\n                \"userInputCorrection\": true,\n                \"notForReuse\": false,\n                \"contextTags\": []\n            },\n            \"nodeId\": \"intent0\",\n            \"type\": \"intent\",\n            \"componentId\": \"{{SanityRefId1}}\",\n            \"transitions\": [\n                {\n                    \"default\": \"script1\",\n                    \"metadata\": {\n                        \"color\": \"#299d8e\",\n                        \"connId\": \"dummy0\"\n                    }\n                }\n            ],\n            \"metadata\": {\n                \"left\": 30,\n                \"top\": 170\n            }\n        },\n        {\n            \"nodeOptions\": {\n                \"customTags\": {\n                    \"session\": [],\n                    \"message\": [],\n                    \"user\": []\n                },\n                \"transitionType\": \"auto\",\n                \"promptOptions\": \"required\",\n                \"reuseMarkedupPhrases\": false,\n                \"interruptOptions\": {\n                    \"priority\": \"task\"\n                },\n                \"transitionMode\": \"initiateCurrentTask\",\n                \"inputHandlingOptions\": \"useAsEntityValue\",\n                \"reuseOptions\": \"1\",\n                \"userInputCorrection\": true,\n                \"notForReuse\": false,\n                \"contextTags\": [],\n                \"isOptional\": false\n            },\n            \"nodeId\": \"script1\",\n            \"type\": \"script\",\n            \"componentId\": \"{{ScriptRequestId1}}\",\n            \"transitions\": [\n                {\n                    \"default\": \"message2\",\n                    \"metadata\": {\n                        \"color\": \"#299d8e\",\n                        \"connId\": \"dummy1\"\n                    }\n                }\n            ],\n            \"metadata\": {\n                \"left\": 331,\n                \"top\": 170\n            }\n        },\n        {\n            \"nodeOptions\": {\n                \"customTags\": {\n                    \"session\": [],\n                    \"message\": [],\n                    \"user\": []\n                },\n                \"transitionType\": \"auto\",\n                \"promptOptions\": \"required\",\n                \"reuseMarkedupPhrases\": false,\n                \"interruptOptions\": {\n                    \"priority\": \"task\"\n                },\n                \"transitionMode\": \"initiateCurrentTask\",\n                \"inputHandlingOptions\": \"useAsEntityValue\",\n                \"reuseOptions\": \"1\",\n                \"userInputCorrection\": true,\n                \"notForReuse\": false,\n                \"contextTags\": []\n            },\n            \"nodeId\": \"message2\",\n            \"type\": \"message\",\n            \"componentId\": \"{{variableMessageID1}}\",\n            \"transitions\": [\n                {\n                    \"default\": \"\",\n                    \"metadata\": {\n                        \"color\": \"#299d8e\",\n                        \"connId\": \"dummy3\"\n                    }\n                }\n            ]\n        }\n    ],\n    \"visibility\": {\n        \"namespace\": \"private\",\n        \"namespaceIds\": [\n            \"{{SanityUserID1}}\"\n        ]\n    }\n}"
						},
						"url": {
							"raw": "{{url}}/api/{{version}}/builder/streams/{{SanityBotStreamId}}/dialogs/{{SanityDialogID1}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"{{version}}",
								"builder",
								"streams",
								"{{SanityBotStreamId}}",
								"dialogs",
								"{{SanityDialogID1}}"
							]
						},
						"description": "Generated from a curl request: \ncurl 'https://qa1-bots.kore.ai/api/1.1/builder/streams/st-50d2f95b-caec-5eb2-9f20-fd38d046aadc/dialogs/dg-3e6131da-da58-5a96-becb-079f8aa93da9?rnd=h2ovu' -H 'Authorization: bearer tIexWiLDp2hLaZhmLpiFUCdCFARigMoFGtJQWUqYMdKVK2FiikExDe7Q9C0Ych4L' -H 'Origin: https://qa1-bots.kore.ai' -H 'Accept-Encoding: gzip, deflate, br' -H 'Accept-Language: en-US,en;q=0.8' -H 'User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/59.0.3071.115 Safari/537.36' -H 'Content-Type: application/json;charset=UTF-8' -H 'Accept: application/json, text/plain, */*' -H 'Referer: https://qa1-bots.kore.ai/botbuilder' -H 'Cookie: unq=ceAq8vvAYpoymyxS; _ga=GA1.2.1747719766.1500544695; _gid=GA1.2.1492743728.1500872710; connect.sid=s%3AEXEpfWlnQjPUqOL7j2bmtGY7q4sSpbTe.JjUmYoH4qzj4dBIDzkMLjS58MQ0nmQWbuMlbIbLsX1o' -H 'Connection: keep-alive' -H 'X-HTTP-Method-Override: put' --data-binary '{\\\"streamId\\\":\\\"st-50d2f95b-caec-5eb2-9f20-fd38d046aadc\\\",\\\"name\\\":\\\"Verify SOAP Request\\\",\\\"nodes\\\":[{\\\"nodeId\\\":\\\"intent0\\\",\\\"type\\\":\\\"intent\\\",\\\"componentId\\\":\\\"dc-e13a263c-f7d7-5070-91d7-ca9356eec985\\\",\\\"transitions\\\":[{\\\"metadata\\\":{\\\"connId\\\":\\\"dummy0\\\",\\\"color\\\":\\\"#299d8e\\\"},\\\"default\\\":\\\"service1\\\"}],\\\"metadata\\\":{\\\"left\\\":31,\\\"top\\\":18},\\\"nodeOptions\\\":{\\\"transitionType\\\":\\\"auto\\\"}},{\\\"nodeId\\\":\\\"service1\\\",\\\"type\\\":\\\"service\\\",\\\"componentId\\\":\\\"dc-fb05b66b-8ff6-5468-8573-a05b298c0c51\\\",\\\"transitions\\\":[{\\\"default\\\":\\\"message2\\\",\\\"metadata\\\":{\\\"color\\\":\\\"#299d8e\\\",\\\"connId\\\":\\\"dummy1\\\"}}],\\\"metadata\\\":{\\\"left\\\":30,\\\"top\\\":171},\\\"nodeOptions\\\":{\\\"transitionType\\\":\\\"auto\\\"}},{\\\"nodeId\\\":\\\"message2\\\",\\\"type\\\":\\\"message\\\",\\\"componentId\\\":\\\"dc-c115ad54-ae26-5bb3-a66d-e9a3cd301fb2\\\",\\\"transitions\\\":[{\\\"default\\\":\\\"\\\",\\\"metadata\\\":{\\\"color\\\":\\\"#299d8e\\\",\\\"connId\\\":\\\"dummy2\\\"}}],\\\"nodeOptions\\\":{\\\"transitionType\\\":\\\"auto\\\"}}],\\\"visibility\\\":{\\\"namespaceIds\\\":[\\\"u-23d06a5c-f3c0-5f46-9c6f-808a014643dc\\\"],\\\"namespace\\\":\\\"private\\\"}}' --compressed"
					},
					"response": []
				},
				{
					"name": "End of transactions",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "bearer {{SanityAcToken1}}"
							},
							{
								"key": "User-Agent",
								"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/59.0.3071.115 Safari/537.36"
							},
							{
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8"
							},
							{
								"key": "bot-language",
								"value": "{{Lang}}"
							},
							{
								"key": "Connection",
								"value": "keep-alive"
							},
							{
								"key": "accountId",
								"value": "{{SanityAccountID1}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"transitions\": [\r\n        {\r\n            \"default\": \"end\",\r\n            \"metadata\": {\r\n                \"color\": \"#299d8e\",\r\n                \"connId\": \"dummy3\"\r\n            }\r\n        }\r\n    ],\r\n    \"nodeOptions\": {\r\n        \"transitionType\": \"auto\"\r\n    }\r\n}"
						},
						"url": {
							"raw": "{{url}}/api/{{version}}/builder/streams/{{SanityBotStreamId}}/dialogs/{{SanityDialogID1}}/nodes/message2",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"{{version}}",
								"builder",
								"streams",
								"{{SanityBotStreamId}}",
								"dialogs",
								"{{SanityDialogID1}}",
								"nodes",
								"message2"
							]
						},
						"description": "Generated from a curl request: \ncurl 'https://qa1-bots.kore.ai/api/1.1/builder/streams/st-50d2f95b-caec-5eb2-9f20-fd38d046aadc/dialogs/dg-3e6131da-da58-5a96-becb-079f8aa93da9/nodes/message2?rnd=yvzbrw' -H 'Authorization: bearer tIexWiLDp2hLaZhmLpiFUCdCFARigMoFGtJQWUqYMdKVK2FiikExDe7Q9C0Ych4L' -H 'Origin: https://qa1-bots.kore.ai' -H 'Accept-Encoding: gzip, deflate, br' -H 'Accept-Language: en-US,en;q=0.8' -H 'User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/59.0.3071.115 Safari/537.36' -H 'Content-Type: application/json;charset=UTF-8' -H 'Accept: application/json, text/plain, */*' -H 'Referer: https://qa1-bots.kore.ai/botbuilder' -H 'Cookie: unq=ceAq8vvAYpoymyxS; _ga=GA1.2.1747719766.1500544695; _gid=GA1.2.1492743728.1500872710; connect.sid=s%3AEXEpfWlnQjPUqOL7j2bmtGY7q4sSpbTe.JjUmYoH4qzj4dBIDzkMLjS58MQ0nmQWbuMlbIbLsX1o' -H 'Connection: keep-alive' -H 'X-HTTP-Method-Override: put' --data-binary '{\\\"transitions\\\":[{\\\"default\\\":\\\"end\\\",\\\"metadata\\\":{\\\"color\\\":\\\"#299d8e\\\",\\\"connId\\\":\\\"dummy2\\\"}}],\\\"nodeOptions\\\":{\\\"transitionType\\\":\\\"auto\\\"}}' --compressed"
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "1.04 TaskCreation_BalanceChecking",
			"item": [
				{
					"name": "Selecting Created Bot Copy",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"    function delay(ms) {\r",
									"        var cur_d = new Date();\r",
									"        var cur_ticks = cur_d.getTime();\r",
									"        var ms_passed = 0;\r",
									"        while(ms_passed < ms) {\r",
									"            var d = new Date();  // Possible memory leak?\r",
									"            var ticks = d.getTime();\r",
									"            ms_passed = ticks - cur_ticks;\r",
									"        }\r",
									"    }\r",
									"    delay(4000);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "bearer {{SanityAcToken1}}"
							},
							{
								"key": "bot-language",
								"value": "{{Lang}}"
							},
							{
								"key": "Connection",
								"value": "keep-alive"
							},
							{
								"key": "accountId",
								"value": "{{SanityAccountID1}}"
							}
						],
						"url": {
							"raw": "{{url}}/api/{{version}}/users/{{SanityUserID1}}/builder/streams/{{SanityBotStreamId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"{{version}}",
								"users",
								"{{SanityUserID1}}",
								"builder",
								"streams",
								"{{SanityBotStreamId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create_Intent_Component",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"\r",
									"var data = JSON.parse(responseBody);\r",
									"pm.environment.set(\"GetBalanceComponentId1\", data._id);\r",
									"pm.environment.set(\"GetBalanceIntentName\",data.name)\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "authority",
								"value": "staging-bots.korebots.com"
							},
							{
								"key": "x-timezone-offset",
								"value": "-330"
							},
							{
								"key": "authorization",
								"value": "bearer {{SanityAcToken1}}"
							},
							{
								"key": "state",
								"value": "configured"
							},
							{
								"key": "content-type",
								"value": "application/json;charset=UTF-8"
							},
							{
								"key": "accept",
								"value": "application/json, text/plain, */*"
							},
							{
								"key": "user-agent",
								"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.105 Safari/537.36"
							},
							{
								"key": "bot-language",
								"value": "{{Lang}}"
							},
							{
								"key": "accountid",
								"value": "{{SanityAccountID1}}"
							},
							{
								"key": "origin",
								"value": "https://staging-bots.korebots.com"
							},
							{
								"key": "sec-fetch-site",
								"value": "same-origin"
							},
							{
								"key": "sec-fetch-mode",
								"value": "cors"
							},
							{
								"key": "sec-fetch-dest",
								"value": "empty"
							},
							{
								"key": "referer",
								"value": "https://staging-bots.korebots.com/botbuilder"
							},
							{
								"key": "accept-language",
								"value": "en-US,en;q=0.9"
							},
							{
								"key": "cookie",
								"value": "_ga=GA1.2.1992162004.1597057879; _gid=GA1.2.1823399538.1597057879"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"desc\": \"Balance Checking\",\r\n    \"type\": \"intent\",\r\n    \"intent\": \"GetBalance\",\r\n    \"preConditions\": []\r\n}"
						},
						"url": {
							"raw": "{{url}}/api/{{version}}/builder/streams/{{SanityBotStreamId}}/components",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"{{version}}",
								"builder",
								"streams",
								"{{SanityBotStreamId}}",
								"components"
							]
						}
					},
					"response": []
				},
				{
					"name": "AddComponentToDialog",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"var data = JSON.parse(responseBody);\r",
									"pm.environment.set(\"GetbalanceDialogID\",data._id)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "authority",
								"value": "staging-bots.korebots.com"
							},
							{
								"key": "x-timezone-offset",
								"value": "-330"
							},
							{
								"key": "authorization",
								"value": "bearer {{SanityAcToken1}}"
							},
							{
								"key": "state",
								"value": "configured"
							},
							{
								"key": "content-type",
								"value": "application/json;charset=UTF-8"
							},
							{
								"key": "accept",
								"value": "application/json, text/plain, */*"
							},
							{
								"key": "user-agent",
								"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.105 Safari/537.36"
							},
							{
								"key": "bot-language",
								"value": "{{Lang}}"
							},
							{
								"key": "accountid",
								"value": "{{SanityAccountID1}}"
							},
							{
								"key": "origin",
								"value": "https://staging-bots.korebots.com"
							},
							{
								"key": "sec-fetch-site",
								"value": "same-origin"
							},
							{
								"key": "sec-fetch-mode",
								"value": "cors"
							},
							{
								"key": "sec-fetch-dest",
								"value": "empty"
							},
							{
								"key": "referer",
								"value": "https://staging-bots.korebots.com/botbuilder"
							},
							{
								"key": "accept-language",
								"value": "en-US,en;q=0.9"
							},
							{
								"key": "cookie",
								"value": "_ga=GA1.2.1992162004.1597057879; _gid=GA1.2.1823399538.1597057879"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{GetBalanceIntentName}}\",\r\n    \"shortDesc\": \"\",\r\n    \"nodes\": [\r\n        {\r\n            \"nodeId\": \"intent0\",\r\n            \"type\": \"intent\",\r\n            \"componentId\": \"{{GetBalanceComponentId1}}\",\r\n            \"transitions\": [\r\n                {\r\n                    \"default\": \"\",\r\n                    \"metadata\": {\r\n                        \"color\": \"#299d8e\",\r\n                        \"connId\": \"dummy0\"\r\n                    }\r\n                }\r\n            ],\r\n            \"metadata\": {\r\n                \"left\": 30,\r\n                \"top\": 170\r\n            },\r\n            \"nodeOptions\": {\r\n                \"contextTags\": []\r\n            }\r\n        }\r\n    ],\r\n    \"visibility\": {\r\n        \"namespace\": \"private\",\r\n        \"namespaceIds\": [\r\n            \"\"\r\n        ]\r\n    },\r\n    \"isFollowUp\": false,\r\n    \"isHidden\": false,\r\n    \"interruptOptions\": {\r\n        \"priority\": \"bot\"\r\n    }\r\n}"
						},
						"url": {
							"raw": "{{url}}/api/{{version}}/builder/streams/{{SanityBotStreamId}}/dialogs",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"{{version}}",
								"builder",
								"streams",
								"{{SanityBotStreamId}}",
								"dialogs"
							]
						}
					},
					"response": []
				},
				{
					"name": "AddDialogToBot",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "authority",
								"value": "staging-bots.korebots.com"
							},
							{
								"key": "x-timezone-offset",
								"value": "-330"
							},
							{
								"key": "authorization",
								"value": "bearer {{SanityAcToken1}}"
							},
							{
								"key": "state",
								"value": "configured"
							},
							{
								"key": "content-type",
								"value": "application/json;charset=UTF-8"
							},
							{
								"key": "accept",
								"value": "application/json, text/plain, */*"
							},
							{
								"key": "bot-language",
								"value": "{{Lang}}"
							},
							{
								"key": "user-agent",
								"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.105 Safari/537.36"
							},
							{
								"key": "x-http-method-override",
								"value": "put"
							},
							{
								"key": "accountid",
								"value": "{{SanityAccountID1}}"
							},
							{
								"key": "origin",
								"value": "https://staging-bots.korebots.com"
							},
							{
								"key": "sec-fetch-site",
								"value": "same-origin"
							},
							{
								"key": "sec-fetch-mode",
								"value": "cors"
							},
							{
								"key": "sec-fetch-dest",
								"value": "empty"
							},
							{
								"key": "referer",
								"value": "https://staging-bots.korebots.com/botbuilder"
							},
							{
								"key": "accept-language",
								"value": "en-US,en;q=0.9"
							},
							{
								"key": "cookie",
								"value": "_ga=GA1.2.1992162004.1597057879; _gid=GA1.2.1823399538.1597057879"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{GetBalanceIntentName}}\",\r\n    \"dialogId\": \"{{GetbalanceDialogID}}\"\r\n}"
						},
						"url": {
							"raw": "{{url}}/api/{{version}}/builder/streams/{{SanityBotStreamId}}/components/{{GetBalanceComponentId1}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"{{version}}",
								"builder",
								"streams",
								"{{SanityBotStreamId}}",
								"components",
								"{{GetBalanceComponentId1}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "EntityCreation_Number",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"var data = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"GetBalanceComponentId2\", data._id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "authority",
								"value": "staging-bots.korebots.com"
							},
							{
								"key": "x-timezone-offset",
								"value": "-330"
							},
							{
								"key": "authorization",
								"value": "bearer {{SanityAcToken1}}"
							},
							{
								"key": "state",
								"value": "configured"
							},
							{
								"key": "content-type",
								"value": "application/json;charset=UTF-8"
							},
							{
								"key": "accept",
								"value": "application/json, text/plain, */*"
							},
							{
								"key": "user-agent",
								"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.105 Safari/537.36"
							},
							{
								"key": "bot-language",
								"value": "{{Lang}}"
							},
							{
								"key": "accountid",
								"value": "{{SanityAccountID1}}"
							},
							{
								"key": "origin",
								"value": "https://staging-bots.korebots.com"
							},
							{
								"key": "sec-fetch-site",
								"value": "same-origin"
							},
							{
								"key": "sec-fetch-mode",
								"value": "cors"
							},
							{
								"key": "sec-fetch-dest",
								"value": "empty"
							},
							{
								"key": "referer",
								"value": "https://staging-bots.korebots.com/botbuilder"
							},
							{
								"key": "accept-language",
								"value": "en-US,en;q=0.9"
							},
							{
								"key": "cookie",
								"value": "_ga=GA1.2.1992162004.1597057879; _gid=GA1.2.1823399538.1597057879"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"number\",\r\n    \"type\": \"entity\",\r\n    \"message\": [\r\n        {\r\n            \"channel\": \"default\",\r\n            \"text\": \"Please provide your account number\",\r\n            \"type\": \"basic\"\r\n        }\r\n    ],\r\n    \"entityType\": \"number\",\r\n    \"errorMessage\": [\r\n        {\r\n            \"text\": \"I'm sorry, I did not recognize the number you entered. Please enter the number again.\",\r\n            \"type\": \"basic\",\r\n            \"channel\": \"default\"\r\n        }\r\n    ]\r\n}"
						},
						"url": {
							"raw": "{{url}}/api/{{version}}/builder/streams/{{SanityBotStreamId}}/components",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"{{version}}",
								"builder",
								"streams",
								"{{SanityBotStreamId}}",
								"components"
							]
						}
					},
					"response": []
				},
				{
					"name": "AddEntityComponent",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "authority",
								"value": "staging-bots.korebots.com"
							},
							{
								"key": "x-timezone-offset",
								"value": "-330"
							},
							{
								"key": "authorization",
								"value": "bearer {{SanityAcToken1}}"
							},
							{
								"key": "state",
								"value": "configured"
							},
							{
								"key": "content-type",
								"value": "application/json;charset=UTF-8"
							},
							{
								"key": "accept",
								"value": "application/json, text/plain, */*"
							},
							{
								"key": "bot-language",
								"value": "{{Lang}}"
							},
							{
								"key": "user-agent",
								"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.105 Safari/537.36"
							},
							{
								"key": "x-http-method-override",
								"value": "put"
							},
							{
								"key": "accountid",
								"value": "{{SanityAccountID1}}"
							},
							{
								"key": "origin",
								"value": "https://staging-bots.korebots.com"
							},
							{
								"key": "sec-fetch-site",
								"value": "same-origin"
							},
							{
								"key": "sec-fetch-mode",
								"value": "cors"
							},
							{
								"key": "sec-fetch-dest",
								"value": "empty"
							},
							{
								"key": "referer",
								"value": "https://staging-bots.korebots.com/botbuilder"
							},
							{
								"key": "accept-language",
								"value": "en-US,en;q=0.9"
							},
							{
								"key": "cookie",
								"value": "_ga=GA1.2.1992162004.1597057879; _gid=GA1.2.1823399538.1597057879"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"streamId\": \"{{SanityBotStreamId}}\",\r\n    \"name\": \"{{GetBalanceIntentName}}\",\r\n    \"nodes\": [\r\n        {\r\n            \"nodeOptions\": {\r\n                \"customTags\": {\r\n                    \"session\": [],\r\n                    \"message\": [],\r\n                    \"user\": []\r\n                },\r\n                \"transitionType\": \"auto\",\r\n                \"promptOptions\": \"required\",\r\n                \"reuseMarkedupPhrases\": false,\r\n                \"interruptOptions\": {\r\n                    \"priority\": \"task\"\r\n                },\r\n                \"transitionMode\": \"initiateCurrentTask\",\r\n                \"inputHandlingOptions\": \"useAsEntityValue\",\r\n                \"reuseOptions\": \"1\",\r\n                \"userInputCorrection\": true,\r\n                \"notForReuse\": false,\r\n                \"contextTags\": []\r\n            },\r\n            \"nodeId\": \"intent0\",\r\n            \"type\": \"intent\",\r\n            \"componentId\": \"{{GetBalanceComponentId1}}\",\r\n            \"transitions\": [\r\n                {\r\n                    \"default\": \"\",\r\n                    \"metadata\": {\r\n                        \"color\": \"#299d8e\",\r\n                        \"connId\": \"dummy0\"\r\n                    }\r\n                }\r\n            ],\r\n            \"metadata\": {\r\n                \"left\": 30,\r\n                \"top\": 170\r\n            }\r\n        },\r\n        {\r\n            \"nodeId\": \"entity1\",\r\n            \"type\": \"entity\",\r\n            \"componentId\": \"{{GetBalanceComponentId2}}\",\r\n            \"transitions\": [\r\n                {\r\n                    \"default\": \"\",\r\n                    \"metadata\": {\r\n                        \"color\": \"#299d8e\",\r\n                        \"connId\": \"dummy1\"\r\n                    }\r\n                }\r\n            ],\r\n            \"nodeOptions\": {\r\n                \"transitionType\": \"auto\",\r\n                \"isOptional\": false,\r\n                \"promptOptions\": \"required\",\r\n                \"interruptOptions\": {\r\n                    \"interruptsEnabled\": true,\r\n                    \"priority\": \"task\"\r\n                }\r\n            }\r\n        }\r\n    ],\r\n    \"visibility\": {\r\n        \"namespace\": \"private\",\r\n        \"namespaceIds\": [\r\n            \"\"\r\n        ]\r\n    }\r\n}"
						},
						"url": {
							"raw": "{{url}}/api/{{version}}/builder/streams/{{SanityBotStreamId}}/dialogs/{{GetbalanceDialogID}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"{{version}}",
								"builder",
								"streams",
								"{{SanityBotStreamId}}",
								"dialogs",
								"{{GetbalanceDialogID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "AddEntityComponent1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "authority",
								"value": "staging-bots.korebots.com"
							},
							{
								"key": "x-timezone-offset",
								"value": "-330"
							},
							{
								"key": "authorization",
								"value": "bearer {{SanityAcToken1}}"
							},
							{
								"key": "state",
								"value": "configured"
							},
							{
								"key": "content-type",
								"value": "application/json;charset=UTF-8"
							},
							{
								"key": "accept",
								"value": "application/json, text/plain, */*"
							},
							{
								"key": "bot-language",
								"value": "{{Lang}}"
							},
							{
								"key": "user-agent",
								"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.105 Safari/537.36"
							},
							{
								"key": "x-http-method-override",
								"value": "put"
							},
							{
								"key": "accountid",
								"value": "{{SanityAccountID1}}"
							},
							{
								"key": "origin",
								"value": "https://staging-bots.korebots.com"
							},
							{
								"key": "sec-fetch-site",
								"value": "same-origin"
							},
							{
								"key": "sec-fetch-mode",
								"value": "cors"
							},
							{
								"key": "sec-fetch-dest",
								"value": "empty"
							},
							{
								"key": "referer",
								"value": "https://staging-bots.korebots.com/botbuilder"
							},
							{
								"key": "accept-language",
								"value": "en-US,en;q=0.9"
							},
							{
								"key": "cookie",
								"value": "_ga=GA1.2.1992162004.1597057879; _gid=GA1.2.1823399538.1597057879"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"streamId\": \"{{SanityBotStreamId}}\",\r\n    \"name\": \"{{GetBalanceIntentName}}\",\r\n    \"nodes\": [\r\n        {\r\n            \"nodeOptions\": {\r\n                \"customTags\": {\r\n                    \"session\": [],\r\n                    \"message\": [],\r\n                    \"user\": []\r\n                },\r\n                \"transitionType\": \"auto\",\r\n                \"promptOptions\": \"required\",\r\n                \"reuseMarkedupPhrases\": false,\r\n                \"interruptOptions\": {\r\n                    \"priority\": \"task\"\r\n                },\r\n                \"transitionMode\": \"initiateCurrentTask\",\r\n                \"inputHandlingOptions\": \"useAsEntityValue\",\r\n                \"reuseOptions\": \"1\",\r\n                \"userInputCorrection\": true,\r\n                \"notForReuse\": false,\r\n                \"contextTags\": [],\r\n                \"isOptional\": false\r\n            },\r\n            \"nodeId\": \"intent0\",\r\n            \"type\": \"intent\",\r\n            \"componentId\": \"{{GetBalanceComponentId1}}\",\r\n            \"transitions\": [\r\n                {\r\n                    \"default\": \"entity1\",\r\n                    \"metadata\": {\r\n                        \"color\": \"#299d8e\",\r\n                        \"connId\": \"dummy0\"\r\n                    }\r\n                }\r\n            ],\r\n            \"metadata\": {\r\n                \"left\": 30,\r\n                \"top\": 170\r\n            }\r\n        },\r\n        {\r\n            \"nodeOptions\": {\r\n                \"customTags\": {\r\n                    \"session\": [],\r\n                    \"message\": [],\r\n                    \"user\": []\r\n                },\r\n                \"transitionType\": \"auto\",\r\n                \"promptOptions\": \"required\",\r\n                \"reuseMarkedupPhrases\": false,\r\n                \"interruptOptions\": {\r\n                    \"interruptsEnabled\": true,\r\n                    \"priority\": \"task\"\r\n                },\r\n                \"transitionMode\": \"initiateCurrentTask\",\r\n                \"inputHandlingOptions\": \"useAsEntityValue\",\r\n                \"reuseOptions\": \"1\",\r\n                \"userInputCorrection\": true,\r\n                \"notForReuse\": false,\r\n                \"contextTags\": [],\r\n                \"precedence\": \"entityOverIntent\"\r\n            },\r\n            \"nodeId\": \"entity1\",\r\n            \"type\": \"entity\",\r\n            \"componentId\": \"{{GetBalanceComponentId2}}\",\r\n            \"transitions\": [\r\n                {\r\n                    \"default\": \"\",\r\n                    \"metadata\": {\r\n                        \"color\": \"#299d8e\",\r\n                        \"connId\": \"dummy1\"\r\n                    }\r\n                }\r\n            ]\r\n        }\r\n    ],\r\n    \"visibility\": {\r\n        \"namespace\": \"private\",\r\n        \"namespaceIds\": [\r\n            \"{{SanityUserID1}}\"\r\n        ]\r\n    }\r\n}"
						},
						"url": {
							"raw": "{{url}}/api/{{version}}/builder/streams/{{SanityBotStreamId}}/dialogs/{{GetbalanceDialogID}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"{{version}}",
								"builder",
								"streams",
								"{{SanityBotStreamId}}",
								"dialogs",
								"{{GetbalanceDialogID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "AddEntityToDialog",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "authority",
								"value": "staging-bots.korebots.com"
							},
							{
								"key": "x-timezone-offset",
								"value": "-330"
							},
							{
								"key": "authorization",
								"value": "bearer {{SanityAcToken1}}"
							},
							{
								"key": "state",
								"value": "configured"
							},
							{
								"key": "content-type",
								"value": "application/json;charset=UTF-8"
							},
							{
								"key": "accept",
								"value": "application/json, text/plain, */*"
							},
							{
								"key": "bot-language",
								"value": "{{Lang}}"
							},
							{
								"key": "user-agent",
								"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.105 Safari/537.36"
							},
							{
								"key": "x-http-method-override",
								"value": "put"
							},
							{
								"key": "accountid",
								"value": "{{SanityAccountID1}}"
							},
							{
								"key": "origin",
								"value": "https://staging-bots.korebots.com"
							},
							{
								"key": "sec-fetch-site",
								"value": "same-origin"
							},
							{
								"key": "sec-fetch-mode",
								"value": "cors"
							},
							{
								"key": "sec-fetch-dest",
								"value": "empty"
							},
							{
								"key": "referer",
								"value": "https://staging-bots.korebots.com/botbuilder"
							},
							{
								"key": "accept-language",
								"value": "en-US,en;q=0.9"
							},
							{
								"key": "cookie",
								"value": "_ga=GA1.2.1992162004.1597057879; _gid=GA1.2.1823399538.1597057879"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"metadata\":{\"left\":332,\"top\":170}}"
						},
						"url": {
							"raw": "{{url}}/api/{{version}}/builder/streams/{{SanityBotStreamId}}/dialogs/{{GetbalanceDialogID}}/nodes/entity1",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"{{version}}",
								"builder",
								"streams",
								"{{SanityBotStreamId}}",
								"dialogs",
								"{{GetbalanceDialogID}}",
								"nodes",
								"entity1"
							]
						}
					},
					"response": []
				},
				{
					"name": "CreateServiceRequest",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"var data = JSON.parse(responseBody);\r",
									"pm.environment.set(\"GetBalanceComponentId3\", data._id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "authority",
								"value": "staging-bots.korebots.com"
							},
							{
								"key": "x-timezone-offset",
								"value": "-330"
							},
							{
								"key": "authorization",
								"value": "bearer {{SanityAcToken1}}"
							},
							{
								"key": "state",
								"value": "configured"
							},
							{
								"key": "content-type",
								"value": "application/json;charset=UTF-8"
							},
							{
								"key": "accept",
								"value": "application/json, text/plain, */*"
							},
							{
								"key": "user-agent",
								"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.105 Safari/537.36"
							},
							{
								"key": "bot-language",
								"value": "{{Lang}}"
							},
							{
								"key": "accountid",
								"value": "{{SanityAccountID1}}"
							},
							{
								"key": "origin",
								"value": "https://staging-bots.korebots.com"
							},
							{
								"key": "sec-fetch-site",
								"value": "same-origin"
							},
							{
								"key": "sec-fetch-mode",
								"value": "cors"
							},
							{
								"key": "sec-fetch-dest",
								"value": "empty"
							},
							{
								"key": "referer",
								"value": "https://staging-bots.korebots.com/botbuilder"
							},
							{
								"key": "accept-language",
								"value": "en-US,en;q=0.9"
							},
							{
								"key": "cookie",
								"value": "_ga=GA1.2.1992162004.1597057879; _gid=GA1.2.1823399538.1597057879"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"TimesService\",\r\n    \"serviceType\": \"rest\",\r\n    \"serviceNodeType\": \"custom\",\r\n    \"type\": \"service\"\r\n}"
						},
						"url": {
							"raw": "{{url}}/api/{{version}}/builder/streams/{{SanityBotStreamId}}/components",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"{{version}}",
								"builder",
								"streams",
								"{{SanityBotStreamId}}",
								"components"
							]
						}
					},
					"response": []
				},
				{
					"name": "AddServiceComponentToDialog",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "authority",
								"value": "staging-bots.korebots.com"
							},
							{
								"key": "x-timezone-offset",
								"value": "-330"
							},
							{
								"key": "authorization",
								"value": "bearer {{SanityAcToken1}}"
							},
							{
								"key": "state",
								"value": "configured"
							},
							{
								"key": "content-type",
								"value": "application/json;charset=UTF-8"
							},
							{
								"key": "accept",
								"value": "application/json, text/plain, */*"
							},
							{
								"key": "bot-language",
								"value": "{{Lang}}"
							},
							{
								"key": "user-agent",
								"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.105 Safari/537.36"
							},
							{
								"key": "x-http-method-override",
								"value": "put"
							},
							{
								"key": "accountid",
								"value": "{{SanityAccountID1}}"
							},
							{
								"key": "origin",
								"value": "https://staging-bots.korebots.com"
							},
							{
								"key": "sec-fetch-site",
								"value": "same-origin"
							},
							{
								"key": "sec-fetch-mode",
								"value": "cors"
							},
							{
								"key": "sec-fetch-dest",
								"value": "empty"
							},
							{
								"key": "referer",
								"value": "https://staging-bots.korebots.com/botbuilder"
							},
							{
								"key": "accept-language",
								"value": "en-US,en;q=0.9"
							},
							{
								"key": "cookie",
								"value": "_ga=GA1.2.1992162004.1597057879; _gid=GA1.2.1823399538.1597057879"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"streamId\": \"{{SanityBotStreamId}}\",\r\n    \"name\": \"{{GetBalanceIntentName}}\",\r\n    \"nodes\": [\r\n        {\r\n            \"nodeOptions\": {\r\n                \"customTags\": {\r\n                    \"session\": [],\r\n                    \"message\": [],\r\n                    \"user\": []\r\n                },\r\n                \"transitionType\": \"auto\",\r\n                \"promptOptions\": \"required\",\r\n                \"reuseMarkedupPhrases\": false,\r\n                \"interruptOptions\": {\r\n                    \"priority\": \"task\"\r\n                },\r\n                \"transitionMode\": \"initiateCurrentTask\",\r\n                \"inputHandlingOptions\": \"useAsEntityValue\",\r\n                \"reuseOptions\": \"1\",\r\n                \"userInputCorrection\": true,\r\n                \"notForReuse\": false,\r\n                \"contextTags\": []\r\n            },\r\n            \"nodeId\": \"intent0\",\r\n            \"type\": \"intent\",\r\n            \"componentId\": \"{{GetBalanceComponentId1}}\",\r\n            \"transitions\": [\r\n                {\r\n                    \"default\": \"entity1\",\r\n                    \"metadata\": {\r\n                        \"color\": \"#299d8e\",\r\n                        \"connId\": \"dummy0\"\r\n                    }\r\n                }\r\n            ],\r\n            \"metadata\": {\r\n                \"left\": 30,\r\n                \"top\": 170\r\n            }\r\n        },\r\n        {\r\n            \"nodeOptions\": {\r\n                \"customTags\": {\r\n                    \"session\": [],\r\n                    \"message\": [],\r\n                    \"user\": []\r\n                },\r\n                \"transitionType\": \"auto\",\r\n                \"promptOptions\": \"required\",\r\n                \"reuseMarkedupPhrases\": false,\r\n                \"interruptOptions\": {\r\n                    \"interruptsEnabled\": true,\r\n                    \"priority\": \"task\"\r\n                },\r\n                \"transitionMode\": \"initiateCurrentTask\",\r\n                \"inputHandlingOptions\": \"useAsEntityValue\",\r\n                \"reuseOptions\": \"1\",\r\n                \"userInputCorrection\": true,\r\n                \"notForReuse\": false,\r\n                \"contextTags\": [],\r\n                \"precedence\": \"entityOverIntent\"\r\n            },\r\n            \"nodeId\": \"entity1\",\r\n            \"type\": \"entity\",\r\n            \"componentId\": \"{{GetBalanceComponentId2}}\",\r\n            \"transitions\": [\r\n                {\r\n                    \"default\": \"\",\r\n                    \"metadata\": {\r\n                        \"color\": \"#299d8e\",\r\n                        \"connId\": \"dummy1\"\r\n                    }\r\n                }\r\n            ],\r\n            \"metadata\": {\r\n                \"left\": 332,\r\n                \"top\": 170\r\n            }\r\n        },\r\n        {\r\n            \"nodeId\": \"service2\",\r\n            \"type\": \"service\",\r\n            \"componentId\": \"{{GetBalanceComponentId3}}\",\r\n            \"transitions\": [\r\n                {\r\n                    \"default\": \"\",\r\n                    \"metadata\": {\r\n                        \"color\": \"#299d8e\",\r\n                        \"connId\": \"dummy3\"\r\n                    }\r\n                }\r\n            ],\r\n            \"nodeOptions\": {\r\n                \"transitionType\": \"auto\"\r\n            }\r\n        }\r\n    ],\r\n    \"visibility\": {\r\n        \"namespace\": \"private\",\r\n        \"namespaceIds\": [\r\n            \"{{SanityUserID1}}\"\r\n            \r\n        ]\r\n    }\r\n}"
						},
						"url": {
							"raw": "{{url}}/api/{{version}}/builder/streams/{{SanityBotStreamId}}/dialogs/{{GetbalanceDialogID}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"{{version}}",
								"builder",
								"streams",
								"{{SanityBotStreamId}}",
								"dialogs",
								"{{GetbalanceDialogID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "AddServiceComponentToBot",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "authority",
								"value": "staging-bots.korebots.com"
							},
							{
								"key": "x-timezone-offset",
								"value": "-330"
							},
							{
								"key": "authorization",
								"value": "bearer {{SanityAcToken1}}"
							},
							{
								"key": "state",
								"value": "configured"
							},
							{
								"key": "content-type",
								"value": "application/json;charset=UTF-8"
							},
							{
								"key": "accept",
								"value": "application/json, text/plain, */*"
							},
							{
								"key": "bot-language",
								"value": "{{Lang}}"
							},
							{
								"key": "user-agent",
								"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.105 Safari/537.36"
							},
							{
								"key": "x-http-method-override",
								"value": "put"
							},
							{
								"key": "accountid",
								"value": "{{SanityAccountID1}}"
							},
							{
								"key": "origin",
								"value": "https://staging-bots.korebots.com"
							},
							{
								"key": "sec-fetch-site",
								"value": "same-origin"
							},
							{
								"key": "sec-fetch-mode",
								"value": "cors"
							},
							{
								"key": "sec-fetch-dest",
								"value": "empty"
							},
							{
								"key": "referer",
								"value": "https://staging-bots.korebots.com/botbuilder"
							},
							{
								"key": "accept-language",
								"value": "en-US,en;q=0.9"
							},
							{
								"key": "cookie",
								"value": "_ga=GA1.2.1992162004.1597057879; _gid=GA1.2.1823399538.1597057879"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"streamId\": \"{{SanityBotStreamId}}\",\r\n    \"name\": \"{{GetBalanceIntentName}}\",\r\n    \"nodes\": [\r\n        {\r\n            \"nodeOptions\": {\r\n                \"customTags\": {\r\n                    \"session\": [],\r\n                    \"message\": [],\r\n                    \"user\": []\r\n                },\r\n                \"transitionType\": \"auto\",\r\n                \"promptOptions\": \"required\",\r\n                \"reuseMarkedupPhrases\": false,\r\n                \"interruptOptions\": {\r\n                    \"priority\": \"task\"\r\n                },\r\n                \"transitionMode\": \"initiateCurrentTask\",\r\n                \"inputHandlingOptions\": \"useAsEntityValue\",\r\n                \"reuseOptions\": \"1\",\r\n                \"userInputCorrection\": true,\r\n                \"notForReuse\": false,\r\n                \"contextTags\": []\r\n            },\r\n            \"nodeId\": \"intent0\",\r\n            \"type\": \"intent\",\r\n            \"componentId\": \"{{GetBalanceComponentId1}}\",\r\n            \"transitions\": [\r\n                {\r\n                    \"default\": \"entity1\",\r\n                    \"metadata\": {\r\n                        \"color\": \"#299d8e\",\r\n                        \"connId\": \"dummy0\"\r\n                    }\r\n                }\r\n            ],\r\n            \"metadata\": {\r\n                \"left\": 30,\r\n                \"top\": 170\r\n            }\r\n        },\r\n        {\r\n            \"nodeOptions\": {\r\n                \"customTags\": {\r\n                    \"session\": [],\r\n                    \"message\": [],\r\n                    \"user\": []\r\n                },\r\n                \"transitionType\": \"auto\",\r\n                \"promptOptions\": \"required\",\r\n                \"reuseMarkedupPhrases\": false,\r\n                \"interruptOptions\": {\r\n                    \"interruptsEnabled\": true,\r\n                    \"priority\": \"task\"\r\n                },\r\n                \"transitionMode\": \"initiateCurrentTask\",\r\n                \"inputHandlingOptions\": \"useAsEntityValue\",\r\n                \"reuseOptions\": \"1\",\r\n                \"userInputCorrection\": true,\r\n                \"notForReuse\": false,\r\n                \"contextTags\": [],\r\n                \"precedence\": \"entityOverIntent\",\r\n                \"isOptional\": false\r\n            },\r\n            \"nodeId\": \"entity1\",\r\n            \"type\": \"entity\",\r\n            \"componentId\": \"{{GetBalanceComponentId2}}\",\r\n            \"transitions\": [\r\n                {\r\n                    \"default\": \"service2\",\r\n                    \"metadata\": {\r\n                        \"color\": \"#299d8e\",\r\n                        \"connId\": \"dummy1\"\r\n                    }\r\n                }\r\n            ],\r\n            \"metadata\": {\r\n                \"left\": 332,\r\n                \"top\": 170\r\n            }\r\n        },\r\n        {\r\n            \"nodeOptions\": {\r\n                \"customTags\": {\r\n                    \"session\": [],\r\n                    \"message\": [],\r\n                    \"user\": []\r\n                },\r\n                \"transitionType\": \"auto\",\r\n                \"promptOptions\": \"required\",\r\n                \"reuseMarkedupPhrases\": false,\r\n                \"interruptOptions\": {\r\n                    \"priority\": \"task\"\r\n                },\r\n                \"transitionMode\": \"initiateCurrentTask\",\r\n                \"inputHandlingOptions\": \"useAsEntityValue\",\r\n                \"reuseOptions\": \"1\",\r\n                \"userInputCorrection\": true,\r\n                \"notForReuse\": false,\r\n                \"contextTags\": []\r\n            },\r\n            \"nodeId\": \"service2\",\r\n            \"type\": \"service\",\r\n            \"componentId\": \"{{GetBalanceComponentId3}}\",\r\n            \"transitions\": [\r\n                {\r\n                    \"default\": \"\",\r\n                    \"metadata\": {\r\n                        \"color\": \"#299d8e\",\r\n                        \"connId\": \"dummy3\"\r\n                    }\r\n                }\r\n            ]\r\n        }\r\n    ],\r\n    \"visibility\": {\r\n        \"namespace\": \"private\",\r\n        \"namespaceIds\": [\r\n            \"{{SanityUserID1}}\"\r\n        ]\r\n    }\r\n}"
						},
						"url": {
							"raw": "{{url}}/api/{{version}}/builder/streams/{{SanityBotStreamId}}/dialogs/{{GetbalanceDialogID}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"{{version}}",
								"builder",
								"streams",
								"{{SanityBotStreamId}}",
								"dialogs",
								"{{GetbalanceDialogID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "RestServiceRequest",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "authority",
								"value": "staging-bots.korebots.com"
							},
							{
								"key": "x-timezone-offset",
								"value": "-330"
							},
							{
								"key": "authorization",
								"value": "bearer {{SanityAcToken1}}"
							},
							{
								"key": "state",
								"value": "configured"
							},
							{
								"key": "content-type",
								"value": "application/json;charset=UTF-8"
							},
							{
								"key": "accept",
								"value": "application/json, text/plain, */*"
							},
							{
								"key": "bot-language",
								"value": "{{Lang}}"
							},
							{
								"key": "user-agent",
								"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.105 Safari/537.36"
							},
							{
								"key": "x-http-method-override",
								"value": "put"
							},
							{
								"key": "accountid",
								"value": "{{SanityAccountID1}}"
							},
							{
								"key": "origin",
								"value": "https://staging-bots.korebots.com"
							},
							{
								"key": "sec-fetch-site",
								"value": "same-origin"
							},
							{
								"key": "sec-fetch-mode",
								"value": "cors"
							},
							{
								"key": "sec-fetch-dest",
								"value": "empty"
							},
							{
								"key": "referer",
								"value": "https://staging-bots.korebots.com/botbuilder"
							},
							{
								"key": "accept-language",
								"value": "en-US,en;q=0.9"
							},
							{
								"key": "cookie",
								"value": "_ga=GA1.2.1992162004.1597057879; _gid=GA1.2.1823399538.1597057879"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"metadata\": {\r\n        \"left\": 634,\r\n        \"top\": 170\r\n    }\r\n}"
						},
						"url": {
							"raw": "{{url}}/api/{{version}}/builder/streams/{{SanityBotStreamId}}/dialogs/{{GetbalanceDialogID}}/nodes/service2",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"{{version}}",
								"builder",
								"streams",
								"{{SanityBotStreamId}}",
								"dialogs",
								"{{GetbalanceDialogID}}",
								"nodes",
								"service2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Edit Service Call Request",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "bearer {{SanityAcToken1}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "bot-language",
								"value": "{{Lang}}"
							},
							{
								"key": "Connection",
								"value": "keep-alive"
							},
							{
								"key": "accountId",
								"value": "{{SanityAccountID1}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"headers\": {\r\n\t\t\"type\": \"raw\",\r\n\t\t\"value\": \"{}\"\r\n\t},\r\n\t\"payload\": {\r\n\t\t\"type\": \"raw\",\r\n\t\t\"value\": \"\"\r\n\t},\r\n\t\"endPoint\": {\r\n\t\t\"host\": \"timesofindia.indiatimes.com\",\r\n\t\t\"port\": \"\",\r\n\t\t\"path\": \"/rssfeedstopstories.cms\",\r\n\t\t\"protocol\": \"https\",\r\n\t\t\"method\": \"get\",\r\n\t\t\"connectorEnabled\": false,\r\n\t\t\"piiDataEnabled\": false\r\n\t},\r\n\t\"idp\": \"none\",\r\n\t\"authRequired\": false\r\n}"
						},
						"url": {
							"raw": "{{url}}/api/{{version}}/builder/streams/{{SanityBotStreamId}}/components/{{GetBalanceComponentId3}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"{{version}}",
								"builder",
								"streams",
								"{{SanityBotStreamId}}",
								"components",
								"{{GetBalanceComponentId3}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "CreateScriptNode",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"var data = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"GetBalanceComponentId4\", data._id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "authority",
								"value": "staging-bots.korebots.com"
							},
							{
								"key": "x-timezone-offset",
								"value": "-330"
							},
							{
								"key": "authorization",
								"value": "bearer {{SanityAcToken1}}"
							},
							{
								"key": "state",
								"value": "configured"
							},
							{
								"key": "content-type",
								"value": "application/json;charset=UTF-8"
							},
							{
								"key": "accept",
								"value": "application/json, text/plain, */*"
							},
							{
								"key": "user-agent",
								"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.105 Safari/537.36"
							},
							{
								"key": "bot-language",
								"value": "{{Lang}}"
							},
							{
								"key": "accountid",
								"value": "{{SanityAccountID1}}"
							},
							{
								"key": "origin",
								"value": "https://staging-bots.korebots.com"
							},
							{
								"key": "sec-fetch-site",
								"value": "same-origin"
							},
							{
								"key": "sec-fetch-mode",
								"value": "cors"
							},
							{
								"key": "sec-fetch-dest",
								"value": "empty"
							},
							{
								"key": "referer",
								"value": "https://staging-bots.korebots.com/botbuilder"
							},
							{
								"key": "accept-language",
								"value": "en-US,en;q=0.9"
							},
							{
								"key": "cookie",
								"value": "_ga=GA1.2.1992162004.1597057879; _gid=GA1.2.1823399538.1597057879"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"scriptvalidation\",\r\n    \"type\": \"script\"\r\n}"
						},
						"url": {
							"raw": "{{url}}/api/{{version}}/builder/streams/{{SanityBotStreamId}}/components",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"{{version}}",
								"builder",
								"streams",
								"{{SanityBotStreamId}}",
								"components"
							]
						}
					},
					"response": []
				},
				{
					"name": "AddScriptCompnentToDialog",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "authority",
								"value": "staging-bots.korebots.com"
							},
							{
								"key": "x-timezone-offset",
								"value": "-330"
							},
							{
								"key": "authorization",
								"value": "bearer {{SanityAcToken1}}"
							},
							{
								"key": "state",
								"value": "configured"
							},
							{
								"key": "content-type",
								"value": "application/json;charset=UTF-8"
							},
							{
								"key": "accept",
								"value": "application/json, text/plain, */*"
							},
							{
								"key": "bot-language",
								"value": "{{Lang}}"
							},
							{
								"key": "user-agent",
								"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.105 Safari/537.36"
							},
							{
								"key": "x-http-method-override",
								"value": "put"
							},
							{
								"key": "accountid",
								"value": "{{SanityAccountID1}}"
							},
							{
								"key": "origin",
								"value": "https://staging-bots.korebots.com"
							},
							{
								"key": "sec-fetch-site",
								"value": "same-origin"
							},
							{
								"key": "sec-fetch-mode",
								"value": "cors"
							},
							{
								"key": "sec-fetch-dest",
								"value": "empty"
							},
							{
								"key": "referer",
								"value": "https://staging-bots.korebots.com/botbuilder"
							},
							{
								"key": "accept-language",
								"value": "en-US,en;q=0.9"
							},
							{
								"key": "cookie",
								"value": "_ga=GA1.2.1992162004.1597057879; _gid=GA1.2.1823399538.1597057879"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"streamId\": \"{{SanityBotStreamId}}\",\r\n    \"name\": \"{{GetBalanceIntentName}}\",\r\n    \"nodes\": [\r\n        {\r\n            \"nodeOptions\": {\r\n                \"customTags\": {\r\n                    \"session\": [],\r\n                    \"message\": [],\r\n                    \"user\": []\r\n                },\r\n                \"transitionType\": \"auto\",\r\n                \"promptOptions\": \"required\",\r\n                \"reuseMarkedupPhrases\": false,\r\n                \"interruptOptions\": {\r\n                    \"priority\": \"task\"\r\n                },\r\n                \"transitionMode\": \"initiateCurrentTask\",\r\n                \"inputHandlingOptions\": \"useAsEntityValue\",\r\n                \"reuseOptions\": \"1\",\r\n                \"userInputCorrection\": true,\r\n                \"notForReuse\": false,\r\n                \"contextTags\": []\r\n            },\r\n            \"nodeId\": \"intent0\",\r\n            \"type\": \"intent\",\r\n            \"componentId\": \"{{GetBalanceComponentId1}}\",\r\n            \"transitions\": [\r\n                {\r\n                    \"default\": \"entity1\",\r\n                    \"metadata\": {\r\n                        \"color\": \"#299d8e\",\r\n                        \"connId\": \"dummy0\"\r\n                    }\r\n                }\r\n            ],\r\n            \"metadata\": {\r\n                \"left\": 30,\r\n                \"top\": 170\r\n            }\r\n        },\r\n        {\r\n            \"nodeOptions\": {\r\n                \"customTags\": {\r\n                    \"session\": [],\r\n                    \"message\": [],\r\n                    \"user\": []\r\n                },\r\n                \"transitionType\": \"auto\",\r\n                \"promptOptions\": \"required\",\r\n                \"reuseMarkedupPhrases\": false,\r\n                \"interruptOptions\": {\r\n                    \"interruptsEnabled\": true,\r\n                    \"priority\": \"task\"\r\n                },\r\n                \"transitionMode\": \"initiateCurrentTask\",\r\n                \"inputHandlingOptions\": \"useAsEntityValue\",\r\n                \"reuseOptions\": \"1\",\r\n                \"userInputCorrection\": true,\r\n                \"notForReuse\": false,\r\n                \"contextTags\": [],\r\n                \"precedence\": \"entityOverIntent\"\r\n            },\r\n            \"nodeId\": \"entity1\",\r\n            \"type\": \"entity\",\r\n            \"componentId\": \"{{GetBalanceComponentId2}}\",\r\n            \"transitions\": [\r\n                {\r\n                    \"default\": \"service2\",\r\n                    \"metadata\": {\r\n                        \"color\": \"#299d8e\",\r\n                        \"connId\": \"dummy1\"\r\n                    }\r\n                }\r\n            ],\r\n            \"metadata\": {\r\n                \"left\": 332,\r\n                \"top\": 170\r\n            }\r\n        },\r\n        {\r\n            \"nodeOptions\": {\r\n                \"customTags\": {\r\n                    \"session\": [],\r\n                    \"message\": [],\r\n                    \"user\": []\r\n                },\r\n                \"transitionType\": \"auto\",\r\n                \"promptOptions\": \"required\",\r\n                \"reuseMarkedupPhrases\": false,\r\n                \"interruptOptions\": {\r\n                    \"priority\": \"task\"\r\n                },\r\n                \"transitionMode\": \"initiateCurrentTask\",\r\n                \"inputHandlingOptions\": \"useAsEntityValue\",\r\n                \"reuseOptions\": \"1\",\r\n                \"userInputCorrection\": true,\r\n                \"notForReuse\": false,\r\n                \"contextTags\": []\r\n            },\r\n            \"nodeId\": \"service2\",\r\n            \"type\": \"service\",\r\n            \"componentId\": \"{{GetBalanceComponentId3}}\",\r\n            \"transitions\": [\r\n                {\r\n                    \"default\": \"\",\r\n                    \"metadata\": {\r\n                        \"color\": \"#299d8e\",\r\n                        \"connId\": \"dummy3\"\r\n                    }\r\n                }\r\n            ],\r\n            \"metadata\": {\r\n                \"left\": 634,\r\n                \"top\": 170\r\n            }\r\n        },\r\n        {\r\n            \"nodeId\": \"script3\",\r\n            \"type\": \"script\",\r\n            \"componentId\": \"{{GetBalanceComponentId4}}\",\r\n            \"transitions\": [\r\n                {\r\n                    \"default\": \"\",\r\n                    \"metadata\": {\r\n                        \"color\": \"#299d8e\",\r\n                        \"connId\": \"dummy5\"\r\n                    }\r\n                }\r\n            ],\r\n            \"nodeOptions\": {\r\n                \"transitionType\": \"auto\"\r\n            }\r\n        }\r\n    ],\r\n    \"visibility\": {\r\n        \"namespace\": \"private\",\r\n        \"namespaceIds\": [\r\n            \"{{SanityUserID1}}\"\r\n        ]\r\n    }\r\n}"
						},
						"url": {
							"raw": "{{url}}/api/{{version}}/builder/streams/{{SanityBotStreamId}}/dialogs/{{GetbalanceDialogID}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"{{version}}",
								"builder",
								"streams",
								"{{SanityBotStreamId}}",
								"dialogs",
								"{{GetbalanceDialogID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "AddScriptComponentToBot",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "authority",
								"value": "staging-bots.korebots.com"
							},
							{
								"key": "x-timezone-offset",
								"value": "-330"
							},
							{
								"key": "authorization",
								"value": "bearer {{SanityAcToken1}}"
							},
							{
								"key": "state",
								"value": "configured"
							},
							{
								"key": "content-type",
								"value": "application/json;charset=UTF-8"
							},
							{
								"key": "accept",
								"value": "application/json, text/plain, */*"
							},
							{
								"key": "bot-language",
								"value": "{{Lang}}"
							},
							{
								"key": "user-agent",
								"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.105 Safari/537.36"
							},
							{
								"key": "x-http-method-override",
								"value": "put"
							},
							{
								"key": "accountid",
								"value": "{{SanityAccountID1}}"
							},
							{
								"key": "origin",
								"value": "https://staging-bots.korebots.com"
							},
							{
								"key": "sec-fetch-site",
								"value": "same-origin"
							},
							{
								"key": "sec-fetch-mode",
								"value": "cors"
							},
							{
								"key": "sec-fetch-dest",
								"value": "empty"
							},
							{
								"key": "referer",
								"value": "https://staging-bots.korebots.com/botbuilder"
							},
							{
								"key": "accept-language",
								"value": "en-US,en;q=0.9"
							},
							{
								"key": "cookie",
								"value": "_ga=GA1.2.1992162004.1597057879; _gid=GA1.2.1823399538.1597057879"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"streamId\": \"{{SanityBotStreamId}}\",\r\n    \"name\": \"{{GetBalanceIntentName}}\",\r\n    \"nodes\": [\r\n        {\r\n            \"nodeOptions\": {\r\n                \"customTags\": {\r\n                    \"session\": [],\r\n                    \"message\": [],\r\n                    \"user\": []\r\n                },\r\n                \"transitionType\": \"auto\",\r\n                \"promptOptions\": \"required\",\r\n                \"reuseMarkedupPhrases\": false,\r\n                \"interruptOptions\": {\r\n                    \"priority\": \"task\"\r\n                },\r\n                \"transitionMode\": \"initiateCurrentTask\",\r\n                \"inputHandlingOptions\": \"useAsEntityValue\",\r\n                \"reuseOptions\": \"1\",\r\n                \"userInputCorrection\": true,\r\n                \"notForReuse\": false,\r\n                \"contextTags\": []\r\n            },\r\n            \"nodeId\": \"intent0\",\r\n            \"type\": \"intent\",\r\n            \"componentId\": \"{{GetBalanceComponentId1}}\",\r\n            \"transitions\": [\r\n                {\r\n                    \"default\": \"entity1\",\r\n                    \"metadata\": {\r\n                        \"color\": \"#299d8e\",\r\n                        \"connId\": \"dummy0\"\r\n                    }\r\n                }\r\n            ],\r\n            \"metadata\": {\r\n                \"left\": 30,\r\n                \"top\": 170\r\n            }\r\n        },\r\n        {\r\n            \"nodeOptions\": {\r\n                \"customTags\": {\r\n                    \"session\": [],\r\n                    \"message\": [],\r\n                    \"user\": []\r\n                },\r\n                \"transitionType\": \"auto\",\r\n                \"promptOptions\": \"required\",\r\n                \"reuseMarkedupPhrases\": false,\r\n                \"interruptOptions\": {\r\n                    \"interruptsEnabled\": true,\r\n                    \"priority\": \"task\"\r\n                },\r\n                \"transitionMode\": \"initiateCurrentTask\",\r\n                \"inputHandlingOptions\": \"useAsEntityValue\",\r\n                \"reuseOptions\": \"1\",\r\n                \"userInputCorrection\": true,\r\n                \"notForReuse\": false,\r\n                \"contextTags\": [],\r\n                \"precedence\": \"entityOverIntent\"\r\n            },\r\n            \"nodeId\": \"entity1\",\r\n            \"type\": \"entity\",\r\n            \"componentId\": \"{{GetBalanceComponentId2}}\",\r\n            \"transitions\": [\r\n                {\r\n                    \"default\": \"service2\",\r\n                    \"metadata\": {\r\n                        \"color\": \"#299d8e\",\r\n                        \"connId\": \"dummy1\"\r\n                    }\r\n                }\r\n            ],\r\n            \"metadata\": {\r\n                \"left\": 332,\r\n                \"top\": 170\r\n            }\r\n        },\r\n        {\r\n            \"nodeOptions\": {\r\n                \"customTags\": {\r\n                    \"session\": [],\r\n                    \"message\": [],\r\n                    \"user\": []\r\n                },\r\n                \"transitionType\": \"auto\",\r\n                \"promptOptions\": \"required\",\r\n                \"reuseMarkedupPhrases\": false,\r\n                \"interruptOptions\": {\r\n                    \"priority\": \"task\"\r\n                },\r\n                \"transitionMode\": \"initiateCurrentTask\",\r\n                \"inputHandlingOptions\": \"useAsEntityValue\",\r\n                \"reuseOptions\": \"1\",\r\n                \"userInputCorrection\": true,\r\n                \"notForReuse\": false,\r\n                \"contextTags\": [],\r\n                \"isOptional\": false\r\n            },\r\n            \"nodeId\": \"service2\",\r\n            \"type\": \"service\",\r\n            \"componentId\": \"{{GetBalanceComponentId3}}\",\r\n            \"transitions\": [\r\n                {\r\n                    \"default\": \"script3\",\r\n                    \"metadata\": {\r\n                        \"color\": \"#299d8e\",\r\n                        \"connId\": \"dummy3\"\r\n                    }\r\n                }\r\n            ],\r\n            \"metadata\": {\r\n                \"left\": 634,\r\n                \"top\": 170\r\n            }\r\n        },\r\n        {\r\n            \"nodeOptions\": {\r\n                \"customTags\": {\r\n                    \"session\": [],\r\n                    \"message\": [],\r\n                    \"user\": []\r\n                },\r\n                \"transitionType\": \"auto\",\r\n                \"promptOptions\": \"required\",\r\n                \"reuseMarkedupPhrases\": false,\r\n                \"interruptOptions\": {\r\n                    \"priority\": \"task\"\r\n                },\r\n                \"transitionMode\": \"initiateCurrentTask\",\r\n                \"inputHandlingOptions\": \"useAsEntityValue\",\r\n                \"reuseOptions\": \"1\",\r\n                \"userInputCorrection\": true,\r\n                \"notForReuse\": false,\r\n                \"contextTags\": []\r\n            },\r\n            \"nodeId\": \"script3\",\r\n            \"type\": \"script\",\r\n            \"componentId\": \"{{GetBalanceComponentId4}}\",\r\n            \"transitions\": [\r\n                {\r\n                    \"default\": \"\",\r\n                    \"metadata\": {\r\n                        \"color\": \"#299d8e\",\r\n                        \"connId\": \"dummy5\"\r\n                    }\r\n                }\r\n            ]\r\n        }\r\n    ],\r\n    \"visibility\": {\r\n        \"namespace\": \"private\",\r\n        \"namespaceIds\": [\r\n            \"{{SanityUserID1}}\"\r\n        ]\r\n    }\r\n}"
						},
						"url": {
							"raw": "{{url}}/api/{{version}}/builder/streams/{{SanityBotStreamId}}/dialogs/{{GetbalanceDialogID}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"{{version}}",
								"builder",
								"streams",
								"{{SanityBotStreamId}}",
								"dialogs",
								"{{GetbalanceDialogID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "ScriptNode",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "authority",
								"value": "staging-bots.korebots.com"
							},
							{
								"key": "x-timezone-offset",
								"value": "-330"
							},
							{
								"key": "authorization",
								"value": "bearer {{SanityAcToken1}}"
							},
							{
								"key": "state",
								"value": "configured"
							},
							{
								"key": "content-type",
								"value": "application/json;charset=UTF-8"
							},
							{
								"key": "accept",
								"value": "application/json, text/plain, */*"
							},
							{
								"key": "bot-language",
								"value": "{{Lang}}"
							},
							{
								"key": "user-agent",
								"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.105 Safari/537.36"
							},
							{
								"key": "x-http-method-override",
								"value": "put"
							},
							{
								"key": "accountid",
								"value": "{{SanityAccountID1}}"
							},
							{
								"key": "origin",
								"value": "https://staging-bots.korebots.com"
							},
							{
								"key": "sec-fetch-site",
								"value": "same-origin"
							},
							{
								"key": "sec-fetch-mode",
								"value": "cors"
							},
							{
								"key": "sec-fetch-dest",
								"value": "empty"
							},
							{
								"key": "referer",
								"value": "https://staging-bots.korebots.com/botbuilder"
							},
							{
								"key": "accept-language",
								"value": "en-US,en;q=0.9"
							},
							{
								"key": "cookie",
								"value": "_ga=GA1.2.1992162004.1597057879; _gid=GA1.2.1823399538.1597057879"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"transitions\": [\r\n        {\r\n            \"default\": \"message4\",\r\n            \"metadata\": {\r\n                \"color\": \"#299d8e\",\r\n                \"connId\": \"dummy5\"\r\n            }\r\n        }\r\n    ],\r\n    \"nodeOptions\": {\r\n        \"transitionType\": \"auto\",\r\n        \"customTags\": {\r\n            \"session\": [],\r\n            \"message\": [],\r\n            \"user\": []\r\n        }\r\n    }\r\n}"
						},
						"url": {
							"raw": "{{url}}/api/{{version}}/builder/streams/{{SanityBotStreamId}}/dialogs/{{GetbalanceDialogID}}/nodes/script3",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"{{version}}",
								"builder",
								"streams",
								"{{SanityBotStreamId}}",
								"dialogs",
								"{{GetbalanceDialogID}}",
								"nodes",
								"script3"
							]
						}
					},
					"response": []
				},
				{
					"name": "EditScriptNode",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "authority",
								"value": "staging-bots.korebots.com"
							},
							{
								"key": "x-timezone-offset",
								"value": "-330"
							},
							{
								"key": "authorization",
								"value": "bearer {{SanityAcToken1}}"
							},
							{
								"key": "state",
								"value": "configured"
							},
							{
								"key": "content-type",
								"value": "application/json;charset=UTF-8"
							},
							{
								"key": "accept",
								"value": "application/json, text/plain, */*"
							},
							{
								"key": "bot-language",
								"value": "{{Lang}}"
							},
							{
								"key": "user-agent",
								"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.105 Safari/537.36"
							},
							{
								"key": "x-http-method-override",
								"value": "put"
							},
							{
								"key": "accountid",
								"value": "{{SanityAccountID1}}"
							},
							{
								"key": "origin",
								"value": "https://staging-bots.korebots.com"
							},
							{
								"key": "sec-fetch-site",
								"value": "same-origin"
							},
							{
								"key": "sec-fetch-mode",
								"value": "cors"
							},
							{
								"key": "sec-fetch-dest",
								"value": "empty"
							},
							{
								"key": "referer",
								"value": "https://staging-bots.korebots.com/botbuilder"
							},
							{
								"key": "accept-language",
								"value": "en-US,en;q=0.9"
							},
							{
								"key": "cookie",
								"value": "_ga=GA1.2.1992162004.1597057879; _gid=GA1.2.1823399538.1597057879"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"script\": \"context.value%3D%20context.TimesService.statusCode\"\r\n}"
						},
						"url": {
							"raw": "{{url}}/api/{{version}}/builder/streams/{{SanityBotStreamId}}/components/{{GetBalanceComponentId4}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"{{version}}",
								"builder",
								"streams",
								"{{SanityBotStreamId}}",
								"components",
								"{{GetBalanceComponentId4}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "CreateMessageNode",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"var data = JSON.parse(responseBody);\r",
									"pm.environment.set(\"GetBalanceComponentId5\", data._id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "authority",
								"value": "staging-bots.korebots.com"
							},
							{
								"key": "x-timezone-offset",
								"value": "-330"
							},
							{
								"key": "authorization",
								"value": "bearer {{SanityAcToken1}}"
							},
							{
								"key": "state",
								"value": "configured"
							},
							{
								"key": "content-type",
								"value": "application/json;charset=UTF-8"
							},
							{
								"key": "accept",
								"value": "application/json, text/plain, */*"
							},
							{
								"key": "user-agent",
								"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.105 Safari/537.36"
							},
							{
								"key": "bot-language",
								"value": "{{Lang}}"
							},
							{
								"key": "accountid",
								"value": "{{SanityAccountID1}}"
							},
							{
								"key": "origin",
								"value": "https://staging-bots.korebots.com"
							},
							{
								"key": "sec-fetch-site",
								"value": "same-origin"
							},
							{
								"key": "sec-fetch-mode",
								"value": "cors"
							},
							{
								"key": "sec-fetch-dest",
								"value": "empty"
							},
							{
								"key": "referer",
								"value": "https://staging-bots.korebots.com/botbuilder"
							},
							{
								"key": "accept-language",
								"value": "en-US,en;q=0.9"
							},
							{
								"key": "cookie",
								"value": "_ga=GA1.2.1992162004.1597057879; _gid=GA1.2.1823399538.1597057879"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Botresponse6\",\r\n    \"type\": \"message\",\r\n    \"message\": [\r\n        {\r\n            \"channel\": \"default\",\r\n            \"text\": \"Amount%20available%20in%20your%20account%20is%20%7B%7Bcontext.entities.number%7D%7D\",\r\n            \"type\": \"basic\"\r\n        }\r\n    ]\r\n}\r\n"
						},
						"url": {
							"raw": "{{url}}/api/{{version}}/builder/streams/{{SanityBotStreamId}}/components",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"{{version}}",
								"builder",
								"streams",
								"{{SanityBotStreamId}}",
								"components"
							]
						}
					},
					"response": []
				},
				{
					"name": "AddMessagetoDialog",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "authority",
								"value": "staging-bots.korebots.com"
							},
							{
								"key": "x-timezone-offset",
								"value": "-330"
							},
							{
								"key": "authorization",
								"value": "bearer {{SanityAcToken1}}"
							},
							{
								"key": "state",
								"value": "configured"
							},
							{
								"key": "content-type",
								"value": "application/json;charset=UTF-8"
							},
							{
								"key": "accept",
								"value": "application/json, text/plain, */*"
							},
							{
								"key": "bot-language",
								"value": "{{Lang}}"
							},
							{
								"key": "user-agent",
								"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.105 Safari/537.36"
							},
							{
								"key": "x-http-method-override",
								"value": "put"
							},
							{
								"key": "accountid",
								"value": "{{SanityAccountID1}}"
							},
							{
								"key": "origin",
								"value": "https://staging-bots.korebots.com"
							},
							{
								"key": "sec-fetch-site",
								"value": "same-origin"
							},
							{
								"key": "sec-fetch-mode",
								"value": "cors"
							},
							{
								"key": "sec-fetch-dest",
								"value": "empty"
							},
							{
								"key": "referer",
								"value": "https://staging-bots.korebots.com/botbuilder"
							},
							{
								"key": "accept-language",
								"value": "en-US,en;q=0.9"
							},
							{
								"key": "cookie",
								"value": "_ga=GA1.2.1992162004.1597057879; _gid=GA1.2.1823399538.1597057879"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"streamId\": \"{{SanityBotStreamId}}\",\r\n    \"name\": \"{{GetBalanceIntentName}}\",\r\n    \"nodes\": [\r\n        {\r\n            \"nodeOptions\": {\r\n                \"customTags\": {\r\n                    \"session\": [],\r\n                    \"message\": [],\r\n                    \"user\": []\r\n                },\r\n                \"transitionType\": \"auto\",\r\n                \"promptOptions\": \"required\",\r\n                \"reuseMarkedupPhrases\": false,\r\n                \"interruptOptions\": {\r\n                    \"priority\": \"task\"\r\n                },\r\n                \"transitionMode\": \"initiateCurrentTask\",\r\n                \"inputHandlingOptions\": \"useAsEntityValue\",\r\n                \"reuseOptions\": \"1\",\r\n                \"userInputCorrection\": true,\r\n                \"notForReuse\": false,\r\n                \"contextTags\": []\r\n            },\r\n            \"nodeId\": \"intent0\",\r\n            \"type\": \"intent\",\r\n            \"componentId\": \"{{GetBalanceComponentId1}}\",\r\n            \"transitions\": [\r\n                {\r\n                    \"default\": \"entity1\",\r\n                    \"metadata\": {\r\n                        \"color\": \"#299d8e\",\r\n                        \"connId\": \"dummy0\"\r\n                    }\r\n                }\r\n            ],\r\n            \"metadata\": {\r\n                \"left\": 30,\r\n                \"top\": 170\r\n            }\r\n        },\r\n        {\r\n            \"nodeOptions\": {\r\n                \"customTags\": {\r\n                    \"session\": [],\r\n                    \"message\": [],\r\n                    \"user\": []\r\n                },\r\n                \"transitionType\": \"auto\",\r\n                \"promptOptions\": \"required\",\r\n                \"reuseMarkedupPhrases\": false,\r\n                \"interruptOptions\": {\r\n                    \"interruptsEnabled\": true,\r\n                    \"priority\": \"task\"\r\n                },\r\n                \"transitionMode\": \"initiateCurrentTask\",\r\n                \"inputHandlingOptions\": \"useAsEntityValue\",\r\n                \"reuseOptions\": \"1\",\r\n                \"userInputCorrection\": true,\r\n                \"notForReuse\": false,\r\n                \"contextTags\": [],\r\n                \"precedence\": \"entityOverIntent\"\r\n            },\r\n            \"nodeId\": \"entity1\",\r\n            \"type\": \"entity\",\r\n            \"componentId\": \"{{GetBalanceComponentId2}}\",\r\n            \"transitions\": [\r\n                {\r\n                    \"default\": \"service2\",\r\n                    \"metadata\": {\r\n                        \"color\": \"#299d8e\",\r\n                        \"connId\": \"dummy1\"\r\n                    }\r\n                }\r\n            ],\r\n            \"metadata\": {\r\n                \"left\": 332,\r\n                \"top\": 170\r\n            }\r\n        },\r\n        {\r\n            \"nodeOptions\": {\r\n                \"customTags\": {\r\n                    \"session\": [],\r\n                    \"message\": [],\r\n                    \"user\": []\r\n                },\r\n                \"transitionType\": \"auto\",\r\n                \"promptOptions\": \"required\",\r\n                \"reuseMarkedupPhrases\": false,\r\n                \"interruptOptions\": {\r\n                    \"priority\": \"task\"\r\n                },\r\n                \"transitionMode\": \"initiateCurrentTask\",\r\n                \"inputHandlingOptions\": \"useAsEntityValue\",\r\n                \"reuseOptions\": \"1\",\r\n                \"userInputCorrection\": true,\r\n                \"notForReuse\": false,\r\n                \"contextTags\": []\r\n            },\r\n            \"nodeId\": \"service2\",\r\n            \"type\": \"service\",\r\n            \"componentId\": \"{{GetBalanceComponentId3}}\",\r\n            \"transitions\": [\r\n                {\r\n                    \"default\": \"script3\",\r\n                    \"metadata\": {\r\n                        \"color\": \"#299d8e\",\r\n                        \"connId\": \"dummy3\"\r\n                    }\r\n                }\r\n            ],\r\n            \"metadata\": {\r\n                \"left\": 634,\r\n                \"top\": 170\r\n            }\r\n        },\r\n        {\r\n            \"nodeOptions\": {\r\n                \"customTags\": {\r\n                    \"session\": [],\r\n                    \"message\": [],\r\n                    \"user\": []\r\n                },\r\n                \"transitionType\": \"auto\",\r\n                \"promptOptions\": \"required\",\r\n                \"reuseMarkedupPhrases\": false,\r\n                \"interruptOptions\": {\r\n                    \"priority\": \"task\"\r\n                },\r\n                \"transitionMode\": \"initiateCurrentTask\",\r\n                \"inputHandlingOptions\": \"useAsEntityValue\",\r\n                \"reuseOptions\": \"1\",\r\n                \"userInputCorrection\": true,\r\n                \"notForReuse\": false,\r\n                \"contextTags\": []\r\n            },\r\n            \"nodeId\": \"script3\",\r\n            \"type\": \"script\",\r\n            \"componentId\": \"{{GetBalanceComponentId4}}\",\r\n            \"transitions\": [\r\n                {\r\n                    \"default\": \"\",\r\n                    \"metadata\": {\r\n                        \"color\": \"#299d8e\",\r\n                        \"connId\": \"dummy5\"\r\n                    }\r\n                }\r\n            ],\r\n            \"metadata\": {\r\n                \"left\": 936,\r\n                \"top\": 170\r\n            }\r\n        },\r\n        {\r\n            \"nodeId\": \"message4\",\r\n            \"type\": \"message\",\r\n            \"componentId\": \"{{GetBalanceComponentId5}}\",\r\n            \"transitions\": [\r\n                {\r\n                    \"default\": \"\",\r\n                    \"metadata\": {\r\n                        \"color\": \"#299d8e\",\r\n                        \"connId\": \"dummy7\"\r\n                    }\r\n                }\r\n            ],\r\n            \"nodeOptions\": {\r\n                \"transitionType\": \"auto\"\r\n            }\r\n        }\r\n    ],\r\n    \"visibility\": {\r\n        \"namespace\": \"private\",\r\n        \"namespaceIds\": [\r\n            \"{{SanityUserID1}}\"\r\n        ]\r\n    }\r\n}"
						},
						"url": {
							"raw": "{{url}}/api/{{version}}/builder/streams/{{SanityBotStreamId}}/dialogs/{{GetbalanceDialogID}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"{{version}}",
								"builder",
								"streams",
								"{{SanityBotStreamId}}",
								"dialogs",
								"{{GetbalanceDialogID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "AddMessageToBot",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "authority",
								"value": "staging-bots.korebots.com"
							},
							{
								"key": "x-timezone-offset",
								"value": "-330"
							},
							{
								"key": "authorization",
								"value": "bearer {{SanityAcToken1}}"
							},
							{
								"key": "state",
								"value": "configured"
							},
							{
								"key": "content-type",
								"value": "application/json;charset=UTF-8"
							},
							{
								"key": "accept",
								"value": "application/json, text/plain, */*"
							},
							{
								"key": "bot-language",
								"value": "{{Lang}}"
							},
							{
								"key": "user-agent",
								"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.105 Safari/537.36"
							},
							{
								"key": "x-http-method-override",
								"value": "put"
							},
							{
								"key": "accountid",
								"value": "{{SanityAccountID1}}"
							},
							{
								"key": "origin",
								"value": "https://staging-bots.korebots.com"
							},
							{
								"key": "sec-fetch-site",
								"value": "same-origin"
							},
							{
								"key": "sec-fetch-mode",
								"value": "cors"
							},
							{
								"key": "sec-fetch-dest",
								"value": "empty"
							},
							{
								"key": "referer",
								"value": "https://staging-bots.korebots.com/botbuilder"
							},
							{
								"key": "accept-language",
								"value": "en-US,en;q=0.9"
							},
							{
								"key": "cookie",
								"value": "_ga=GA1.2.1992162004.1597057879; _gid=GA1.2.1823399538.1597057879"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"streamId\": \"{{SanityBotStreamId}}\",\r\n    \"name\": \"{{GetBalanceIntentName}}\",\r\n    \"nodes\": [\r\n        {\r\n            \"nodeOptions\": {\r\n                \"customTags\": {\r\n                    \"session\": [],\r\n                    \"message\": [],\r\n                    \"user\": []\r\n                },\r\n                \"transitionType\": \"auto\",\r\n                \"promptOptions\": \"required\",\r\n                \"reuseMarkedupPhrases\": false,\r\n                \"interruptOptions\": {\r\n                    \"priority\": \"task\"\r\n                },\r\n                \"transitionMode\": \"initiateCurrentTask\",\r\n                \"inputHandlingOptions\": \"useAsEntityValue\",\r\n                \"reuseOptions\": \"1\",\r\n                \"userInputCorrection\": true,\r\n                \"notForReuse\": false,\r\n                \"contextTags\": []\r\n            },\r\n            \"nodeId\": \"intent0\",\r\n            \"type\": \"intent\",\r\n            \"componentId\": \"{{GetBalanceComponentId1}}\",\r\n            \"transitions\": [\r\n                {\r\n                    \"default\": \"entity1\",\r\n                    \"metadata\": {\r\n                        \"color\": \"#299d8e\",\r\n                        \"connId\": \"dummy0\"\r\n                    }\r\n                }\r\n            ],\r\n            \"metadata\": {\r\n                \"left\": 30,\r\n                \"top\": 170\r\n            }\r\n        },\r\n        {\r\n            \"nodeOptions\": {\r\n                \"customTags\": {\r\n                    \"session\": [],\r\n                    \"message\": [],\r\n                    \"user\": []\r\n                },\r\n                \"transitionType\": \"auto\",\r\n                \"promptOptions\": \"required\",\r\n                \"reuseMarkedupPhrases\": false,\r\n                \"interruptOptions\": {\r\n                    \"interruptsEnabled\": true,\r\n                    \"priority\": \"task\"\r\n                },\r\n                \"transitionMode\": \"initiateCurrentTask\",\r\n                \"inputHandlingOptions\": \"useAsEntityValue\",\r\n                \"reuseOptions\": \"1\",\r\n                \"userInputCorrection\": true,\r\n                \"notForReuse\": false,\r\n                \"contextTags\": [],\r\n                \"precedence\": \"entityOverIntent\"\r\n            },\r\n            \"nodeId\": \"entity1\",\r\n            \"type\": \"entity\",\r\n            \"componentId\": \"{{GetBalanceComponentId2}}\",\r\n            \"transitions\": [\r\n                {\r\n                    \"default\": \"service2\",\r\n                    \"metadata\": {\r\n                        \"color\": \"#299d8e\",\r\n                        \"connId\": \"dummy1\"\r\n                    }\r\n                }\r\n            ],\r\n            \"metadata\": {\r\n                \"left\": 332,\r\n                \"top\": 170\r\n            }\r\n        },\r\n        {\r\n            \"nodeOptions\": {\r\n                \"customTags\": {\r\n                    \"session\": [],\r\n                    \"message\": [],\r\n                    \"user\": []\r\n                },\r\n                \"transitionType\": \"auto\",\r\n                \"promptOptions\": \"required\",\r\n                \"reuseMarkedupPhrases\": false,\r\n                \"interruptOptions\": {\r\n                    \"priority\": \"task\"\r\n                },\r\n                \"transitionMode\": \"initiateCurrentTask\",\r\n                \"inputHandlingOptions\": \"useAsEntityValue\",\r\n                \"reuseOptions\": \"1\",\r\n                \"userInputCorrection\": true,\r\n                \"notForReuse\": false,\r\n                \"contextTags\": []\r\n            },\r\n            \"nodeId\": \"service2\",\r\n            \"type\": \"service\",\r\n            \"componentId\": \"{{GetBalanceComponentId3}}\",\r\n            \"transitions\": [\r\n                {\r\n                    \"default\": \"script3\",\r\n                    \"metadata\": {\r\n                        \"color\": \"#299d8e\",\r\n                        \"connId\": \"dummy3\"\r\n                    }\r\n                }\r\n            ],\r\n            \"metadata\": {\r\n                \"left\": 634,\r\n                \"top\": 170\r\n            }\r\n        },\r\n        {\r\n            \"nodeOptions\": {\r\n                \"customTags\": {\r\n                    \"session\": [],\r\n                    \"message\": [],\r\n                    \"user\": []\r\n                },\r\n                \"transitionType\": \"auto\",\r\n                \"promptOptions\": \"required\",\r\n                \"reuseMarkedupPhrases\": false,\r\n                \"interruptOptions\": {\r\n                    \"priority\": \"task\"\r\n                },\r\n                \"transitionMode\": \"initiateCurrentTask\",\r\n                \"inputHandlingOptions\": \"useAsEntityValue\",\r\n                \"reuseOptions\": \"1\",\r\n                \"userInputCorrection\": true,\r\n                \"notForReuse\": false,\r\n                \"contextTags\": [],\r\n                \"isOptional\": false\r\n            },\r\n            \"nodeId\": \"script3\",\r\n            \"type\": \"script\",\r\n            \"componentId\": \"{{GetBalanceComponentId4}}\",\r\n            \"transitions\": [\r\n                {\r\n                    \"default\": \"message4\",\r\n                    \"metadata\": {\r\n                        \"color\": \"#299d8e\",\r\n                        \"connId\": \"dummy5\"\r\n                    }\r\n                }\r\n            ],\r\n            \"metadata\": {\r\n                \"left\": 936,\r\n                \"top\": 170\r\n            }\r\n        },\r\n        {\r\n            \"nodeOptions\": {\r\n                \"customTags\": {\r\n                    \"session\": [],\r\n                    \"message\": [],\r\n                    \"user\": []\r\n                },\r\n                \"transitionType\": \"auto\",\r\n                \"promptOptions\": \"required\",\r\n                \"reuseMarkedupPhrases\": false,\r\n                \"interruptOptions\": {\r\n                    \"priority\": \"task\"\r\n                },\r\n                \"transitionMode\": \"initiateCurrentTask\",\r\n                \"inputHandlingOptions\": \"useAsEntityValue\",\r\n                \"reuseOptions\": \"1\",\r\n                \"userInputCorrection\": true,\r\n                \"notForReuse\": false,\r\n                \"contextTags\": []\r\n            },\r\n            \"nodeId\": \"message4\",\r\n            \"type\": \"message\",\r\n            \"componentId\": \"{{GetBalanceComponentId5}}\",\r\n            \"transitions\": [\r\n                {\r\n                    \"default\": \"\",\r\n                    \"metadata\": {\r\n                        \"color\": \"#299d8e\",\r\n                        \"connId\": \"dummy7\"\r\n                    }\r\n                }\r\n            ]\r\n        }\r\n    ],\r\n    \"visibility\": {\r\n        \"namespace\": \"private\",\r\n        \"namespaceIds\": [\r\n            \"{{SanityUserID1}}\"\r\n        ]\r\n    }\r\n}"
						},
						"url": {
							"raw": "{{url}}/api/{{version}}/builder/streams/{{SanityBotStreamId}}/dialogs/{{GetbalanceDialogID}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"{{version}}",
								"builder",
								"streams",
								"{{SanityBotStreamId}}",
								"dialogs",
								"{{GetbalanceDialogID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "End of transactions",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "bearer {{SanityAcToken1}}"
							},
							{
								"key": "User-Agent",
								"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/59.0.3071.115 Safari/537.36"
							},
							{
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8"
							},
							{
								"key": "bot-language",
								"value": "{{Lang}}"
							},
							{
								"key": "Connection",
								"value": "keep-alive"
							},
							{
								"key": "accountId",
								"value": "{{SanityAccountID1}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"transitions\": [\r\n        {\r\n            \"default\": \"end\",\r\n            \"metadata\": {\r\n                \"color\": \"#299d8e\",\r\n                \"connId\": \"dummy3\"\r\n            }\r\n        }\r\n    ],\r\n    \"nodeOptions\": {\r\n        \"transitionType\": \"auto\"\r\n    }\r\n}"
						},
						"url": {
							"raw": "{{url}}/api/{{version}}/builder/streams/{{SanityBotStreamId}}/dialogs/{{GetbalanceDialogID}}/nodes/message4",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"{{version}}",
								"builder",
								"streams",
								"{{SanityBotStreamId}}",
								"dialogs",
								"{{GetbalanceDialogID}}",
								"nodes",
								"message4"
							]
						},
						"description": "Generated from a curl request: \ncurl 'https://qa1-bots.kore.ai/api/1.1/builder/streams/st-50d2f95b-caec-5eb2-9f20-fd38d046aadc/dialogs/dg-3e6131da-da58-5a96-becb-079f8aa93da9/nodes/message2?rnd=yvzbrw' -H 'Authorization: bearer tIexWiLDp2hLaZhmLpiFUCdCFARigMoFGtJQWUqYMdKVK2FiikExDe7Q9C0Ych4L' -H 'Origin: https://qa1-bots.kore.ai' -H 'Accept-Encoding: gzip, deflate, br' -H 'Accept-Language: en-US,en;q=0.8' -H 'User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/59.0.3071.115 Safari/537.36' -H 'Content-Type: application/json;charset=UTF-8' -H 'Accept: application/json, text/plain, */*' -H 'Referer: https://qa1-bots.kore.ai/botbuilder' -H 'Cookie: unq=ceAq8vvAYpoymyxS; _ga=GA1.2.1747719766.1500544695; _gid=GA1.2.1492743728.1500872710; connect.sid=s%3AEXEpfWlnQjPUqOL7j2bmtGY7q4sSpbTe.JjUmYoH4qzj4dBIDzkMLjS58MQ0nmQWbuMlbIbLsX1o' -H 'Connection: keep-alive' -H 'X-HTTP-Method-Override: put' --data-binary '{\\\"transitions\\\":[{\\\"default\\\":\\\"end\\\",\\\"metadata\\\":{\\\"color\\\":\\\"#299d8e\\\",\\\"connId\\\":\\\"dummy2\\\"}}],\\\"nodeOptions\\\":{\\\"transitionType\\\":\\\"auto\\\"}}' --compressed"
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "1.05 TaskCreation_FunctionCheck",
			"item": [
				{
					"name": "Selecting Created Bot ",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"    function delay(ms) {\r",
									"        var cur_d = new Date();\r",
									"        var cur_ticks = cur_d.getTime();\r",
									"        var ms_passed = 0;\r",
									"        while(ms_passed < ms) {\r",
									"            var d = new Date();  // Possible memory leak?\r",
									"            var ticks = d.getTime();\r",
									"            ms_passed = ticks - cur_ticks;\r",
									"        }\r",
									"    }\r",
									"    delay(4000);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "bearer {{SanityAcToken1}}"
							},
							{
								"key": "bot-language",
								"value": "{{Lang}}"
							},
							{
								"key": "Connection",
								"value": "keep-alive"
							},
							{
								"key": "accountId",
								"value": "{{SanityAccountID1}}"
							}
						],
						"url": {
							"raw": "{{url}}/api/{{version}}/users/{{SanityUserID1}}/builder/streams/{{SanityBotStreamId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"{{version}}",
								"users",
								"{{SanityUserID1}}",
								"builder",
								"streams",
								"{{SanityBotStreamId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "CreateComponent_Intent",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"postman.setEnvironmentVariable(\"FunctionIntentName\", \"FunctionCheck\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"\r",
									"var data = JSON.parse(responseBody);\r",
									"pm.environment.set(\"FunctionComponentId1\", data._id);\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "authority",
								"value": "staging-bots.korebots.com"
							},
							{
								"key": "x-timezone-offset",
								"value": "-330"
							},
							{
								"key": "authorization",
								"value": "bearer {{SanityAcToken1}}"
							},
							{
								"key": "state",
								"value": "configured"
							},
							{
								"key": "content-type",
								"value": "application/json;charset=UTF-8"
							},
							{
								"key": "accept",
								"value": "application/json, text/plain, */*"
							},
							{
								"key": "user-agent",
								"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.105 Safari/537.36"
							},
							{
								"key": "bot-language",
								"value": "{{Lang}}"
							},
							{
								"key": "accountid",
								"value": "{{SanityAccountID1}}"
							},
							{
								"key": "origin",
								"value": "https://staging-bots.korebots.com"
							},
							{
								"key": "sec-fetch-site",
								"value": "same-origin"
							},
							{
								"key": "sec-fetch-mode",
								"value": "cors"
							},
							{
								"key": "sec-fetch-dest",
								"value": "empty"
							},
							{
								"key": "referer",
								"value": "https://staging-bots.korebots.com/botbuilder"
							},
							{
								"key": "accept-language",
								"value": "en-US,en;q=0.9"
							},
							{
								"key": "cookie",
								"value": "_ga=GA1.2.1918917934.1596810297; _gid=GA1.2.434737481.1596810297"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"desc\": \"Service Request\",\r\n    \"type\": \"intent\",\r\n    \"intent\": \"{{FunctionIntentName}}\",\r\n    \"preConditions\": []\r\n}"
						},
						"url": {
							"raw": "{{url}}/api/{{version}}/builder/streams/{{SanityBotStreamId}}/components",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"{{version}}",
								"builder",
								"streams",
								"{{SanityBotStreamId}}",
								"components"
							]
						}
					},
					"response": []
				},
				{
					"name": "AddComponentToDialog",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var data = JSON.parse(responseBody);\r",
									"pm.environment.set(\"FunctionDialogID\",data._id)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "authority",
								"value": "staging-bots.korebots.com"
							},
							{
								"key": "x-timezone-offset",
								"value": "-330"
							},
							{
								"key": "authorization",
								"value": "bearer {{SanityAcToken1}}"
							},
							{
								"key": "state",
								"value": "configured"
							},
							{
								"key": "content-type",
								"value": "application/json;charset=UTF-8"
							},
							{
								"key": "accept",
								"value": "application/json, text/plain, */*"
							},
							{
								"key": "user-agent",
								"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.105 Safari/537.36"
							},
							{
								"key": "bot-language",
								"value": "{{Lang}}"
							},
							{
								"key": "accountid",
								"value": "{{SanityAccountID1}}"
							},
							{
								"key": "origin",
								"value": "https://staging-bots.korebots.com"
							},
							{
								"key": "sec-fetch-site",
								"value": "same-origin"
							},
							{
								"key": "sec-fetch-mode",
								"value": "cors"
							},
							{
								"key": "sec-fetch-dest",
								"value": "empty"
							},
							{
								"key": "referer",
								"value": "https://staging-bots.korebots.com/botbuilder"
							},
							{
								"key": "accept-language",
								"value": "en-US,en;q=0.9"
							},
							{
								"key": "cookie",
								"value": "_ga=GA1.2.1918917934.1596810297; _gid=GA1.2.434737481.1596810297"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{FunctionIntentName}}\",\r\n    \"shortDesc\": \"\",\r\n    \"nodes\": [\r\n        {\r\n            \"nodeId\": \"intent0\",\r\n            \"type\": \"intent\",\r\n            \"componentId\": \"{{FunctionComponentId1}}\",\r\n            \"transitions\": [\r\n                {\r\n                    \"default\": \"\",\r\n                    \"metadata\": {\r\n                        \"color\": \"#299d8e\",\r\n                        \"connId\": \"dummy0\"\r\n                    }\r\n                }\r\n            ],\r\n            \"metadata\": {\r\n                \"left\": 30,\r\n                \"top\": 170\r\n            },\r\n            \"nodeOptions\": {\r\n                \"contextTags\": []\r\n            }\r\n        }\r\n    ],\r\n    \"visibility\": {\r\n        \"namespace\": \"private\",\r\n        \"namespaceIds\": [\r\n            \"\"\r\n        ]\r\n    },\r\n    \"isFollowUp\": false,\r\n    \"isHidden\": false,\r\n    \"interruptOptions\": {\r\n        \"priority\": \"bot\"\r\n    }\r\n}"
						},
						"url": {
							"raw": "{{url}}/api/{{version}}/builder/streams/{{SanityBotStreamId}}/dialogs",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"{{version}}",
								"builder",
								"streams",
								"{{SanityBotStreamId}}",
								"dialogs"
							]
						}
					},
					"response": []
				},
				{
					"name": "AddDialogToBot",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "authority",
								"value": "staging-bots.korebots.com"
							},
							{
								"key": "x-timezone-offset",
								"value": "-330"
							},
							{
								"key": "authorization",
								"value": "bearer {{SanityAcToken1}}"
							},
							{
								"key": "state",
								"value": "configured"
							},
							{
								"key": "content-type",
								"value": "application/json;charset=UTF-8"
							},
							{
								"key": "accept",
								"value": "application/json, text/plain, */*"
							},
							{
								"key": "bot-language",
								"value": "{{Lang}}"
							},
							{
								"key": "user-agent",
								"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.105 Safari/537.36"
							},
							{
								"key": "x-http-method-override",
								"value": "put"
							},
							{
								"key": "accountid",
								"value": "{{SanityAccountID1}}"
							},
							{
								"key": "origin",
								"value": "https://staging-bots.korebots.com"
							},
							{
								"key": "sec-fetch-site",
								"value": "same-origin"
							},
							{
								"key": "sec-fetch-mode",
								"value": "cors"
							},
							{
								"key": "sec-fetch-dest",
								"value": "empty"
							},
							{
								"key": "referer",
								"value": "https://staging-bots.korebots.com/botbuilder"
							},
							{
								"key": "accept-language",
								"value": "en-US,en;q=0.9"
							},
							{
								"key": "cookie",
								"value": "_ga=GA1.2.1918917934.1596810297; _gid=GA1.2.434737481.1596810297"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{FunctionIntentName}}\",\r\n    \"dialogId\": \"{{FunctionDialogID}}\"\r\n}"
						},
						"url": {
							"raw": "{{url}}/api/{{version}}/builder/streams/{{SanityBotStreamId}}/components/{{FunctionComponentId1}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"{{version}}",
								"builder",
								"streams",
								"{{SanityBotStreamId}}",
								"components",
								"{{FunctionComponentId1}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Bot Response",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"FunctionComponentId2\", data._id);",
									"",
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "bearer {{SanityAcToken1}}"
							},
							{
								"key": "User-Agent",
								"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/59.0.3071.115 Safari/537.36"
							},
							{
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8"
							},
							{
								"key": "bot-language",
								"value": "{{Lang}}"
							},
							{
								"key": "Connection",
								"value": "keep-alive"
							},
							{
								"key": "accountId",
								"value": "{{SanityAccountID1}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"BotResponse4\",\r\n    \"type\":\"message\",\r\n    \"message\": [\r\n        {\r\n            \"channel\": \"default\",\r\n            \"text\": \"print(sayHello())\",\r\n            \"type\": \"uxmap\"\r\n        }\r\n    ]\r\n}"
						},
						"url": {
							"raw": "{{url}}/api/{{version}}/builder/streams/{{SanityBotStreamId}}/components",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"{{version}}",
								"builder",
								"streams",
								"{{SanityBotStreamId}}",
								"components"
							]
						},
						"description": "Generated from a curl request: \ncurl 'https://qa1-bots.kore.ai/api/1.1/builder/streams/st-50d2f95b-caec-5eb2-9f20-fd38d046aadc/components?rnd=zdfcby' -H 'Authorization: bearer tIexWiLDp2hLaZhmLpiFUCdCFARigMoFGtJQWUqYMdKVK2FiikExDe7Q9C0Ych4L' -H 'Origin: https://qa1-bots.kore.ai' -H 'Accept-Encoding: gzip, deflate, br' -H 'Accept-Language: en-US,en;q=0.8' -H 'User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/59.0.3071.115 Safari/537.36' -H 'Content-Type: application/json;charset=UTF-8' -H 'Accept: application/json, text/plain, */*' -H 'Referer: https://qa1-bots.kore.ai/botbuilder' -H 'Cookie: unq=ceAq8vvAYpoymyxS; _ga=GA1.2.1747719766.1500544695; _gid=GA1.2.1492743728.1500872710; connect.sid=s%3AEXEpfWlnQjPUqOL7j2bmtGY7q4sSpbTe.JjUmYoH4qzj4dBIDzkMLjS58MQ0nmQWbuMlbIbLsX1o' -H 'Connection: keep-alive' --data-binary '{\\\"name\\\":\\\"Botresponse\\\",\\\"type\\\":\\\"message\\\",\\\"message\\\":[{\\\"channel\\\":\\\"default\\\",\\\"text\\\":\\\"SOAP Request validation successful\\\",\\\"type\\\":\\\"basic\\\"}]}' --compressed"
					},
					"response": []
				},
				{
					"name": "Add Component to dialog ",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "bearer {{SanityAcToken1}}"
							},
							{
								"key": "User-Agent",
								"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/59.0.3071.115 Safari/537.36"
							},
							{
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8"
							},
							{
								"key": "bot-language",
								"value": "{{Lang}}"
							},
							{
								"key": "Connection",
								"value": "keep-alive"
							},
							{
								"key": "accountId",
								"value": "{{SanityAccountID1}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"streamId\": \"{{SanityBotStreamId}}\",\n    \"name\": \"{{FunctionIntentName}}\",\n    \"nodes\": [\n        {\n            \"nodeOptions\": {\n                \"customTags\": {\n                    \"session\": [],\n                    \"message\": [],\n                    \"user\": []\n                },\n                \"transitionType\": \"auto\",\n                \"promptOptions\": \"required\",\n                \"reuseMarkedupPhrases\": false,\n                \"interruptOptions\": {\n                    \"priority\": \"task\"\n                },\n                \"transitionMode\": \"initiateCurrentTask\",\n                \"inputHandlingOptions\": \"useAsEntityValue\",\n                \"reuseOptions\": \"1\",\n                \"userInputCorrection\": true,\n                \"notForReuse\": false,\n                \"contextTags\": []\n            },\n            \"nodeId\": \"intent0\",\n            \"type\": \"intent\",\n            \"componentId\": \"{{FunctionComponentId1}}\",\n            \"transitions\": [\n                {\n                    \"default\": \"\",\n                    \"metadata\": {\n                        \"color\": \"#299d8e\",\n                        \"connId\": \"dummy0\"\n                    }\n                }\n            ],\n            \"metadata\": {\n                \"left\": 30,\n                \"top\": 170\n            }\n        },\n        {\n            \"nodeId\": \"message1\",\n            \"type\": \"message\",\n            \"componentId\": \"{{FunctionComponentId2}}\",\n            \"transitions\": [\n                {\n                    \"default\": \"\",\n                    \"metadata\": {\n                        \"color\": \"#299d8e\",\n                        \"connId\": \"dummy1\"\n                    }\n                }\n            ],\n            \"nodeOptions\": {\n                \"transitionType\": \"auto\"\n            }\n        }\n    ],\n    \"visibility\": {\n        \"namespace\": \"private\",\n        \"namespaceIds\": [\n            \"{{SanityUserID1}}\"\n        ]\n    }\n}"
						},
						"url": {
							"raw": "{{url}}/api/{{version}}/builder/streams/{{SanityBotStreamId}}/dialogs/{{FunctionDialogID}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"{{version}}",
								"builder",
								"streams",
								"{{SanityBotStreamId}}",
								"dialogs",
								"{{FunctionDialogID}}"
							]
						},
						"description": "Generated from a curl request: \ncurl 'https://qa1-bots.kore.ai/api/1.1/builder/streams/st-50d2f95b-caec-5eb2-9f20-fd38d046aadc/dialogs/dg-3e6131da-da58-5a96-becb-079f8aa93da9?rnd=5rnj0r' -H 'Authorization: bearer tIexWiLDp2hLaZhmLpiFUCdCFARigMoFGtJQWUqYMdKVK2FiikExDe7Q9C0Ych4L' -H 'Origin: https://qa1-bots.kore.ai' -H 'Accept-Encoding: gzip, deflate, br' -H 'Accept-Language: en-US,en;q=0.8' -H 'User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/59.0.3071.115 Safari/537.36' -H 'Content-Type: application/json;charset=UTF-8' -H 'Accept: application/json, text/plain, */*' -H 'Referer: https://qa1-bots.kore.ai/botbuilder' -H 'Cookie: unq=ceAq8vvAYpoymyxS; _ga=GA1.2.1747719766.1500544695; _gid=GA1.2.1492743728.1500872710; connect.sid=s%3AEXEpfWlnQjPUqOL7j2bmtGY7q4sSpbTe.JjUmYoH4qzj4dBIDzkMLjS58MQ0nmQWbuMlbIbLsX1o' -H 'Connection: keep-alive' -H 'X-HTTP-Method-Override: put' --data-binary '{\\\"streamId\\\":\\\"st-50d2f95b-caec-5eb2-9f20-fd38d046aadc\\\",\\\"name\\\":\\\"Verify SOAP Request\\\",\\\"nodes\\\":[{\\\"nodeId\\\":\\\"intent0\\\",\\\"type\\\":\\\"intent\\\",\\\"componentId\\\":\\\"dc-e13a263c-f7d7-5070-91d7-ca9356eec985\\\",\\\"transitions\\\":[{\\\"metadata\\\":{\\\"connId\\\":\\\"dummy0\\\",\\\"color\\\":\\\"#299d8e\\\"},\\\"default\\\":\\\"service1\\\"}],\\\"metadata\\\":{\\\"left\\\":31,\\\"top\\\":18},\\\"nodeOptions\\\":{\\\"transitionType\\\":\\\"auto\\\"}},{\\\"nodeId\\\":\\\"service1\\\",\\\"type\\\":\\\"service\\\",\\\"componentId\\\":\\\"dc-fb05b66b-8ff6-5468-8573-a05b298c0c51\\\",\\\"transitions\\\":[{\\\"metadata\\\":{\\\"connId\\\":\\\"dummy1\\\",\\\"color\\\":\\\"#299d8e\\\"},\\\"default\\\":\\\"\\\"}],\\\"nodeOptions\\\":{\\\"transitionType\\\":\\\"auto\\\"},\\\"metadata\\\":{\\\"left\\\":30,\\\"top\\\":171}},{\\\"nodeId\\\":\\\"message2\\\",\\\"type\\\":\\\"message\\\",\\\"componentId\\\":\\\"dc-c115ad54-ae26-5bb3-a66d-e9a3cd301fb2\\\",\\\"transitions\\\":[{\\\"default\\\":\\\"\\\",\\\"metadata\\\":{\\\"color\\\":\\\"#299d8e\\\",\\\"connId\\\":\\\"dummy2\\\"}}],\\\"nodeOptions\\\":{\\\"transitionType\\\":\\\"auto\\\"}}],\\\"visibility\\\":{\\\"namespaceIds\\\":[\\\"u-23d06a5c-f3c0-5f46-9c6f-808a014643dc\\\"],\\\"namespace\\\":\\\"private\\\"}}' --compressed"
					},
					"response": []
				},
				{
					"name": "Add Dialog To Bot",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "bearer {{SanityAcToken1}}"
							},
							{
								"key": "User-Agent",
								"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/59.0.3071.115 Safari/537.36"
							},
							{
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8"
							},
							{
								"key": "bot-language",
								"value": "{{Lang}}"
							},
							{
								"key": "Connection",
								"value": "keep-alive"
							},
							{
								"key": "accountId",
								"value": "{{SanityAccountID1}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"streamId\": \"{{SanityBotStreamId}}\",\n    \"name\": \"{{FunctionIntentName}}\",\n    \"nodes\": [\n        {\n            \"nodeOptions\": {\n                \"customTags\": {\n                    \"session\": [],\n                    \"message\": [],\n                    \"user\": []\n                },\n                \"transitionType\": \"auto\",\n                \"promptOptions\": \"required\",\n                \"reuseMarkedupPhrases\": false,\n                \"interruptOptions\": {\n                    \"priority\": \"task\"\n                },\n                \"transitionMode\": \"initiateCurrentTask\",\n                \"inputHandlingOptions\": \"useAsEntityValue\",\n                \"reuseOptions\": \"1\",\n                \"userInputCorrection\": true,\n                \"notForReuse\": false,\n                \"contextTags\": [],\n                \"isOptional\": false\n            },\n            \"nodeId\": \"intent0\",\n            \"type\": \"intent\",\n            \"componentId\": \"{{FunctionComponentId1}}\",\n            \"transitions\": [\n                {\n                    \"default\": \"message1\",\n                    \"metadata\": {\n                        \"color\": \"#299d8e\",\n                        \"connId\": \"dummy0\"\n                    }\n                }\n            ],\n            \"metadata\": {\n                \"left\": 30,\n                \"top\": 170\n            }\n        },\n        {\n            \"nodeOptions\": {\n                \"customTags\": {\n                    \"session\": [],\n                    \"message\": [],\n                    \"user\": []\n                },\n                \"transitionType\": \"auto\",\n                \"promptOptions\": \"required\",\n                \"reuseMarkedupPhrases\": false,\n                \"interruptOptions\": {\n                    \"priority\": \"task\"\n                },\n                \"transitionMode\": \"initiateCurrentTask\",\n                \"inputHandlingOptions\": \"useAsEntityValue\",\n                \"reuseOptions\": \"1\",\n                \"userInputCorrection\": true,\n                \"notForReuse\": false,\n                \"contextTags\": []\n            },\n            \"nodeId\": \"message1\",\n            \"type\": \"message\",\n            \"componentId\": \"{{FunctionComponentId2}}\",\n            \"transitions\": [\n                {\n                    \"default\": \"\",\n                    \"metadata\": {\n                        \"color\": \"#299d8e\",\n                        \"connId\": \"dummy1\"\n                    }\n                }\n            ]\n        }\n    ],\n    \"visibility\": {\n        \"namespace\": \"private\",\n        \"namespaceIds\": [\n            \"{{SanityUserID1}}\"\n        ]\n    }\n}"
						},
						"url": {
							"raw": "{{url}}/api/{{version}}/builder/streams/{{SanityBotStreamId}}/dialogs/{{FunctionDialogID}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"{{version}}",
								"builder",
								"streams",
								"{{SanityBotStreamId}}",
								"dialogs",
								"{{FunctionDialogID}}"
							]
						},
						"description": "Generated from a curl request: \ncurl 'https://qa1-bots.kore.ai/api/1.1/builder/streams/st-50d2f95b-caec-5eb2-9f20-fd38d046aadc/dialogs/dg-3e6131da-da58-5a96-becb-079f8aa93da9?rnd=h2ovu' -H 'Authorization: bearer tIexWiLDp2hLaZhmLpiFUCdCFARigMoFGtJQWUqYMdKVK2FiikExDe7Q9C0Ych4L' -H 'Origin: https://qa1-bots.kore.ai' -H 'Accept-Encoding: gzip, deflate, br' -H 'Accept-Language: en-US,en;q=0.8' -H 'User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/59.0.3071.115 Safari/537.36' -H 'Content-Type: application/json;charset=UTF-8' -H 'Accept: application/json, text/plain, */*' -H 'Referer: https://qa1-bots.kore.ai/botbuilder' -H 'Cookie: unq=ceAq8vvAYpoymyxS; _ga=GA1.2.1747719766.1500544695; _gid=GA1.2.1492743728.1500872710; connect.sid=s%3AEXEpfWlnQjPUqOL7j2bmtGY7q4sSpbTe.JjUmYoH4qzj4dBIDzkMLjS58MQ0nmQWbuMlbIbLsX1o' -H 'Connection: keep-alive' -H 'X-HTTP-Method-Override: put' --data-binary '{\\\"streamId\\\":\\\"st-50d2f95b-caec-5eb2-9f20-fd38d046aadc\\\",\\\"name\\\":\\\"Verify SOAP Request\\\",\\\"nodes\\\":[{\\\"nodeId\\\":\\\"intent0\\\",\\\"type\\\":\\\"intent\\\",\\\"componentId\\\":\\\"dc-e13a263c-f7d7-5070-91d7-ca9356eec985\\\",\\\"transitions\\\":[{\\\"metadata\\\":{\\\"connId\\\":\\\"dummy0\\\",\\\"color\\\":\\\"#299d8e\\\"},\\\"default\\\":\\\"service1\\\"}],\\\"metadata\\\":{\\\"left\\\":31,\\\"top\\\":18},\\\"nodeOptions\\\":{\\\"transitionType\\\":\\\"auto\\\"}},{\\\"nodeId\\\":\\\"service1\\\",\\\"type\\\":\\\"service\\\",\\\"componentId\\\":\\\"dc-fb05b66b-8ff6-5468-8573-a05b298c0c51\\\",\\\"transitions\\\":[{\\\"default\\\":\\\"message2\\\",\\\"metadata\\\":{\\\"color\\\":\\\"#299d8e\\\",\\\"connId\\\":\\\"dummy1\\\"}}],\\\"metadata\\\":{\\\"left\\\":30,\\\"top\\\":171},\\\"nodeOptions\\\":{\\\"transitionType\\\":\\\"auto\\\"}},{\\\"nodeId\\\":\\\"message2\\\",\\\"type\\\":\\\"message\\\",\\\"componentId\\\":\\\"dc-c115ad54-ae26-5bb3-a66d-e9a3cd301fb2\\\",\\\"transitions\\\":[{\\\"default\\\":\\\"\\\",\\\"metadata\\\":{\\\"color\\\":\\\"#299d8e\\\",\\\"connId\\\":\\\"dummy2\\\"}}],\\\"nodeOptions\\\":{\\\"transitionType\\\":\\\"auto\\\"}}],\\\"visibility\\\":{\\\"namespaceIds\\\":[\\\"u-23d06a5c-f3c0-5f46-9c6f-808a014643dc\\\"],\\\"namespace\\\":\\\"private\\\"}}' --compressed"
					},
					"response": []
				},
				{
					"name": "End of transactions",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "bearer {{SanityAcToken1}}"
							},
							{
								"key": "User-Agent",
								"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/59.0.3071.115 Safari/537.36"
							},
							{
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8"
							},
							{
								"key": "bot-language",
								"value": "{{Lang}}"
							},
							{
								"key": "Connection",
								"value": "keep-alive"
							},
							{
								"key": "accountId",
								"value": "{{SanityAccountID1}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"transitions\": [\r\n        {\r\n            \"default\": \"end\",\r\n            \"metadata\": {\r\n                \"color\": \"#299d8e\",\r\n                \"connId\": \"dummy3\"\r\n            }\r\n        }\r\n    ],\r\n    \"nodeOptions\": {\r\n        \"transitionType\": \"auto\"\r\n    }\r\n}"
						},
						"url": {
							"raw": "{{url}}/api/{{version}}/builder/streams/{{SanityBotStreamId}}/dialogs/{{FunctionDialogID}}/nodes/message1",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"{{version}}",
								"builder",
								"streams",
								"{{SanityBotStreamId}}",
								"dialogs",
								"{{FunctionDialogID}}",
								"nodes",
								"message1"
							]
						},
						"description": "Generated from a curl request: \ncurl 'https://qa1-bots.kore.ai/api/1.1/builder/streams/st-50d2f95b-caec-5eb2-9f20-fd38d046aadc/dialogs/dg-3e6131da-da58-5a96-becb-079f8aa93da9/nodes/message2?rnd=yvzbrw' -H 'Authorization: bearer tIexWiLDp2hLaZhmLpiFUCdCFARigMoFGtJQWUqYMdKVK2FiikExDe7Q9C0Ych4L' -H 'Origin: https://qa1-bots.kore.ai' -H 'Accept-Encoding: gzip, deflate, br' -H 'Accept-Language: en-US,en;q=0.8' -H 'User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/59.0.3071.115 Safari/537.36' -H 'Content-Type: application/json;charset=UTF-8' -H 'Accept: application/json, text/plain, */*' -H 'Referer: https://qa1-bots.kore.ai/botbuilder' -H 'Cookie: unq=ceAq8vvAYpoymyxS; _ga=GA1.2.1747719766.1500544695; _gid=GA1.2.1492743728.1500872710; connect.sid=s%3AEXEpfWlnQjPUqOL7j2bmtGY7q4sSpbTe.JjUmYoH4qzj4dBIDzkMLjS58MQ0nmQWbuMlbIbLsX1o' -H 'Connection: keep-alive' -H 'X-HTTP-Method-Override: put' --data-binary '{\\\"transitions\\\":[{\\\"default\\\":\\\"end\\\",\\\"metadata\\\":{\\\"color\\\":\\\"#299d8e\\\",\\\"connId\\\":\\\"dummy2\\\"}}],\\\"nodeOptions\\\":{\\\"transitionType\\\":\\\"auto\\\"}}' --compressed"
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "1.06 SmallTalk_Creation",
			"item": [
				{
					"name": "Get_SmallTalk_Groups",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Default SmallTalk Group is available\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"greetings\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "authority",
								"value": "staging-bots.korebots.com"
							},
							{
								"key": "x-timezone-offset",
								"value": "-330"
							},
							{
								"key": "authorization",
								"value": "bearer {{SanityAcToken1}}"
							},
							{
								"key": "state",
								"value": "configured"
							},
							{
								"key": "content-type",
								"value": "application/json;charset=UTF-8"
							},
							{
								"key": "accept",
								"value": "application/json, text/plain, */*"
							},
							{
								"key": "user-agent",
								"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36"
							},
							{
								"key": "bot-language",
								"value": "{{Lang}}"
							},
							{
								"key": "accountid",
								"value": "{{SanityAccountID1}}"
							},
							{
								"key": "sec-fetch-site",
								"value": "same-origin"
							},
							{
								"key": "sec-fetch-mode",
								"value": "cors"
							},
							{
								"key": "sec-fetch-dest",
								"value": "empty"
							},
							{
								"key": "referer",
								"value": "https://staging-bots.korebots.com/botbuilder"
							},
							{
								"key": "accept-language",
								"value": "en-US,en;q=0.9"
							},
							{
								"key": "cookie",
								"value": "_ga=GA1.2.636363819.1595827177; _gid=GA1.2.1709581646.1595827177"
							}
						],
						"url": {
							"raw": "{{url}}/api/{{version}}/builder/streams/{{SanityBotStreamId}}/smalltalk/groups",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"{{version}}",
								"builder",
								"streams",
								"{{SanityBotStreamId}}",
								"smalltalk",
								"groups"
							]
						}
					},
					"response": []
				},
				{
					"name": "CreateSmallTalkGroup",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"var data=JSON.parse(responseBody);\r",
									"pm.environment.set(\"SanitySmallTalkGroupID\",data.groupId);\r",
									"pm.test(\"Created SmallTalk Group is available in the response\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"NetworkOptions\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "authority",
								"value": "staging-bots.korebots.com"
							},
							{
								"key": "x-timezone-offset",
								"value": "-330"
							},
							{
								"key": "authorization",
								"value": "bearer {{SanityAcToken1}}"
							},
							{
								"key": "state",
								"value": "configured"
							},
							{
								"key": "content-type",
								"value": "application/json;charset=UTF-8"
							},
							{
								"key": "accept",
								"value": "application/json, text/plain, */*"
							},
							{
								"key": "bot-language",
								"value": "{{Lang}}"
							},
							{
								"key": "user-agent",
								"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36"
							},
							{
								"key": "x-http-method-override",
								"value": "put"
							},
							{
								"key": "accountid",
								"value": "{{SanityAccountID1}}"
							},
							{
								"key": "origin",
								"value": "https://staging-bots.korebots.com"
							},
							{
								"key": "sec-fetch-site",
								"value": "same-origin"
							},
							{
								"key": "sec-fetch-mode",
								"value": "cors"
							},
							{
								"key": "sec-fetch-dest",
								"value": "empty"
							},
							{
								"key": "referer",
								"value": "https://staging-bots.korebots.com/botbuilder"
							},
							{
								"key": "accept-language",
								"value": "en-US,en;q=0.9"
							},
							{
								"key": "cookie",
								"value": "_ga=GA1.2.636363819.1595827177; _gid=GA1.2.1709581646.1595827177"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"groupName\": \"NetworkOptions\"\r\n}"
						},
						"url": {
							"raw": "{{url}}/api/{{version}}/builder/streams/{{SanityBotStreamId}}/smalltalk/groups",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"{{version}}",
								"builder",
								"streams",
								"{{SanityBotStreamId}}",
								"smalltalk",
								"groups"
							]
						}
					},
					"response": []
				},
				{
					"name": "SmallTalkAddition ",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Added Small Talk is available in the response\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"difference between the Internet, Intranet, and Extranet?\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "authority",
								"value": "staging-bots.korebots.com"
							},
							{
								"key": "x-timezone-offset",
								"value": "-330"
							},
							{
								"key": "authorization",
								"value": "bearer {{SanityAcToken1}}"
							},
							{
								"key": "state",
								"value": "configured"
							},
							{
								"key": "content-type",
								"value": "application/json;charset=UTF-8"
							},
							{
								"key": "accept",
								"value": "application/json, text/plain, */*"
							},
							{
								"key": "user-agent",
								"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36"
							},
							{
								"key": "bot-language",
								"value": "{{Lang}}"
							},
							{
								"key": "accountid",
								"value": "{{SanityAccountID1}}"
							},
							{
								"key": "origin",
								"value": "https://staging-bots.korebots.com"
							},
							{
								"key": "sec-fetch-site",
								"value": "same-origin"
							},
							{
								"key": "sec-fetch-mode",
								"value": "cors"
							},
							{
								"key": "sec-fetch-dest",
								"value": "empty"
							},
							{
								"key": "referer",
								"value": "https://staging-bots.korebots.com/botbuilder"
							},
							{
								"key": "accept-language",
								"value": "en-US,en;q=0.9"
							},
							{
								"key": "cookie",
								"value": "_ga=GA1.2.636363819.1595827177; _gid=GA1.2.1709581646.1595827177"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"userUtterances\": [\r\n        {\r\n            \"text\": \"difference between the Internet, Intranet, and Extranet?\"\r\n        }\r\n    ],\r\n    \"botUtterances\": [\r\n        {\r\n            \"channel\": \"default\",\r\n            \"type\": \"basic\",\r\n            \"_id\": \"\",\r\n            \"text\": \"The terminologies Internet, Intranet, and Extranet are used to define how the applications in the network can be accessed. They use similar TCP/IP technology but differ in terms of access levels for each user inside the network and outside the network.\"\r\n        }\r\n    ],\r\n    \"seq\": 0\r\n}"
						},
						"url": {
							"raw": "{{url}}/api/{{version}}/builder/streams/{{SanityBotStreamId}}/smalltalk/groups/{{SanitySmallTalkGroupID}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"{{version}}",
								"builder",
								"streams",
								"{{SanityBotStreamId}}",
								"smalltalk",
								"groups",
								"{{SanitySmallTalkGroupID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Train",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"setTimeout(() => {}, 15000); "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "authority",
								"value": "staging-bots.korebots.com"
							},
							{
								"key": "x-timezone-offset",
								"value": "-330"
							},
							{
								"key": "authorization",
								"value": "bearer {{SanityAcToken1}}"
							},
							{
								"key": "state",
								"value": "configured"
							},
							{
								"key": "content-type",
								"value": "application/json;charset=UTF-8"
							},
							{
								"key": "accept",
								"value": "application/json, text/plain, */*"
							},
							{
								"key": "user-agent",
								"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36"
							},
							{
								"key": "bot-language",
								"value": "{{Lang}}"
							},
							{
								"key": "accountid",
								"value": "{{SanityAccountID1}}"
							},
							{
								"key": "origin",
								"value": "https://staging-bots.korebots.com"
							},
							{
								"key": "sec-fetch-site",
								"value": "same-origin"
							},
							{
								"key": "sec-fetch-mode",
								"value": "cors"
							},
							{
								"key": "sec-fetch-dest",
								"value": "empty"
							},
							{
								"key": "referer",
								"value": "https://staging-bots.korebots.com/botbuilder"
							},
							{
								"key": "accept-language",
								"value": "en-US,en;q=0.9"
							},
							{
								"key": "cookie",
								"value": "_ga=GA1.2.636363819.1595827177; _gid=GA1.2.1709581646.1595827177"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{}"
						},
						"url": {
							"raw": "{{url}}/api/{{version}}/users/{{SanityUserID1}}/builder/sentences/ml/train?streamId={{SanityBotStreamId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"{{version}}",
								"users",
								"{{SanityUserID1}}",
								"builder",
								"sentences",
								"ml",
								"train"
							],
							"query": [
								{
									"key": "streamId",
									"value": "{{SanityBotStreamId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get_SmallTalk_Groups ",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"var data = JSON.parse(responseBody);\r",
									"var check=false\r",
									"_.forEach(data,function (ind,value){\r",
									"if(data){\r",
									"    check=true;\r",
									"    tests[\"SmallTalk with GroupName: \" +ind.groupName+ \", exists in the bot.\"]=true;\r",
									"}\r",
									"if (data.length == value+1){\r",
									"    if(check == false){\r",
									"    tests[\"Small Talk Groups are not available in the Bot\"]=false;\r",
									"\r",
									"    }\r",
									"}\r",
									"\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "authority",
								"value": "staging-bots.korebots.com"
							},
							{
								"key": "x-timezone-offset",
								"value": "-330"
							},
							{
								"key": "authorization",
								"value": "bearer {{SanityAcToken1}}"
							},
							{
								"key": "state",
								"value": "configured"
							},
							{
								"key": "content-type",
								"value": "application/json;charset=UTF-8"
							},
							{
								"key": "accept",
								"value": "application/json, text/plain, */*"
							},
							{
								"key": "user-agent",
								"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36"
							},
							{
								"key": "bot-language",
								"value": "{{Lang}}"
							},
							{
								"key": "accountid",
								"value": "{{SanityAccountID1}}"
							},
							{
								"key": "sec-fetch-site",
								"value": "same-origin"
							},
							{
								"key": "sec-fetch-mode",
								"value": "cors"
							},
							{
								"key": "sec-fetch-dest",
								"value": "empty"
							},
							{
								"key": "referer",
								"value": "https://staging-bots.korebots.com/botbuilder"
							},
							{
								"key": "accept-language",
								"value": "en-US,en;q=0.9"
							},
							{
								"key": "cookie",
								"value": "_ga=GA1.2.636363819.1595827177; _gid=GA1.2.1709581646.1595827177"
							}
						],
						"url": {
							"raw": "{{url}}/api/{{version}}/builder/streams/{{SanityBotStreamId}}/smalltalk/groups",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"{{version}}",
								"builder",
								"streams",
								"{{SanityBotStreamId}}",
								"smalltalk",
								"groups"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "1.07 Synonyms_Creation",
			"item": [
				{
					"name": "Add Bot Synonyms",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Adding bot Synonyms\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var responseJson = JSON.parse(responseBody)\r",
									"var synonym = responseJson.synonyms.Support[0];\r",
									"var flag = 0;\r",
									"pm.test(\"Synonym addition\", function () {\r",
									"    pm.expect(synonym).to.equal(\"customersupport\");\r",
									"    flag = 1;\r",
									"});\r",
									"if (flag === 0) {\r",
									"    tests[\"Synonym is not available\"] = false;\r",
									"} else {\r",
									"    tests[\"Customersupport synonym is added\"] = true;\r",
									"}\r",
									"\r",
									"var responseJson = JSON.parse(responseBody)\r",
									"var synonym = responseJson.synonyms.Support[1];\r",
									"var flag = 0;\r",
									"pm.test(\"Synonym addition\", function () {\r",
									"    pm.expect(synonym).to.equal(\"Customercare\");\r",
									"    flag = 1;\r",
									"});\r",
									"if (flag === 0) {\r",
									"    tests[\"Synonym is not available\"] = false;\r",
									"} else {\r",
									"    tests[\"Customercare synonym is added\"] = true;\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "authority",
								"value": "staging-bots.korebots.com"
							},
							{
								"key": "x-timezone-offset",
								"value": "-330"
							},
							{
								"key": "authorization",
								"value": "bearer {{SanityAcToken1}}"
							},
							{
								"key": "state",
								"value": "configured"
							},
							{
								"key": "content-type",
								"value": "application/json;charset=UTF-8"
							},
							{
								"key": "accept",
								"value": "application/json, text/plain, */*"
							},
							{
								"key": "user-agent",
								"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.105 Safari/537.36"
							},
							{
								"key": "bot-language",
								"value": "en"
							},
							{
								"key": "accountid",
								"value": "{{SanityAccountID1}}"
							},
							{
								"key": "origin",
								"value": "https://staging-bots.korebots.com"
							},
							{
								"key": "sec-fetch-site",
								"value": "same-origin"
							},
							{
								"key": "sec-fetch-mode",
								"value": "cors"
							},
							{
								"key": "sec-fetch-dest",
								"value": "empty"
							},
							{
								"key": "referer",
								"value": "{{url}}"
							},
							{
								"key": "accept-language",
								"value": "en-US,en;q=0.9"
							},
							{
								"key": "cookie",
								"value": "_ga=GA1.2.56645577.1596813294; _gid=GA1.2.113920096.1596813294"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"synonyms\": {\r\n        \"create\": [\r\n            \"new\",\r\n            \"add\",\r\n            \"assemble\",\r\n            \"build\",\r\n            \"compose\",\r\n            \"construct\",\r\n            \"contrive\",\r\n            \"create\",\r\n            \"design\",\r\n            \"generate\",\r\n            \"instantiate\",\r\n            \"invent\",\r\n            \"make\",\r\n            \"manufacture\",\r\n            \"produce\",\r\n            \"synthesize\",\r\n            \"synthetise\",\r\n            \"synthetize\",\r\n            \"write\"\r\n        ],\r\n        \"alter\": [\r\n            \"adjust\",\r\n            \"alter\",\r\n            \"amend\",\r\n            \"renovate\",\r\n            \"revise\",\r\n            \"modify\",\r\n            \"revamp\",\r\n            \"reshape\",\r\n            \"reconstruct\",\r\n            \"recast\",\r\n            \"change\",\r\n            \"update\"\r\n        ],\r\n        \"add\": [\r\n            \"insert\",\r\n            \"append\",\r\n            \"attach\",\r\n            \"add\"\r\n        ],\r\n        \"delete\": [\r\n            \"abolish\",\r\n            \"annihilate\",\r\n            \"delete\",\r\n            \"demolish\",\r\n            \"destroy\",\r\n            \"efface\",\r\n            \"erase\",\r\n            \"eliminate\",\r\n            \"obliterate\"\r\n        ],\r\n        \"get\": [\r\n            \"find\",\r\n            \"garner\",\r\n            \"gather\",\r\n            \"get\",\r\n            \"grab\",\r\n            \"obtain\",\r\n            \"retrieve\",\r\n            \"show\",\r\n            \"display\",\r\n            \"give\"\r\n        ],\r\n        \"list\": [\r\n            \"enumerate\",\r\n            \"list\",\r\n            \"name\",\r\n            \"tell\"\r\n        ],\r\n        \"comment\": [\r\n            \"comment\",\r\n            \"annotate\",\r\n            \"describe\"\r\n        ],\r\n        \"pick\": [\r\n            \"choose\",\r\n            \"decide\",\r\n            \"handpick\",\r\n            \"pick\",\r\n            \"prefer\",\r\n            \"recommend\",\r\n            \"select\",\r\n            \"suggest\"\r\n        ],\r\n        \"request\": [\r\n            \"ask\",\r\n            \"request\"\r\n        ],\r\n        \"post\": [\r\n            \"post\",\r\n            \"put\",\r\n            \"place\",\r\n            \"submit\"\r\n        ],\r\n        \"top\": [\r\n            \"top\",\r\n            \"valuable\",\r\n            \"best\",\r\n            \"foremost\",\r\n            \"peak\"\r\n        ],\r\n        \"recent\": [\r\n            \"recent\",\r\n            \"new\"\r\n        ],\r\n        \"customer\": [\r\n            \"customer\",\r\n            \"client\",\r\n            \"user\"\r\n        ],\r\n        \"info\": [\r\n            \"detail\",\r\n            \"specific\",\r\n            \"information\",\r\n            \"info\"\r\n        ],\r\n        \"rank\": [\r\n            \"rating\",\r\n            \"rate\",\r\n            \"rank\"\r\n        ],\r\n        \"item\": [\r\n            \"stock\",\r\n            \"inventory\",\r\n            \"item\",\r\n            \"product\"\r\n        ],\r\n        \"~you\": [\r\n            \"you\",\r\n            \"u\"\r\n        ],\r\n        \"~your\": [\r\n            \"Your\"\r\n        ],\r\n        \"~emohowzit\": [\r\n            \"< how_are_u >\",\r\n            \"< how_are_u_doing >\",\r\n            \"< how_do_u_do >\",\r\n            \"< how_have_u_been >\",\r\n            \"< how_have_u_been_doing >\",\r\n            \"how_are_you >\",\r\n            \"how_are_u >\",\r\n            \"< how_are_u\",\r\n            \"< how_are_u_doing\",\r\n            \"< how_are_you\",\r\n            \"< how are you today\",\r\n            \"< how are you\",\r\n            \"< how are u doing today\",\r\n            \"< how are u doing\",\r\n            \"< how are u today \",\r\n            \"< how are u\",\r\n            \" how are u today >\",\r\n            \" how are u >\",\r\n            \" how are you today >\",\r\n            \" how are you > \",\r\n            \"< how have u been doing >\",\r\n            \"< how have u been doing today >\",\r\n            \"< how have u been today >\",\r\n            \"< how have u been >\",\r\n            \"< how do u do > \",\r\n            \"< how are u doing today >\",\r\n            \"< how are u doing >\",\r\n            \"< how are u today >\",\r\n            \"< how are u >\",\r\n            \" whazzupp \",\r\n            \" whatcha upto\",\r\n            \" watsup\",\r\n            \" wassup\",\r\n            \" howzit\",\r\n            \" comment est vous \",\r\n            \" comment ca va\",\r\n            \" ca va\",\r\n            \"< what up\",\r\n            \"< what is up today\",\r\n            \"< what is up \",\r\n            \"< what is the word >\",\r\n            \"< what is the latest word >\",\r\n            \"< what is new >\",\r\n            \"< what is happening >\",\r\n            \"< what is going on > \",\r\n            \"< what'up\",\r\n            \"< is everything OK\",\r\n            \"< is everything alright\",\r\n            \"< how you feeling\",\r\n            \"< how you doing \",\r\n            \"< how is tricks\",\r\n            \"< how is life\",\r\n            \"< how is it going\",\r\n            \"< how is everything\",\r\n            \"< how is by you \",\r\n            \"< how have you been doing >\",\r\n            \"< how have you been >\",\r\n            \"< how goes >\",\r\n            \"< how goes things\",\r\n            \"< how goes it \",\r\n            \"< how is your day\",\r\n            \"< how do you do >\",\r\n            \"< how are you >\",\r\n            \"< how are things >\",\r\n            \"< heya\"\r\n        ],\r\n        \"~emohello\": [\r\n            \"Hi >\",\r\n            \"< hi\",\r\n            \"hello >\",\r\n            \"hi_there >\",\r\n            \"hi there >\",\r\n            \" hello >\",\r\n            \"< hii\",\r\n            \" hi >\",\r\n            \"< welcome \",\r\n            \"< salutations\",\r\n            \"< ohayou\",\r\n            \"< nice to see you\",\r\n            \"< nice to meet you\",\r\n            \"< mornin' \",\r\n            \"< konnichiwa\",\r\n            \"< konnichi wa\",\r\n            \"< konbanwa\",\r\n            \"< konban wa\",\r\n            \"< howdy \",\r\n            \"< hola\",\r\n            \"< hiya\",\r\n            \"< hi you all\",\r\n            \"< hi there\",\r\n            \"< hi \",\r\n            \"< hey you\",\r\n            \"< hey there\",\r\n            \"< hey , there\",\r\n            \"< hey\",\r\n            \"< hello there \",\r\n            \"< hello and welcome\",\r\n            \"< hello\",\r\n            \"< hella\",\r\n            \"< hallo\",\r\n            \"< greetings \",\r\n            \"< good to see you again\",\r\n            \"< good to meet you\",\r\n            \"< goodmorning\",\r\n            \"< good morning\",\r\n            \"< goodevening \",\r\n            \"< good evening\",\r\n            \"< goodday\",\r\n            \"< good day\",\r\n            \"< goodafternoon\",\r\n            \"< good afternoon \",\r\n            \"< gidday\",\r\n            \"< cheers\",\r\n            \"< aloha\",\r\n            \"< top of the morning to you\",\r\n            \"< top of the morning\"\r\n        ],\r\n        \"~emohappy\": [\r\n            \"< nice\",\r\n            \":D\",\r\n            \":}\",\r\n            \":]\",\r\n            \":)\",\r\n            \"< yowzit\",\r\n            \"< yippy\",\r\n            \"< yahoo >\",\r\n            \"< whoopie\",\r\n            \"< nice >\",\r\n            \"< nice_one\",\r\n            \"< in-fucking-credible\",\r\n            \"< hooray\",\r\n            \"< hip_hip_hooray\",\r\n            \"< good_for_you\",\r\n            \"< congratulations\",\r\n            \"< congratudolences\",\r\n            \"< congrats\",\r\n            \"< bravo\",\r\n            \"< boo-yah\",\r\n            \"< attagirl\",\r\n            \"< attaboy\"\r\n        ],\r\n        \"~positiveackwords\": [\r\n            \"good\",\r\n            \"great\",\r\n            \"awesome\",\r\n            \"cool\",\r\n            \"fair_enough\",\r\n            \"~helpwords\"\r\n        ],\r\n        \"~helpwords\": [\r\n            \"it_help\",\r\n            \"a_help\"\r\n        ],\r\n        \"~ibedone\": [\r\n            \"I_am_done\",\r\n            \"that_is_it\",\r\n            \"that_is_all\",\r\n            \"it_for_now\",\r\n            \"~done\"\r\n        ],\r\n        \"~done\": [\r\n            \"< Done >\"\r\n        ],\r\n        \"~emogoodbye\": [\r\n            \"Goodnight >\",\r\n            \"bfn\",\r\n            \"bbfn\",\r\n            \"< ttyl\",\r\n            \"< ttfn\",\r\n            \"< tnt\",\r\n            \"< ta_ta\",\r\n            \"< ta-ta-for-now\",\r\n            \"< gtg\",\r\n            \"< logout\",\r\n            \"< logoff\",\r\n            \"< l8r_l8r\",\r\n            \"< l8r\",\r\n            \"< gnstdltbbb\",\r\n            \"< gn\",\r\n            \"< cyal8r\",\r\n            \"< cya\",\r\n            \"< cu_through_with_you_for_now\",\r\n            \"through_for_now_see_you_later\",\r\n            \"I_will_be_back\",\r\n            \"goodbye\",\r\n            \"good_bye\",\r\n            \"g_bye\",\r\n            \"call_it_a_night\",\r\n            \"byebye\",\r\n            \"< you_all_come_back_now\",\r\n            \"< until_next_time\",\r\n            \"< toodles\",\r\n            \"< toodle_pip\",\r\n            \"< toodeloo\",\r\n            \"< time_to_go\",\r\n            \"< time_to_be\",\r\n            \"< till_we_meet_again\",\r\n            \"< till_next_time\",\r\n            \"< till_another_time\",\r\n            \"< talk_to_you_later\",\r\n            \"< take_it_easy\",\r\n            \"< take_care_of_yourself\",\r\n            \"< take_care\",\r\n            \"< so_long\",\r\n            \"< see_you >\",\r\n            \"< see_you_tomorrow\",\r\n            \"< see_you_soon\",\r\n            \"< see_you_later_,_aligator\",\r\n            \"< see_you_later\",\r\n            \"< sayonara\",\r\n            \"< nite-nite\",\r\n            \"< nighty-night\",\r\n            \"< later_\",\r\n            \"gator\",\r\n            \"< later >\",\r\n            \"< it_was_nice_to_meet_you\",\r\n            \"< it_was_nice_meeting_you\",\r\n            \"< it_was_good_to_meet_you\",\r\n            \"< it_was_good_meeting_you\",\r\n            \"< I_want_to_go_now\",\r\n            \"< I_need_to_go_now\",\r\n            \"< I_need_to_go >\",\r\n            \"< I_must_go_now\",\r\n            \"< I_must_go >\",\r\n            \"< I_have_to_run\",\r\n            \"< I_have_to_leave_you >\",\r\n            \"< I_am_leaving >\",\r\n            \"< I_am_late_for\",\r\n            \"< have_to_get_going\",\r\n            \"< have_to_boogie\",\r\n            \"< have_a_nice_night\",\r\n            \"< have_a_nice_day\",\r\n            \"< have_a_great_weekend >\",\r\n            \"< have_a_great_evening >\",\r\n            \"< have_a_great_day >\",\r\n            \"< have_a_good_weekend\",\r\n            \"< have_a_good_evening\",\r\n            \"< have_a_good_one\",\r\n            \"< have_a_better_\",\r\n            \"un\",\r\n            \"< got_to_run\",\r\n            \"< got_to_go\",\r\n            \"< goodnight\",\r\n            \"< good_night\",\r\n            \"sleep_tight\",\r\n            \"do_not_let_the_bed_bugs_bite\",\r\n            \"< good_night\",\r\n            \"< good-bye\",\r\n            \"< good-by\",\r\n            \"< god_bless_you\",\r\n            \"< farewell\",\r\n            \"< ciao\",\r\n            \"< cheerio\",\r\n            \"< catch-you-later\",\r\n            \"< bye_bye\",\r\n            \"< bye\",\r\n            \"< be_seeing_you\",\r\n            \"< bai_bai\",\r\n            \"< auf_wiedersehen\",\r\n            \"< au_revoir\",\r\n            \"< another_time >\",\r\n            \"< adios\",\r\n            \"< adieu\",\r\n            \"have_to_leave >\",\r\n            \"have_to_stop >\",\r\n            \"have_to_go >\",\r\n            \"have_to_quit >\"\r\n        ],\r\n        \"~yes\": [\r\n            \"< go ahead with\",\r\n            \"< thats great yes\",\r\n            \"< thats great , yes\",\r\n            \"< thats great yes\",\r\n            \"< ack\",\r\n            \"< we do >\",\r\n            \"touche\",\r\n            \"< they do >\",\r\n            \"< they are > \",\r\n            \"< she is >\",\r\n            \"< she does >\",\r\n            \"right-o\",\r\n            \"okey\",\r\n            \"okay \",\r\n            \"< it is >\",\r\n            \"< it does >\",\r\n            \"I would say so\",\r\n            \"< he is >\",\r\n            \"< he does > \",\r\n            \"d'accord\",\r\n            \"< bring it on >\",\r\n            \"< yuppers\",\r\n            \"< yup\",\r\n            \"< you may have a point \",\r\n            \"< you may be right\",\r\n            \"< you may\",\r\n            \"< you could say that >\",\r\n            \"< you bet >\",\r\n            \"< you are right \",\r\n            \"< yip\",\r\n            \"< yes really\",\r\n            \"< yes please\",\r\n            \"< yes\",\r\n            \"< yeppers \",\r\n            \"< yep\",\r\n            \"< yeh\",\r\n            \"< yeah sure\",\r\n            \"< yeah definitely\",\r\n            \"< yeah \",\r\n            \"< yea\",\r\n            \"< yay\",\r\n            \"< yah\",\r\n            \"< wonderful >\",\r\n            \"< without a doubt \",\r\n            \"< with pleasure\",\r\n            \"< will do >\",\r\n            \"< whatever >\",\r\n            \"< well perhaps you are right\",\r\n            \"< well maybe you are right \",\r\n            \"< we should try >\",\r\n            \"< we did >\",\r\n            \"< we can try >\",\r\n            \"< very well indeed\",\r\n            \"< very well \",\r\n            \"< unquestionably\",\r\n            \"< undoubtedly\",\r\n            \"< uh-huh\",\r\n            \"< two thumbs up\",\r\n            \"< true > \",\r\n            \"< totally\",\r\n            \"< thumbs up\",\r\n            \"< that is right\",\r\n            \"< that is good\",\r\n            \"< that is correct \",\r\n            \"< that is alright\",\r\n            \"< surely\",\r\n            \"< sure thing\",\r\n            \"< sure\",\r\n            \"< supposedly \",\r\n            \"< sounds wonderful\",\r\n            \"< so will you\",\r\n            \"< si\",\r\n            \"< shure\",\r\n            \"< righty-ho \",\r\n            \"< righto\",\r\n            \"< right >\",\r\n            \"< right on\",\r\n            \"< right brah\",\r\n            \"< right , \",\r\n            \"< probably >\",\r\n            \"< precisely\",\r\n            \"< positively\",\r\n            \"< please do >\",\r\n            \"< perfect > \",\r\n            \"< only just >\",\r\n            \"< one hundred percent\",\r\n            \"< okey dokey\",\r\n            \"< ok\",\r\n            \"< O.K. \",\r\n            \"< o.k.\",\r\n            \"< OK\",\r\n            \"< oh sure\",\r\n            \"< oh okay\",\r\n            \"< oh alright \",\r\n            \"< of course\",\r\n            \"< nods\",\r\n            \"< nod\",\r\n            \"< no problem >\",\r\n            \"< no objections > \",\r\n            \"< no doubt\",\r\n            \"< naturally >\",\r\n            \"< my pleasure >\",\r\n            \"< mostly >\",\r\n            \"< most certainly \",\r\n            \"< most assuredly\",\r\n            \"< makes sense\",\r\n            \"< let us try >\",\r\n            \"< it would be a pleasure\",\r\n            \"< it will be my pleasure to \",\r\n            \"< it will be a pleasure to\",\r\n            \"< it is highly likely >\",\r\n            \"< indubitably >\",\r\n            \"< indefinitely\",\r\n            \"< indeed \",\r\n            \"< in this case >\",\r\n            \"< I will drink to that\",\r\n            \"< I totally agree\",\r\n            \"< I think so\",\r\n            \"< I have no objection \",\r\n            \"< i guess >\",\r\n            \"< I give my consent\",\r\n            \"< I give consent\",\r\n            \"< I do >\",\r\n            \"< I did > \",\r\n            \"< I could not agree with you more\",\r\n            \"< I consent\",\r\n            \"< I can try >\",\r\n            \"< I can see that >\",\r\n            \"< I can believe that > \",\r\n            \"< I can believe it >\",\r\n            \"< I am >\",\r\n            \"< I am sure >\",\r\n            \"< I am pleased to >\",\r\n            \"< I am listening > \",\r\n            \"< I am certain >\",\r\n            \"< I agree\",\r\n            \"< I understand >\",\r\n            \"< how true >\",\r\n            \"< highly likely > \",\r\n            \"< hell yeah\",\r\n            \"< go ahead >\",\r\n            \"< generally\",\r\n            \"< fully\",\r\n            \"< fortune smiles on that \",\r\n            \"< for sure\",\r\n            \"< fine >\",\r\n            \"< fantastic >\",\r\n            \"< extremely >\",\r\n            \"< exactly \",\r\n            \"< evidently >\",\r\n            \"< especially\",\r\n            \"< delighted\",\r\n            \"< definitely\",\r\n            \"< damn straight \",\r\n            \"< damn good\",\r\n            \"< da\",\r\n            \"< could not have said it better\",\r\n            \"< could be >\",\r\n            \"< correct > \",\r\n            \"< constantly >\",\r\n            \"< confirmed\",\r\n            \"< completely\",\r\n            \"< certainly >\",\r\n            \"< can not argue with that \",\r\n            \"< by all means\",\r\n            \"< but of course\",\r\n            \"< beyond a doubt >\",\r\n            \"< be my guest\",\r\n            \"< aye \",\r\n            \"< ay\",\r\n            \"< approved\",\r\n            \"< apparently >\",\r\n            \"< always >\",\r\n            \"< alright \",\r\n            \"< all right\",\r\n            \"< ah yes\",\r\n            \"< agreed\",\r\n            \"< affirmative >\",\r\n            \"< accepted > \",\r\n            \"< accept >\",\r\n            \"< absolutely\",\r\n            \"< abso-fucking-lutely\",\r\n            \"< a'right\",\r\n            \"< a'ight \",\r\n            \"< I guess so\",\r\n            \"< do it >\",\r\n            \"< make it so >\",\r\n            \"< continue\",\r\n            \"'kay\"\r\n        ],\r\n        \"~no\": [\r\n            \"< no I am ok\",\r\n            \"< no I am fine\",\r\n            \"< no I am good\",\r\n            \"< not at the moment\",\r\n            \"< not at all >\",\r\n            \"< not sure\",\r\n            \"< not any of them\",\r\n            \"< neither\",\r\n            \"< neither of these\",\r\n            \"< not exactly\",\r\n            \"< none of them\",\r\n            \"< none of these\",\r\n            \"< we do not >\",\r\n            \"< they do not >\",\r\n            \"< they are not >\",\r\n            \"< she is not >\",\r\n            \"< she does not >\",\r\n            \"< it is not >\",\r\n            \"< it does not >\",\r\n            \"< he is not >\",\r\n            \"< he does not >\",\r\n            \"< you must be kidding\",\r\n            \"< you must be joking\",\r\n            \"< you have got to be kidding\",\r\n            \"< you have got that wrong\",\r\n            \"< you can not be serious\",\r\n            \"< you are winding me up\",\r\n            \"< you are not serious\",\r\n            \"< you are kidding\",\r\n            \"< you are joking\",\r\n            \"< you are having me on\",\r\n            \"< you are dead wrong\",\r\n            \"< yeah yeah\",\r\n            \"< unlikely >\",\r\n            \"< unlikely\",\r\n            \"< unfortunately not\",\r\n            \"< unbelievable\",\r\n            \"< uhuh\",\r\n            \"< uh-uh\",\r\n            \"< uh-hu\",\r\n            \"< thinks not\",\r\n            \"< there is no reason to think so\",\r\n            \"< that is unbelievable\",\r\n            \"< that is rubbish\",\r\n            \"< that is impossible\",\r\n            \"< surely not\",\r\n            \"< strange\",\r\n            \"< seldom\",\r\n            \"< rubbish\",\r\n            \"< on the contrary >\",\r\n            \"< oh come on\",\r\n            \"< of course not\",\r\n            \"< nuts to you\",\r\n            \"< not very often >\",\r\n            \"< not to speak of\",\r\n            \"< not to my knowledge >\",\r\n            \"< not that I know of\",\r\n            \"< not so much >\",\r\n            \"< not really\",\r\n            \"< not particularly\",\r\n            \"< not on your life\",\r\n            \"< not much >\",\r\n            \"< not many >\",\r\n            \"< not likely >\",\r\n            \"< not in a million years\",\r\n            \"< not especially\",\r\n            \"< not by any means\",\r\n            \"< not by a long shot\",\r\n            \"< not at all\",\r\n            \"< not a snowball 's chance in hell\",\r\n            \"< not a chance\",\r\n            \"< nope\",\r\n            \"< noo\",\r\n            \"< no way\",\r\n            \"< no thanks\",\r\n            \"< no thank you\",\r\n            \"< no chance >\",\r\n            \"< no can do\",\r\n            \"< no .\",\r\n            \"< no u0021\",\r\n            \"< never >\",\r\n            \"< never mind >\",\r\n            \"< negative\",\r\n            \"< nay\",\r\n            \"< naw\",\r\n            \"< nah\",\r\n            \"< naah\",\r\n            \"< naaah\",\r\n            \"< most certainly not\",\r\n            \"< me thinks not\",\r\n            \"< it is unlikely >\",\r\n            \"< it is not possible\",\r\n            \"< inconceivable >\",\r\n            \"< improbable\",\r\n            \"< impossible\",\r\n            \"< iie\",\r\n            \"< if you say so\",\r\n            \"< I would not >\",\r\n            \"< I will not >\",\r\n            \"< I think not\",\r\n            \"< I refuse >\",\r\n            \"< I just do not get it\",\r\n            \"< I doubt it\",\r\n            \"< I dont think so\",\r\n            \"< I do not >\",\r\n            \"< I do not want to >\",\r\n            \"< I do not think so\",\r\n            \"< I do not believe you >\",\r\n            \"< I do not believe so\",\r\n            \"< I do not believe it >\",\r\n            \"< I do not agree\",\r\n            \"< I disagree\",\r\n            \"< I could not disagree more\",\r\n            \"< I am not sure that I\",\r\n            \"< I am not sure I agree\",\r\n            \"< I am afraid not\",\r\n            \"< I am afraid I do not agree\",\r\n            \"< I am afraid I disagree with you\",\r\n            \"< horse hockey\",\r\n            \"< hell no\",\r\n            \"< hardly\",\r\n            \"< get real\",\r\n            \"< get out >\",\r\n            \"< fortune does not smile on that\",\r\n            \"< fat chance\",\r\n            \"< false >\",\r\n            \"< doubtful\",\r\n            \"< does not seem possible >\",\r\n            \"< does not seem likely >\",\r\n            \"< do not be stupid\",\r\n            \"< do not be silly\",\r\n            \"< do not be ridiculous\",\r\n            \"< do not be absurd\",\r\n            \"< disagree\",\r\n            \"< did not >\",\r\n            \"< come off it\",\r\n            \"< by no means\",\r\n            \"< but of course not\",\r\n            \"< but no\",\r\n            \"< bollocks\",\r\n            \"< neah\",\r\n            \"< no way >\",\r\n            \"< none\",\r\n            \"< no -\",\r\n            \"< no >\",\r\n            \"< no ,\",\r\n            \"< never\",\r\n            \"< not a prayer >\"\r\n        ],\r\n        \"Support\": [\r\n            \"customersupport\",\r\n            \"Customercare\"\r\n        ],\r\n        \"SendEmail\":[\r\n            \"mail to  a@a.com\"\r\n        ]\r\n\r\n    }\r\n}"
						},
						"url": {
							"raw": "{{url}}/api/{{version}}/users/{{SanityUserID1}}/builder/streams/{{SanityBotStreamId}}/synonyms",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"{{version}}",
								"users",
								"{{SanityUserID1}}",
								"builder",
								"streams",
								"{{SanityBotStreamId}}",
								"synonyms"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get entity component ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Adding bot Synonyms\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"// var responseJson = JSON.parse(responseBody);\r",
									"// pm.environment.set(\"emailcomponentid\",responseJson[0]._id );\r",
									"// tests[\"emailentitycomponentid is \" + postman.getEnvironmentVariable(\"emailcomponentid\")] = true;\r",
									"\r",
									"// var responseJson = JSON.parse(responseBody);\r",
									"// var entityname = responseJson[0].name;\r",
									"// var flag = 0;\r",
									"// pm.test(\"Entityname validation\", function () {\r",
									"//     pm.expect(entityname).to.equal(\"email\");\r",
									"//     flag = 1;\r",
									"// });\r",
									"// if (flag === 0) {\r",
									"//     tests[\"Entity name is not email\"] = false;\r",
									"// } else {\r",
									"//     tests[\"Entityname is email\"] = true;\r",
									"// }"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "authority",
								"value": "staging-bots.korebots.com"
							},
							{
								"key": "x-timezone-offset",
								"value": "-330"
							},
							{
								"key": "authorization",
								"value": "bearer {{SanityAcToken1}}"
							},
							{
								"key": "state",
								"value": "configured"
							},
							{
								"key": "content-type",
								"value": "application/json;charset=UTF-8"
							},
							{
								"key": "accept",
								"value": "application/json, text/plain, */*"
							},
							{
								"key": "user-agent",
								"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.105 Safari/537.36"
							},
							{
								"key": "bot-language",
								"value": "en"
							},
							{
								"key": "accountid",
								"value": "{{SanityAccountID1}}"
							},
							{
								"key": "sec-fetch-site",
								"value": "same-origin"
							},
							{
								"key": "sec-fetch-mode",
								"value": "cors"
							},
							{
								"key": "sec-fetch-dest",
								"value": "empty"
							},
							{
								"key": "referer",
								"value": "{{url}}"
							},
							{
								"key": "accept-language",
								"value": "en-US,en;q=0.9"
							},
							{
								"key": "cookie",
								"value": "_ga=GA1.2.56645577.1596813294; _gid=GA1.2.113920096.1596813294"
							}
						],
						"url": {
							"raw": "{{url}}/api/{{version}}/builder/streams/{{SanityBotStreamId}}/components?type=entity&status=configured",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"{{version}}",
								"builder",
								"streams",
								"{{SanityBotStreamId}}",
								"components"
							],
							"query": [
								{
									"key": "type",
									"value": "entity"
								},
								{
									"key": "status",
									"value": "configured"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Entity Synonyms",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Adding Entity Synonyms\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var responseJson = JSON.parse(responseBody)\r",
									"var entityname = responseJson.name;\r",
									"var flag = 0;\r",
									"pm.test(\"entityname validation\", function () {\r",
									"    pm.expect(entityname).to.equal(\"email\");\r",
									"    flag = 1;\r",
									"});\r",
									"if (flag === 0) {\r",
									"    tests[\"entityname is not email\"] = false;\r",
									"} else {\r",
									"    tests[\"entityname is email\"] = true;\r",
									"}\r",
									"\r",
									"var responseJson = JSON.parse(responseBody)\r",
									"var email = responseJson.synonyms[0];\r",
									"var flag = 0;\r",
									"pm.test(\"email synonym\", function () {\r",
									"    pm.expect(email).to.equal(\"email\");\r",
									"    flag = 1;\r",
									"});\r",
									"if (flag === 0) {\r",
									"    tests[\"email Synonym is not available\"] = false;\r",
									"} else {\r",
									"    tests[\"email synonym is added\"] = true;\r",
									"}\r",
									"\r",
									"var responseJson = JSON.parse(responseBody)\r",
									"var onlinemail = responseJson.synonyms[1];\r",
									"var flag = 0;\r",
									"pm.test(\"onlinemail synonym\", function () {\r",
									"    pm.expect(onlinemail).to.equal(\"online mail\");\r",
									"    flag = 1;\r",
									"});\r",
									"if (flag === 0) {\r",
									"    tests[\"onlinemail Synonym is not available\"] = false;\r",
									"} else {\r",
									"    tests[\"online mail synonym is added\"] = true;\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "authority",
								"value": "staging-bots.korebots.com"
							},
							{
								"key": "x-timezone-offset",
								"value": "-330"
							},
							{
								"key": "authorization",
								"value": "bearer {{SanityAcToken1}}"
							},
							{
								"key": "state",
								"value": "configured"
							},
							{
								"key": "content-type",
								"value": "application/json;charset=UTF-8"
							},
							{
								"key": "accept",
								"value": "application/json, text/plain, */*"
							},
							{
								"key": "bot-language",
								"value": "en"
							},
							{
								"key": "user-agent",
								"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.105 Safari/537.36"
							},
							{
								"key": "x-http-method-override",
								"value": "put"
							},
							{
								"key": "accountid",
								"value": "{{SanityAccountID1}}"
							},
							{
								"key": "origin",
								"value": "{{url}}"
							},
							{
								"key": "sec-fetch-site",
								"value": "same-origin"
							},
							{
								"key": "sec-fetch-mode",
								"value": "cors"
							},
							{
								"key": "sec-fetch-dest",
								"value": "empty"
							},
							{
								"key": "referer",
								"value": "{{url}}/botbuilder"
							},
							{
								"key": "accept-language",
								"value": "en-US,en;q=0.9"
							},
							{
								"key": "cookie",
								"value": "_ga=GA1.2.56645577.1596813294; _gid=GA1.2.113920096.1596813294"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"synonyms\":[\"email\",\"online mail\"]}"
						},
						"url": {
							"raw": "{{url}}/api/{{version}}/builder/streams/{{SanityBotStreamId}}/components/{{SendEmailEntityRefID1}}/synonyms",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"{{version}}",
								"builder",
								"streams",
								"{{SanityBotStreamId}}",
								"components",
								"{{SendEmailEntityRefID1}}",
								"synonyms"
							]
						}
					},
					"response": []
				},
				{
					"name": "TrainSynonyms",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "authority",
								"value": "staging-bots.korebots.com"
							},
							{
								"key": "x-timezone-offset",
								"value": "-330"
							},
							{
								"key": "authorization",
								"value": "bearer {{SanityAcToken1}}"
							},
							{
								"key": "state",
								"value": "configured"
							},
							{
								"key": "content-type",
								"value": "application/json;charset=UTF-8"
							},
							{
								"key": "accept",
								"value": "application/json, text/plain, */*"
							},
							{
								"key": "user-agent",
								"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.105 Safari/537.36"
							},
							{
								"key": "bot-language",
								"value": "{{Lang}}"
							},
							{
								"key": "accountid",
								"value": "{{SanityAccountID1}}"
							},
							{
								"key": "origin",
								"value": "https://staging-bots.korebots.com"
							},
							{
								"key": "sec-fetch-site",
								"value": "same-origin"
							},
							{
								"key": "sec-fetch-mode",
								"value": "cors"
							},
							{
								"key": "sec-fetch-dest",
								"value": "empty"
							},
							{
								"key": "referer",
								"value": "https://staging-bots.korebots.com/botbuilder"
							},
							{
								"key": "accept-language",
								"value": "en-US,en;q=0.9"
							},
							{
								"key": "cookie",
								"value": "_ga=GA1.2.966011858.1586498551; hubspotutk=b2196fd815de0434d59246dd45b17dd1; __hs_opt_out=no; __hstc=20155623.b2196fd815de0434d59246dd45b17dd1.1586537440295.1592378830716.1593058234465.32; _gid=GA1.2.1046669145.1597136864; bot.rtm=s%3AL3-W-6ABN04HRVi_tOP9F8eo1yL7BUyC.S5Yi%2Bh%2FDX6DZSFXxRtv9217hy%2BtPh80jk632%2FyGtQ04"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{}"
						},
						"url": {
							"raw": "{{url}}/api/{{version}}/users/{{SanityUserID1}}/builder/sentences/ml/train?streamId={{SanityBotStreamId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"{{version}}",
								"users",
								"{{SanityUserID1}}",
								"builder",
								"sentences",
								"ml",
								"train"
							],
							"query": [
								{
									"key": "streamId",
									"value": "{{SanityBotStreamId}}"
								}
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "1.08 Patterns_Creation",
			"item": [
				{
					"name": "Fetchingdialog id's and names",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"// var data = JSON.parse(responseBody);\r",
									"// var check = false;\r",
									"// _.forEach(data, function (ind, value) {\r",
									"//     if (check=true) {\r",
									"//     dialogId=value+1\r",
									"//         pm.environment.set(\"dialog\"+dialogId,ind._id);\r",
									"//         tests[\"dialog ids are available and they are : \" +ind._id+ \"\"] = true;\r",
									"//     }\r",
									"// });\r",
									"// if (!check) {\r",
									"//     tests[\"dialog ids are not available in the response\"] = false;\r",
									"// }\r",
									"\r",
									"// var data = JSON.parse(responseBody);\r",
									"// var check = false;\r",
									"// _.forEach(data, function (ind, value) {\r",
									"//     if (check=true) {\r",
									"//     dialogId=value+1\r",
									"//         pm.environment.set(\"task\"+dialogId,ind.name);\r",
									"//         tests[\"Intent names are available and they are : \" +ind.name+ \"\"] = true;\r",
									"//     }\r",
									"// });\r",
									"// if (!check) {\r",
									"//     tests[\"Intent names are not available in the response\"] = false;\r",
									"// }"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "authority",
								"value": "staging-bots.korebots.com"
							},
							{
								"key": "x-timezone-offset",
								"value": "-330"
							},
							{
								"key": "authorization",
								"value": "bearer {{SanityAcToken1}}"
							},
							{
								"key": "state",
								"value": "configured"
							},
							{
								"key": "content-type",
								"value": "application/json;charset=UTF-8"
							},
							{
								"key": "accept",
								"value": "application/json, text/plain, */*"
							},
							{
								"key": "user-agent",
								"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.105 Safari/537.36"
							},
							{
								"key": "bot-language",
								"value": "en"
							},
							{
								"key": "accountid",
								"value": "{{SanityAccountID1}}"
							},
							{
								"key": "sec-fetch-site",
								"value": "same-origin"
							},
							{
								"key": "sec-fetch-mode",
								"value": "cors"
							},
							{
								"key": "sec-fetch-dest",
								"value": "empty"
							},
							{
								"key": "referer",
								"value": "{{url}}/botbuilder"
							},
							{
								"key": "accept-language",
								"value": "en-US,en;q=0.9"
							},
							{
								"key": "cookie",
								"value": "_ga=GA1.2.56645577.1596813294; _gid=GA1.2.113920096.1596813294"
							}
						],
						"url": {
							"raw": "{{url}}/api/{{version}}/builder/streams/{{SanityBotStreamId}}/components?type=intent&status=configured",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"{{version}}",
								"builder",
								"streams",
								"{{SanityBotStreamId}}",
								"components"
							],
							"query": [
								{
									"key": "type",
									"value": "intent"
								},
								{
									"key": "status",
									"value": "configured"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Adding intent Patterns",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Adding Intent Patterns\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var responseJson = JSON.parse(responseBody)\r",
									"var intentname = responseJson.name;\r",
									"var flag = 0;\r",
									"pm.test(\"intent name validation\", function () {\r",
									"    pm.expect(intentname).to.equal(\"SendEmail\");\r",
									"    flag = 1;\r",
									"});\r",
									"if (flag === 0) {\r",
									"    tests[\"Intentname is not email\"] = false;\r",
									"} else {\r",
									"    tests[\"Intentname is SendEmail\"] = true;\r",
									"}\r",
									"\r",
									"var responseJson = JSON.parse(responseBody)\r",
									"var patterns = responseJson.patterns[0].value;\r",
									"var flag = 0;\r",
									"pm.test(\"Patterns added\", function () {\r",
									"    pm.expect(patterns).to.equal(\"send_email\");\r",
									"    flag = 1;\r",
									"});\r",
									"if (flag === 0) {\r",
									"    tests[\"pattern is not send_email\"] = false;\r",
									"} else {\r",
									"    tests[\"Patterns send_email is added\"] = true;\r",
									"}\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "authority",
								"value": "staging-bots.korebots.com"
							},
							{
								"key": "x-timezone-offset",
								"value": "-330"
							},
							{
								"key": "authorization",
								"value": "bearer {{SanityAcToken1}}"
							},
							{
								"key": "state",
								"value": "configured"
							},
							{
								"key": "content-type",
								"value": "application/json;charset=UTF-8"
							},
							{
								"key": "accept",
								"value": "application/json, text/plain, */*"
							},
							{
								"key": "bot-language",
								"value": "en"
							},
							{
								"key": "user-agent",
								"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.105 Safari/537.36"
							},
							{
								"key": "x-http-method-override",
								"value": "put"
							},
							{
								"key": "accountid",
								"value": "{{SanityAccountID1}}"
							},
							{
								"key": "origin",
								"value": "{{url}}"
							},
							{
								"key": "sec-fetch-site",
								"value": "same-origin"
							},
							{
								"key": "sec-fetch-mode",
								"value": "cors"
							},
							{
								"key": "sec-fetch-dest",
								"value": "empty"
							},
							{
								"key": "referer",
								"value": "{{url}}/botbuilder"
							},
							{
								"key": "accept-language",
								"value": "en-US,en;q=0.9"
							},
							{
								"key": "cookie",
								"value": "_ga=GA1.2.56645577.1596813294; _gid=GA1.2.113920096.1596813294"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"patterns\":[\"send_email\"]}"
						},
						"url": {
							"raw": "{{url}}/api/{{version}}/builder/streams/{{SanityBotStreamId}}/components/{{SendEmailRefId1}}/patterns",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"{{version}}",
								"builder",
								"streams",
								"{{SanityBotStreamId}}",
								"components",
								"{{SendEmailRefId1}}",
								"patterns"
							]
						}
					},
					"response": []
				},
				{
					"name": "Entity Patterns",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Adding Entity Patterns\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var responseJson = JSON.parse(responseBody)\r",
									"var entityname = responseJson.name;\r",
									"var flag = 0;\r",
									"pm.test(\"entity name validation\", function () {\r",
									"    pm.expect(entityname).to.equal(\"email\");\r",
									"    flag = 1;\r",
									"});\r",
									"if (flag === 0) {\r",
									"    tests[\"entityname is not email\"] = false;\r",
									"} else {\r",
									"    tests[\"entityname is email\"] = true;\r",
									"}\r",
									"\r",
									"var responseJson = JSON.parse(responseBody)\r",
									"var patterns = responseJson.patterns[0].value;\r",
									"var flag = 0;\r",
									"pm.test(\"Patterns added\", function () {\r",
									"    pm.expect(patterns).to.equal(\"*createemail\");\r",
									"    flag = 1;\r",
									"});\r",
									"if (flag === 0) {\r",
									"    tests[\"pattern is not added\"] = false;\r",
									"} else {\r",
									"    tests[\"Pattern *createemail  is added\"] = true;\r",
									"}\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "authority",
								"value": "staging-bots.korebots.com"
							},
							{
								"key": "x-timezone-offset",
								"value": "-330"
							},
							{
								"key": "authorization",
								"value": "bearer {{SanityAcToken1}}"
							},
							{
								"key": "state",
								"value": "configured"
							},
							{
								"key": "content-type",
								"value": "application/json;charset=UTF-8"
							},
							{
								"key": "accept",
								"value": "application/json, text/plain, */*"
							},
							{
								"key": "bot-language",
								"value": "en"
							},
							{
								"key": "user-agent",
								"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.105 Safari/537.36"
							},
							{
								"key": "x-http-method-override",
								"value": "put"
							},
							{
								"key": "accountid",
								"value": "{{SanityAccountID1}}"
							},
							{
								"key": "origin",
								"value": "{{url}}"
							},
							{
								"key": "sec-fetch-site",
								"value": "same-origin"
							},
							{
								"key": "sec-fetch-mode",
								"value": "cors"
							},
							{
								"key": "sec-fetch-dest",
								"value": "empty"
							},
							{
								"key": "referer",
								"value": "{{url}}/botbuilder"
							},
							{
								"key": "accept-language",
								"value": "en-US,en;q=0.9"
							},
							{
								"key": "cookie",
								"value": "_ga=GA1.2.56645577.1596813294; _gid=GA1.2.113920096.1596813294"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"patterns\":[\"*createemail\"]}"
						},
						"url": {
							"raw": "{{url}}/api/{{version}}/builder/streams/{{SanityBotStreamId}}/components/{{SendEmailEntityRefID1}}/patterns",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"{{version}}",
								"builder",
								"streams",
								"{{SanityBotStreamId}}",
								"components",
								"{{SendEmailEntityRefID1}}",
								"patterns"
							],
							"query": [
								{
									"key": "rnd",
									"value": "7p3ncd",
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "1.09 FAQ_Task_Creation",
			"item": [
				{
					"name": "CreateKG",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"var data = JSON.parse(responseBody);\r",
									"pm.environment.set(\"KGParentID\",data.taxonomy[0].nodeId );\r",
									"pm.environment.set(\"KGTaskID\", data._id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Connection",
								"value": "keep-alive"
							},
							{
								"key": "X-Timezone-Offset",
								"value": "-330"
							},
							{
								"key": "Authorization",
								"value": "bearer {{SanityAcToken1}}"
							},
							{
								"key": "state",
								"value": "configured"
							},
							{
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8"
							},
							{
								"key": "Accept",
								"value": "application/json, text/plain, */*"
							},
							{
								"key": "User-Agent",
								"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36"
							},
							{
								"key": "bot-language",
								"value": "{{Lang}}"
							},
							{
								"key": "AccountId",
								"value": "{{SanityAccountID1}}"
							},
							{
								"key": "Origin",
								"value": "https://qa1-bots.kore.ai"
							},
							{
								"key": "Sec-Fetch-Site",
								"value": "same-origin"
							},
							{
								"key": "Sec-Fetch-Mode",
								"value": "cors"
							},
							{
								"key": "Sec-Fetch-Dest",
								"value": "empty"
							},
							{
								"key": "Referer",
								"value": "https://qa1-bots.kore.ai/botbuilder"
							},
							{
								"key": "Accept-Language",
								"value": "en-US,en;q=0.9"
							},
							{
								"key": "Cookie",
								"value": "_ga=GA1.2.911535481.1586497890; __hs_opt_out=no; hubspotutk=c8a344e15c1a384e2645eafb285bf05a; _vwo_uuid_v2=DA136D087CC5B2A2663395C6EECED51A9|065feef042135d1a68a721dae7548c94; _vis_opt_s=3%7C; __hstc=59894770.c8a344e15c1a384e2645eafb285bf05a.1586497890226.1594907288378.1594998476867.163; _gid=GA1.2.1831138518.1595214499"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{SanityBotName}}\",\r\n    \"description\": \"This is used to make ontology\",\r\n    \"taxonomy\": [\r\n        {\r\n            \"nodeId\": \"7fe7274b-6567-4c39-9360-1ce9cd5dd752\",\r\n            \"label\": \"{{SanityBotName}}\",\r\n            \"level\": \"l0\",\r\n            \"parent\": [],\r\n            \"synonyms\": []\r\n        }\r\n    ],\r\n    \"isGraph\": true,\r\n    \"visibility\": {\r\n        \"namespace\": \"private\",\r\n        \"namespaceIds\": [\r\n            \"{{SanityUserID1}}\"\r\n        ]\r\n    },\r\n    \"streamId\": \"{{SanityBotStreamId}}\",\r\n    \"metadata\": {\r\n        \"taxonomy\": [\r\n            {\r\n                \"nodeId\": \"7fe7274b-6567-4c39-9360-1ce9cd5dd752\",\r\n                \"label\": \"{{SanityBotName}}\",\r\n                \"class\": \"bgblack\",\r\n                \"level\": \"l0\",\r\n                \"parent\": [],\r\n                \"synonyms\": [],\r\n                \"nodes\": []\r\n            }\r\n        ]\r\n    }\r\n}"
						},
						"url": {
							"raw": "{{url}}/api/{{version}}/users/{{SanityUserID1}}/builder/knowledgetasks",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"{{version}}",
								"users",
								"{{SanityUserID1}}",
								"builder",
								"knowledgetasks"
							]
						}
					},
					"response": []
				},
				{
					"name": "AddFAQ ",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var data = JSON.parse(responseBody);\r",
									"pm.test(\"Added FAQ is available in the Bot and the FAQ is: \" + data.questionPayload.question+ \".\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"How can i check the logs?\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Connection",
								"value": "keep-alive"
							},
							{
								"key": "X-Timezone-Offset",
								"value": "-330"
							},
							{
								"key": "Authorization",
								"value": "bearer {{SanityAcToken1}}"
							},
							{
								"key": "state",
								"value": "configured"
							},
							{
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8"
							},
							{
								"key": "Accept",
								"value": "application/json, text/plain, */*"
							},
							{
								"key": "User-Agent",
								"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36"
							},
							{
								"key": "bot-language",
								"value": "{{Lang}}"
							},
							{
								"key": "AccountId",
								"value": "{{SanityAccountID1}}"
							},
							{
								"key": "Origin",
								"value": "https://qa1-bots.kore.ai"
							},
							{
								"key": "Sec-Fetch-Site",
								"value": "same-origin"
							},
							{
								"key": "Sec-Fetch-Mode",
								"value": "cors"
							},
							{
								"key": "Sec-Fetch-Dest",
								"value": "empty"
							},
							{
								"key": "Referer",
								"value": "https://qa1-bots.kore.ai/botbuilder"
							},
							{
								"key": "Accept-Language",
								"value": "en-US,en;q=0.9"
							},
							{
								"key": "Cookie",
								"value": "_ga=GA1.2.911535481.1586497890; __hs_opt_out=no; hubspotutk=c8a344e15c1a384e2645eafb285bf05a; _vwo_uuid_v2=DA136D087CC5B2A2663395C6EECED51A9|065feef042135d1a68a721dae7548c94; _vis_opt_s=3%7C; __hstc=59894770.c8a344e15c1a384e2645eafb285bf05a.1586497890226.1594907288378.1594998476867.163; _gid=GA1.2.1831138518.1595214499"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"questionPayload\": {\r\n        \"question\": \"How can i check the logs?\",\r\n        \"tagsPayload\": []\r\n    },\r\n    \"knowledgeTaskId\": \"{{KGTaskID}}\",\r\n    \"subQuestions\": [],\r\n    \"responseType\": \"message\",\r\n    \"streamId\": \"{{SanityBotStreamId}}\",\r\n    \"parent\": \"{{KGParentID}}\",\r\n    \"leafterm\": \"{{SanityBotName}}\",\r\n    \"answerPayload\": [\r\n        {\r\n            \"text\": \"You%20need%20to%20have%20admin%20access%20to%20verify%20the%20logs\",\r\n            \"type\": \"basic\",\r\n            \"channel\": \"default\"\r\n        }\r\n    ],\r\n    \"subAnswers\": []\r\n}"
						},
						"url": {
							"raw": "{{url}}/api/{{version}}/users/{{SanityUserID1}}/builder/faqs",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"{{version}}",
								"users",
								"{{SanityUserID1}}",
								"builder",
								"faqs"
							]
						}
					},
					"response": []
				},
				{
					"name": "Train_KG",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									" var data = JSON.parse(responseBody)\r",
									"tests[\"Initiated the Training and status is in : \" +data.status+ \"\"]=true;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "authority",
								"value": "staging-bots.korebots.com"
							},
							{
								"key": "x-timezone-offset",
								"value": "-330"
							},
							{
								"key": "authorization",
								"value": "bearer {{SanityAcToken1}}"
							},
							{
								"key": "state",
								"value": "configured"
							},
							{
								"key": "content-type",
								"value": "application/json;charset=UTF-8"
							},
							{
								"key": "accept",
								"value": "application/json, text/plain, */*"
							},
							{
								"key": "user-agent",
								"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.105 Safari/537.36"
							},
							{
								"key": "bot-language",
								"value": "{{Lang}}"
							},
							{
								"key": "accountid",
								"value": "{{SanityAccountID1}}"
							},
							{
								"key": "origin",
								"value": "https://staging-bots.korebots.com"
							},
							{
								"key": "sec-fetch-site",
								"value": "same-origin"
							},
							{
								"key": "sec-fetch-mode",
								"value": "cors"
							},
							{
								"key": "sec-fetch-dest",
								"value": "empty"
							},
							{
								"key": "referer",
								"value": "https://staging-bots.korebots.com/botbuilder"
							},
							{
								"key": "accept-language",
								"value": "en-US,en;q=0.9"
							},
							{
								"key": "cookie",
								"value": "_ga=GA1.2.1918917934.1596810297; _gid=GA1.2.434737481.1596810297"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{}"
						},
						"url": {
							"raw": "{{url}}/api/{{version}}/users/{{SanityUserID1}}/builder/knowledgeTasks/faq/train?streamId={{SanityBotStreamId}}&ktId={{KGTaskID}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"{{version}}",
								"users",
								"{{SanityUserID1}}",
								"builder",
								"knowledgeTasks",
								"faq",
								"train"
							],
							"query": [
								{
									"key": "streamId",
									"value": "{{SanityBotStreamId}}"
								},
								{
									"key": "ktId",
									"value": "{{KGTaskID}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "DockStatus_Training",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Training is Successful\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"SUCCESS\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "authority",
								"value": "staging-bots.korebots.com"
							},
							{
								"key": "x-timezone-offset",
								"value": "-330"
							},
							{
								"key": "authorization",
								"value": "bearer {{SanityAcToken1}}"
							},
							{
								"key": "state",
								"value": "configured"
							},
							{
								"key": "content-type",
								"value": "application/json;charset=UTF-8"
							},
							{
								"key": "accept",
								"value": "application/json, text/plain, */*"
							},
							{
								"key": "user-agent",
								"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.105 Safari/537.36"
							},
							{
								"key": "bot-language",
								"value": "{{Lang}}"
							},
							{
								"key": "accountid",
								"value": "{{SanityAccountID1}}"
							},
							{
								"key": "sec-fetch-site",
								"value": "same-origin"
							},
							{
								"key": "sec-fetch-mode",
								"value": "cors"
							},
							{
								"key": "sec-fetch-dest",
								"value": "empty"
							},
							{
								"key": "referer",
								"value": "https://staging-bots.korebots.com/botbuilder"
							},
							{
								"key": "accept-language",
								"value": "en-US,en;q=0.9"
							},
							{
								"key": "cookie",
								"value": "_ga=GA1.2.1918917934.1596810297; _gid=GA1.2.434737481.1596810297"
							}
						],
						"url": {
							"raw": "{{url}}/api/{{version}}/builder/streams/{{SanityBotStreamId}}/dockStatus",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"{{version}}",
								"builder",
								"streams",
								"{{SanityBotStreamId}}",
								"dockStatus"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "1.10 ML Utterances",
			"item": [
				{
					"name": "Ml utterance addition--Dialog2--Variable check",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"ML utterance added\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var responseJson = JSON.parse(responseBody)\r",
									"var utterance = responseJson.sentence;\r",
									"var flag = 0;\r",
									"pm.test(\"Utterance validation\", function () {\r",
									"    pm.expect(utterance).to.equal(\"Locate my place\");\r",
									"    flag = 1;\r",
									"});\r",
									"if (flag === 0) {\r",
									"    tests[\"ML utterance is not available\"] = false;\r",
									"} else {\r",
									"    tests[\"ML utterance--Locate my place-- is added\"] = true;\r",
									"}\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "authority",
								"value": "staging-bots.korebots.com"
							},
							{
								"key": "x-timezone-offset",
								"value": "-330"
							},
							{
								"key": "authorization",
								"value": "bearer {{SanityAcToken1}}"
							},
							{
								"key": "state",
								"value": "configured"
							},
							{
								"key": "content-type",
								"value": "application/json;charset=UTF-8"
							},
							{
								"key": "accept",
								"value": "application/json, text/plain, */*"
							},
							{
								"key": "user-agent",
								"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.105 Safari/537.36"
							},
							{
								"key": "bot-language",
								"value": "en"
							},
							{
								"key": "accountid",
								"value": "{{SanityAccountID1}}"
							},
							{
								"key": "origin",
								"value": "{{url}}"
							},
							{
								"key": "sec-fetch-site",
								"value": "same-origin"
							},
							{
								"key": "sec-fetch-mode",
								"value": "cors"
							},
							{
								"key": "sec-fetch-dest",
								"value": "empty"
							},
							{
								"key": "referer",
								"value": "{{url}}/botbuilder"
							},
							{
								"key": "accept-language",
								"value": "en-US,en;q=0.9"
							},
							{
								"key": "cookie",
								"value": "_ga=GA1.2.56645577.1596813294; _gid=GA1.2.113920096.1596813294"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"taskId\": \"{{SanityRefId1}}\",\r\n    \"sentence\": \"Locate my place\",\r\n    \"streamId\": \"{{SanityBotStreamId}}\",\r\n    \"taskName\": \"{{SanityIntentName1}}\",\r\n    \"type\": \"DialogIntent\",\r\n    \"predictiveNer\": true\r\n}"
						},
						"url": {
							"raw": "{{url}}/api/{{version}}/users/{{SanityUserID1}}/builder/sentences",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"{{version}}",
								"users",
								"{{SanityUserID1}}",
								"builder",
								"sentences"
							]
						}
					},
					"response": []
				},
				{
					"name": "ML train call",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"ML training is triggered\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "authority",
								"value": "staging-bots.korebots.com"
							},
							{
								"key": "x-timezone-offset",
								"value": "-330"
							},
							{
								"key": "authorization",
								"value": "bearer {{SanityAcToken1}}"
							},
							{
								"key": "state",
								"value": "configured"
							},
							{
								"key": "content-type",
								"value": "application/json;charset=UTF-8"
							},
							{
								"key": "accept",
								"value": "application/json, text/plain, */*"
							},
							{
								"key": "user-agent",
								"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.105 Safari/537.36"
							},
							{
								"key": "bot-language",
								"value": "en"
							},
							{
								"key": "accountid",
								"value": "{{SanityAccountID1}}"
							},
							{
								"key": "origin",
								"value": "{{url}}"
							},
							{
								"key": "sec-fetch-site",
								"value": "same-origin"
							},
							{
								"key": "sec-fetch-mode",
								"value": "cors"
							},
							{
								"key": "sec-fetch-dest",
								"value": "empty"
							},
							{
								"key": "referer",
								"value": "{{url}}/botbuilder"
							},
							{
								"key": "accept-language",
								"value": "en-US,en;q=0.9"
							},
							{
								"key": "cookie",
								"value": "_ga=GA1.2.56645577.1596813294; _gid=GA1.2.113920096.1596813294"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{}"
						},
						"url": {
							"raw": "{{url}}/api/{{version}}/users/{{SanityUserID1}}/builder/sentences/ml/train?streamId={{SanityBotStreamId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"{{version}}",
								"users",
								"{{SanityUserID1}}",
								"builder",
								"sentences",
								"ml",
								"train"
							],
							"query": [
								{
									"key": "streamId",
									"value": "{{SanityBotStreamId}}"
								},
								{
									"key": "rnd",
									"value": "chpdj9",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "ML train status",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"    function delay(ms) {\r",
									"        var cur_d = new Date();\r",
									"        var cur_ticks = cur_d.getTime();\r",
									"        var ms_passed = 0;\r",
									"        while(ms_passed < ms) {\r",
									"            var d = new Date();  // Possible memory leak?\r",
									"            var ticks = d.getTime();\r",
									"            ms_passed = ticks - cur_ticks;\r",
									"        }\r",
									"    }\r",
									"    delay(10000);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Train status\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var responseJson = JSON.parse(responseBody)\r",
									"var trainingStatus = responseJson.trainingStatus;\r",
									"var flag = 0;\r",
									"pm.test(\"Bot training status validation\", function () {\r",
									"    pm.expect(trainingStatus).to.equal(\"Finished\");\r",
									"    flag = 1;\r",
									"});\r",
									"if (flag === 0) {\r",
									"    tests[\"Traning status is in progress\"] = false;\r",
									"} else {\r",
									"    tests[\"Bot Trainig is finished successfully\"] = true;\r",
									"}\r",
									"\r",
									"var responseJson = JSON.parse(responseBody)\r",
									"var mltraining = responseJson.isMlInSyncWithSentences;\r",
									"var flag = 0;\r",
									"pm.test(\"ML training status validation\", function () {\r",
									"    pm.expect(mltraining).to.equal(true);\r",
									"    flag = 1;\r",
									"});\r",
									"if (flag === 0) {\r",
									"    tests[\"Traning status is in progress\"] = false;\r",
									"} else {\r",
									"    tests[\"ML Trainig is finished successfully\"] = true;\r",
									"}\r",
									"\r",
									"var responseJson = JSON.parse(responseBody)\r",
									"var synonymstraining = responseJson.isMlInSyncWithSynonyms;\r",
									"var flag = 0;\r",
									"pm.test(\"Synonyms training status validation\", function () {\r",
									"    pm.expect(synonymstraining).to.equal(true);\r",
									"    flag = 1;\r",
									"});\r",
									"if (flag === 0) {\r",
									"    tests[\"Traning status is in progress\"] = false;\r",
									"} else {\r",
									"    tests[\"Synonmys Trainig is finished successfully\"] = true;\r",
									"}\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "authority",
								"value": "staging-bots.korebots.com"
							},
							{
								"key": "x-timezone-offset",
								"value": "-330"
							},
							{
								"key": "authorization",
								"value": "bearer {{SanityAcToken1}}"
							},
							{
								"key": "state",
								"value": "configured"
							},
							{
								"key": "content-type",
								"value": "application/json;charset=UTF-8"
							},
							{
								"key": "accept",
								"value": "application/json, text/plain, */*"
							},
							{
								"key": "user-agent",
								"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.105 Safari/537.36"
							},
							{
								"key": "bot-language",
								"value": "en"
							},
							{
								"key": "accountid",
								"value": "{{SanityAccountID1}}"
							},
							{
								"key": "sec-fetch-site",
								"value": "same-origin"
							},
							{
								"key": "sec-fetch-mode",
								"value": "cors"
							},
							{
								"key": "sec-fetch-dest",
								"value": "empty"
							},
							{
								"key": "referer",
								"value": "{{url}}/botbuilder"
							},
							{
								"key": "accept-language",
								"value": "en-US,en;q=0.9"
							},
							{
								"key": "cookie",
								"value": "_ga=GA1.2.56645577.1596813294; _gid=GA1.2.113920096.1596813294"
							}
						],
						"url": {
							"raw": "{{url}}/api/{{version}}/users/{{SanityUserID1}}/bt/streams/{{SanityBotStreamId}}/autoTrainStatus?sentences=true&speech=false",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"{{version}}",
								"users",
								"{{SanityUserID1}}",
								"bt",
								"streams",
								"{{SanityBotStreamId}}",
								"autoTrainStatus"
							],
							"query": [
								{
									"key": "sentences",
									"value": "true"
								},
								{
									"key": "speech",
									"value": "false"
								},
								{
									"key": "rnd",
									"value": "3l7juc",
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "1.11 Add Developer and Assign BT AppScope",
			"item": [
				{
					"name": "Authorization BT User -Share Developer",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);",
									"",
									"postman.setEnvironmentVariable(\"SanityAcToken2\",data.authorization.accessToken);",
									"tests[\"accessToken is \" + postman.getEnvironmentVariable(\"SanityAcToken2\")] = true;",
									"postman.setEnvironmentVariable(\"SanityUserID2\",data.userInfo.id);",
									"tests[\"Shared developer User ID is \" + postman.getEnvironmentVariable(\"SanityUserID2\")] = true;",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "bot-language",
								"value": "{{Lang}}"
							},
							{
								"key": "Connection",
								"value": "keep-alive"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"password\": \"{{password2}}\",\r\n    \"client_id\": \"1\",\r\n    \"client_secret\": \"1\",\r\n    \"scope\": \"friends\",\r\n    \"grant_type\": \"password\",\r\n    \"username\": \"{{username2}}\"\r\n}"
						},
						"url": {
							"raw": "{{url}}/api/1.1/oAuth/token",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"1.1",
								"oAuth",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "App Control list",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"  pm.response.to.have.status(200);",
									"});",
									"",
									"var data = JSON.parse(responseBody);",
									"var flag = 0;",
									"_.forEach(data.associatedAccounts, function (ind, val) {",
									"  pm.environment.unset(\"SanityAccountID1\");",
									"  // if(ind.accountName === postman.getEnvironmentVariable(\"domain\")){",
									"  if (ind.accountName === pm.environment.get(\"domain\")); {",
									"    // postman.setGlobalVariable(\"accountID1\",ind.accountId);",
									"    // pm.globals.get(\"variable_key\");",
									"    pm.environment.set(\"SanityAccountID1\", ind.accountId);",
									"    flag = 1;",
									"  }",
									"});",
									"",
									"if (flag === 0) {",
									"  tests[\"Account ID\" + pm.environment.get(\"SanityAccountID1\") + \" is not returned\"] = false;",
									"} else {",
									"  tests[\"Account ID \" + pm.environment.get(\"SanityAccountID1\") + \" is returned\"] = true;",
									"}",
									"",
									"",
									"var data = JSON.parse(responseBody);",
									"var flag = 0;",
									"_.forEach(data.associatedAccounts, function (ind, val) {",
									"",
									"  // if(ind.accountName === postman.getEnvironmentVariable(\"domain\")){",
									"  if (ind.accountName === pm.environment.get(\"domain\")); {",
									"    pm.environment.set(\"SanityOrgId2\", ind.orgId);",
									"    flag = 1;",
									"  }",
									"});",
									"",
									"if (flag === 0) {",
									"  tests[\"orgId2 ID\" + pm.environment.get(\"SanityOrgId2\") + \" is not returned\"] = false;",
									"} else {",
									"  tests[\"orgId2 ID \" + pm.environment.get(\"SanityOrgId2\") + \" is returned\"] = true;",
									"}",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "bearer {{SanityAcToken2}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "bot-language",
								"value": "en"
							},
							{
								"key": "Connection",
								"value": "keep-alive"
							},
							{
								"key": "user-agent",
								"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/63.0.3239.132 Safari/537.36"
							}
						],
						"url": {
							"raw": "{{url}}/api/1.1/users/{{SanityUserID2}}/AppControlList",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"1.1",
								"users",
								"{{SanityUserID2}}",
								"AppControlList"
							]
						},
						"description": "Generated from a curl request: \ncurl 'https://qa1-bots.kore.ai/api/1.1/users/u-6c28bcb4-dbe9-5e9f-a295-5db78d880841/AppControlList?rnd=mijus' -H 'Authorization: bearer RYPoGxdmYCTW-Vp9neSt5dEpubTFrTZPJi7YcBknHWEyOEW8OhPp23a_HP_wTaGM' -H 'Accept-Encoding: gzip, deflate, br' -H 'Accept-Language: en-US,en;q=0.9' -H 'User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/63.0.3239.132 Safari/537.36' -H 'Content-Type: application/json;charset=UTF-8' -H 'Accept: application/json, text/plain, */*' -H 'Referer: https://qa1-bots.kore.ai/botbuilder/login' -H 'Cookie: _ga=GA1.2.284550059.1516702523; _gid=GA1.2.1184022775.1517031553; _gat=1' -H 'Connection: keep-alive' -H 'bot-language: en' --compressed"
					},
					"response": []
				},
				{
					"name": "Admin Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Email id validation\",function(){",
									"var responseJson=JSON.parse(responseBody);",
									"var emailId=responseJson.userInfo.emailId;",
									"pm.expect(emailId).to.equal(pm.environment.get(\"username1\"));",
									"});",
									"",
									"var data = JSON.parse(responseBody);",
									"pm.environment.set(\"botadminaccesstokenuser1\", data.authorization.accessToken);",
									"pm.environment.set(\"botadminUserID1\", data.authorization.resourceOwnerID);",
									"pm.environment.set(\"botadminorgID1\", data.userInfo.orgID);",
									"pm.environment.set(\"adminaccountID1\",data.authorization.accountId);",
									"",
									"pm.test(\"validate Account ID\", function () {",
									"var responseJson=JSON.parse(responseBody);",
									"var accountId=responseJson.authorization.accountId;",
									"pm.expect(accountId).to.equal(pm.environment.get(\"adminaccountID1\"));",
									"});",
									"",
									"pm.test(\"validate organisation ID\", function () {",
									"var responseJson=JSON.parse(responseBody);",
									"var orgId=responseJson.userInfo.orgID;",
									"pm.expect(orgId).to.equal(pm.environment.get(\"botadminorgID1\"));",
									"});",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\"client_id\": \"1\",\n\"client_secret\": \"1\",\n\"grant_type\": \"password\",\n\"isadmin\": true,\n\"password\": \"{{password1}}\",\n\"scope\": \"friends\",\n\"username\": \"{{username1}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/{{version}}/oAuth/token",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"{{version}}",
								"oAuth",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get roles",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get Roles is Success\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									"var data = JSON.parse(responseBody);\r",
									"tests[\"checking for app name\"] = true;\r",
									"_.forEach(data, function (ind, val) {\r",
									"    // console.log(data.ind.records.winningIntent);\r",
									"    tests[\"check for created app\"] = true;\r",
									"    // tests[ind.records[0].winningIntent[0]] = true;\r",
									"    if (ind.role === \"Bot Developer\") {\r",
									"       pm.environment.set(\"BotDeveloperroleid\",data._id);  \r",
									"    }\r",
									"});\r",
									"\r",
									"\r",
									"var data = JSON.parse(responseBody);\r",
									"tests[\"checking for app name\"] = true;\r",
									"_.forEach(data, function (ind, val) {\r",
									"    // console.log(data.ind.records.winningIntent);\r",
									"    tests[\"check for created app\"] = true;\r",
									"    // tests[ind.records[0].winningIntent[0]] = true;\r",
									"    if (ind.role === \"Bot Tester\") {\r",
									"    pm.environment.set(\"Bottesterroleid\",data._id); \r",
									"    }\r",
									"});\r",
									"\r",
									"\r",
									"var data = JSON.parse(responseBody);\r",
									"tests[\"checking for app name\"] = true;\r",
									"_.forEach(data, function (ind, val) {\r",
									"    // console.log(data.ind.records.winningIntent);\r",
									"    tests[\"check for created app\"] = true;\r",
									"    // tests[ind.records[0].winningIntent[0]] = true;\r",
									"    if (ind.role === \"Bot Owner\") {\r",
									"    pm.environment.set(\"BotOwnerroleid\",data._id);\r",
									"    }\r",
									"});\r",
									"\r",
									"tests[\"Bot owner role id is   \" + postman.getEnvironmentVariable(\"BotOwnerroleid\")] = true;\r",
									"tests[\"Bot Developer role id is   \" + postman.getEnvironmentVariable(\"BotDeveloperroleid\")] = true;\r",
									"tests[\"Bot Tester role id is   \" + postman.getEnvironmentVariable(\"Bottesterroleid\")] = true;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "authority",
								"value": "staging-bots.korebots.com"
							},
							{
								"key": "authorization",
								"value": "bearer {{botadminaccesstokenuser1}}"
							},
							{
								"key": "x-timezone-offset",
								"value": "-330"
							},
							{
								"key": "requester-type",
								"value": "admin"
							},
							{
								"key": "content-type",
								"value": "application/json;charset=UTF-8"
							},
							{
								"key": "user-agent",
								"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.105 Safari/537.36"
							},
							{
								"key": "accountid",
								"value": "{{adminaccountID1}}"
							},
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "sec-fetch-site",
								"value": "same-origin"
							},
							{
								"key": "sec-fetch-mode",
								"value": "cors"
							},
							{
								"key": "sec-fetch-dest",
								"value": "empty"
							},
							{
								"key": "referer",
								"value": "{{url}}/botadmin/"
							},
							{
								"key": "accept-language",
								"value": "en-US,en;q=0.9"
							},
							{
								"key": "cookie",
								"value": "_ga=GA1.2.1995053781.1596890918; _gid=GA1.2.1877716030.1596890918"
							}
						],
						"url": {
							"raw": "{{url}}/api/{{version}}/organization/{{botadminorgID1}}/roles",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"{{version}}",
								"organization",
								"{{botadminorgID1}}",
								"roles"
							]
						}
					},
					"response": []
				},
				{
					"name": "Share bot--Developer",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Bot is shared successfully to botdeveloper@koreai.in\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "authority",
								"value": "staging-bots.korebots.com"
							},
							{
								"key": "x-timezone-offset",
								"value": "-330"
							},
							{
								"key": "authorization",
								"value": "bearer {{SanityAcToken1}}"
							},
							{
								"key": "state",
								"value": "configured"
							},
							{
								"key": "content-type",
								"value": "application/json;charset=UTF-8"
							},
							{
								"key": "accept",
								"value": "application/json, text/plain, */*"
							},
							{
								"key": "bot-language",
								"value": "en"
							},
							{
								"key": "user-agent",
								"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.105 Safari/537.36"
							},
							{
								"key": "x-http-method-override",
								"value": "put"
							},
							{
								"key": "accountid",
								"value": "{{SanityAccountID1}}"
							},
							{
								"key": "origin",
								"value": "{{url}}"
							},
							{
								"key": "sec-fetch-site",
								"value": "same-origin"
							},
							{
								"key": "sec-fetch-mode",
								"value": "cors"
							},
							{
								"key": "sec-fetch-dest",
								"value": "empty"
							},
							{
								"key": "referer",
								"value": "{{url}}/botbuilder"
							},
							{
								"key": "accept-language",
								"value": "en-US,en;q=0.9"
							},
							{
								"key": "cookie",
								"value": "_ga=GA1.2.1995053781.1596890918; _gid=GA1.2.1877716030.1596890918"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codevelopers\": {\r\n        \"users\": [\r\n            {\r\n                \"userId\": \"{{SanityUserID1}}\",\r\n                \"roleId\": \"{{BotOwnerroleid}}\"\r\n            },\r\n            {\r\n                \"userId\": \"{{SanityUserID2}}\",\r\n                \"roleId\": \"{{BotDeveloperroleid}}\"\r\n            }\r\n        ],\r\n        \"groups\": []\r\n    }\r\n}"
						},
						"url": {
							"raw": "{{url}}/api/{{version}}/users/{{SanityUserID1}}/builder/streams/{{SanityBotStreamId}}/sharebot",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"{{version}}",
								"users",
								"{{SanityUserID1}}",
								"builder",
								"streams",
								"{{SanityBotStreamId}}",
								"sharebot"
							]
						}
					},
					"response": []
				},
				{
					"name": "Validate Developer added",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get co developers\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var responseJson = JSON.parse(responseBody)\r",
									"var role = responseJson.users[1].roleInfo[0].role;\r",
									"var flag = 0;\r",
									"pm.test(\"Assigned role check\", function () {\r",
									"    pm.expect(role).to.equal(\"Bot Developer\");\r",
									"    flag = 1;\r",
									"});\r",
									"if (flag === 0) {\r",
									"    tests[\"Role is not Bot Developer\"] = false;\r",
									"} else {\r",
									"    tests[\"Role is BotDeveloper\"] = true;\r",
									"}\r",
									"\r",
									"var responseJson = JSON.parse(responseBody)\r",
									"var roleid = responseJson.users[1].roleInfo[0]._id;\r",
									"var flag = 0;\r",
									"pm.test(\"Assigned role id check\", function () {\r",
									"    pm.expect(roleid).to.equal(pm.environment.get(\"BotDeveloperroleid\"));\r",
									"    flag = 1;\r",
									"});\r",
									"if (flag === 0) {\r",
									"    tests[\"Role is not Bot Developer\"] = false;\r",
									"} else {\r",
									"    tests[\"Role id natches BotDeveloper id\"] = true;\r",
									"}\r",
									"\r",
									"var responseJson = JSON.parse(responseBody)\r",
									"var userid = responseJson.users[1]._id;\r",
									"var flag = 0;\r",
									"pm.test(\"Assigned User id check\", function () {\r",
									"    pm.expect(userid).to.equal(pm.environment.get(\"SanityUserID2\"));\r",
									"    flag = 1;\r",
									"});\r",
									"if (flag === 0) {\r",
									"    tests[\"User id is not matching\"] = false;\r",
									"} else {\r",
									"    tests[\"user id is shared developer id\"] = true;\r",
									"}\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "authority",
								"value": "staging-bots.korebots.com"
							},
							{
								"key": "x-timezone-offset",
								"value": "-330"
							},
							{
								"key": "authorization",
								"value": "bearer {{SanityAcToken1}}"
							},
							{
								"key": "state",
								"value": "configured"
							},
							{
								"key": "content-type",
								"value": "application/json;charset=UTF-8"
							},
							{
								"key": "accept",
								"value": "application/json, text/plain, */*"
							},
							{
								"key": "user-agent",
								"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.105 Safari/537.36"
							},
							{
								"key": "bot-language",
								"value": "en"
							},
							{
								"key": "accountid",
								"value": "{{SanityAccountID1}}"
							},
							{
								"key": "sec-fetch-site",
								"value": "same-origin"
							},
							{
								"key": "sec-fetch-mode",
								"value": "cors"
							},
							{
								"key": "sec-fetch-dest",
								"value": "empty"
							},
							{
								"key": "referer",
								"value": "{{url}}/botbuilder"
							},
							{
								"key": "accept-language",
								"value": "en-US,en;q=0.9"
							},
							{
								"key": "cookie",
								"value": "_ga=GA1.2.1995053781.1596890918; _gid=GA1.2.1877716030.1596890918"
							}
						],
						"url": {
							"raw": "{{url}}/api/{{version}}/users/{{SanityUserID1}}/builder/streams/{{SanityBotStreamId}}/getcodevelopers",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"{{version}}",
								"users",
								"{{SanityUserID1}}",
								"builder",
								"streams",
								"{{SanityBotStreamId}}",
								"getcodevelopers"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetBotID --Shared developer",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"    function delay(ms) {\r",
									"        var cur_d = new Date();\r",
									"        var cur_ticks = cur_d.getTime();\r",
									"        var ms_passed = 0;\r",
									"        while(ms_passed < ms) {\r",
									"            var d = new Date();  // Possible memory leak?\r",
									"            var ticks = d.getTime();\r",
									"            ms_passed = ticks - cur_ticks;\r",
									"        }\r",
									"    }\r",
									"    delay(5000);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get Streams is successful\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var data = JSON.parse(responseBody);",
									"var check = false;",
									"",
									"_.forEach(data,function(ind,value){",
									"   ",
									"   if(ind.name === postman.getEnvironmentVariable(\"SanityBotName\")){",
									"       ",
									"       postman.setEnvironmentVariable(\"sanstreamId\", ind._id);",
									"       check = true;",
									"       tests[\"StreamID found\"] = responseCode.code === 200;",
									"   }",
									"    ",
									"});",
									"",
									"",
									"if(!check){",
									"    ",
									"    tests[\"Stream ID not found\"] = responseCode.code === 100;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "bearer {{SanityAcToken2}}"
							},
							{
								"key": "accountid",
								"value": "{{SanityAccountID1}}"
							},
							{
								"key": "user-agent",
								"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/63.0.3239.132 Safari/537.36"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "bot-language",
								"value": "{{Lang}}"
							},
							{
								"key": "Connection",
								"value": "keep-alive"
							}
						],
						"url": {
							"raw": "{{url}}/api/1.1/users/{{SanityUserID2}}/builder/streams",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"1.1",
								"users",
								"{{SanityUserID2}}",
								"builder",
								"streams"
							]
						},
						"description": "Generated from a curl request: \ncurl 'https://qa1-bots.kore.com/api/1.1/users/u-bff670bb-b592-5a95-930c-d06be3a1e607/builder/streams?rnd=o6uo5' -H 'Cookie: unq=D9Gy1TnE2hRQtC6X' -H 'Accept-Encoding: gzip, deflate, sdch, br' -H 'Accept-Language: en-US,en;q=0.8' -H 'Authorization: bearer f6U3YUh780JNLSA0TzpGusMay2_NhiybzkptlJrZRYHCMsQsmjdOaDp9blZ1RUTt' -H 'Content-Type: application/json;charset=UTF-8' -H 'Accept: application/json, text/plain, */*' -H 'Referer: https://qa1-bots.kore.com/botbuilder' -H 'User-Agent: Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/57.0.2987.133 Safari/537.36' -H 'Connection: keep-alive' --compressed"
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "1.12 Assign BT App scopes",
			"item": [
				{
					"name": "Enable App Scopes",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"validate client Id\", function () {\r",
									"    var responseJson = JSON.parse(responseBody);\r",
									"    var clientId = responseJson.clientId;\r",
									"    pm.expect(clientId).to.equal(pm.environment.get(\"App1Stream1ClientId1\"));\r",
									"});\r",
									"pm.test(\"validate client secret\", function () {\r",
									"    var responseJson = JSON.parse(responseBody);\r",
									"    var clientSecret = responseJson.clientSecret;\r",
									"    pm.expect(clientSecret).to.equal(pm.environment.get(\"App1Stream1ClientSecret1\"));\r",
									"});\r",
									"pm.test(\"validate appname\", function () {\r",
									"    var responseJson = JSON.parse(responseBody);\r",
									"    var appName = responseJson.appName;\r",
									"    pm.expect(appName).to.equal(pm.environment.get(\"App1Stream1\"));\r",
									"});\r",
									"\r",
									"pm.test(\"Chat History permission is available\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"chat_history:read\");\r",
									"});\r",
									"\r",
									"pm.test(\"ML Train permission is available\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"test_and_train:ml\");\r",
									"});\r",
									"\r",
									"pm.test(\"Sessions permission is available\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"bot_sessions:read\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Connection",
								"value": "keep-alive"
							},
							{
								"key": "X-Timezone-Offset",
								"value": "-330"
							},
							{
								"key": "Authorization",
								"value": "bearer {{SanityAcToken1}}"
							},
							{
								"key": "state",
								"value": "configured"
							},
							{
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8"
							},
							{
								"key": "Accept",
								"value": "application/json, text/plain, */*"
							},
							{
								"key": "bot-language",
								"value": "{{Lang}}"
							},
							{
								"key": "User-Agent",
								"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.116 Safari/537.36"
							},
							{
								"key": "X-HTTP-Method-Override",
								"value": "put"
							},
							{
								"key": "AccountId",
								"value": "{{SanityAccountID1}}"
							},
							{
								"key": "Origin",
								"value": "{{url}}"
							},
							{
								"key": "Sec-Fetch-Site",
								"value": "same-origin"
							},
							{
								"key": "Sec-Fetch-Mode",
								"value": "cors"
							},
							{
								"key": "Sec-Fetch-Dest",
								"value": "empty"
							},
							{
								"key": "Referer",
								"value": "https://qa1-bots.kore.ai/botbuilder",
								"disabled": true
							},
							{
								"key": "Accept-Language",
								"value": "en-US,en;q=0.9"
							},
							{
								"key": "Cookie",
								"value": "_ga=GA1.2.1095927599.1594789428; _gid=GA1.2.1727791928.1594789428"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"appName\":\"{{App1Stream1}}\",\r\n\"algorithm\":\"HS256\",\r\n\"pushNotifications\":{\"enable\":false,\"webhookUrl\":\"\"},\r\n\"bots\":[\"{{SanityBotStreamId}}\"],\r\n\"scope\":[\"anonymouschat\",\r\n\"registration\",\r\n{\"bot\":\"{{SanityBotStreamId}}\",\r\n\"scopes\":[\r\n    \"chat_history:read\",\r\n    \"test_and_train:ml\",\r\n    \"test_and_train:faq\",\r\n    \"test_and_train:ml_import\",\r\n    \"test_and_train:ml_export\",\r\n    \"bot_sessions:read\",\r\n    \"custom_dashboards:custom_dashboards\"\r\n    ]}]}"
						},
						"url": {
							"raw": "{{url}}/api/{{version}}/users/{{SanityUserID1}}/streams/{{SanityBotStreamId}}/sdk/apps/{{App1Stream1ClientId1}}?streamId={{SanityBotStreamId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"{{version}}",
								"users",
								"{{SanityUserID1}}",
								"streams",
								"{{SanityBotStreamId}}",
								"sdk",
								"apps",
								"{{App1Stream1ClientId1}}"
							],
							"query": [
								{
									"key": "streamId",
									"value": "{{SanityBotStreamId}}"
								}
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "1.13 Enable_DifferentComponents",
			"item": [
				{
					"name": "Enable_EndOfConversationEvent ",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"var body = JSON.parse(responseBody); ",
									"var endOfConv=body.botEvents.CONVERSATION_END.enabled",
									"",
									"        // if(ind.name === postman.getEnvironmentVariable(\"Consumerbotname\")){",
									"    pm.test(\"CONVERSATION_END is available in the response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"CONVERSATION_END\");",
									"    });",
									"",
									" if (endOfConv === true)",
									" { tests[\"End of Conversation Event is enabled\"]= body.length !== 0 }",
									" else",
									" {tests[\"End of Conversation Event is disbaled\"]= body.length !== 0}",
									"",
									"var body = JSON.parse(responseBody); ",
									"var endOfConv=body.botEvents.CONVERSATION_END.action",
									"tests[\"End of Conversation Event is enabled using \" + endOfConv + \" option\"]= body.length !== 0"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Connection",
								"value": "keep-alive"
							},
							{
								"key": "X-Timezone-Offset",
								"value": "-330"
							},
							{
								"key": "Authorization",
								"value": "bearer {{SanityAcToken1}}"
							},
							{
								"key": "state",
								"value": "configured"
							},
							{
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8"
							},
							{
								"key": "Accept",
								"value": "application/json, text/plain, */*"
							},
							{
								"key": "bot-language",
								"value": "{{Lang}}"
							},
							{
								"key": "User-Agent",
								"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.122 Safari/537.36"
							},
							{
								"key": "X-HTTP-Method-Override",
								"value": "put"
							},
							{
								"key": "AccountId",
								"value": "{{SanityAccountID1}}"
							},
							{
								"key": "Origin",
								"value": "https://qa1-bots.kore.ai"
							},
							{
								"key": "Sec-Fetch-Site",
								"value": "same-origin"
							},
							{
								"key": "Sec-Fetch-Mode",
								"value": "cors"
							},
							{
								"key": "Sec-Fetch-Dest",
								"value": "empty"
							},
							{
								"key": "Referer",
								"value": "https://qa1-bots.kore.ai/botbuilder"
							},
							{
								"key": "Accept-Language",
								"value": "en-US,en;q=0.9"
							},
							{
								"key": "Cookie",
								"value": "_ga=GA1.2.911535481.1586497890; __hs_opt_out=no; hubspotutk=c8a344e15c1a384e2645eafb285bf05a; _vwo_uuid_v2=DA136D087CC5B2A2663395C6EECED51A9|065feef042135d1a68a721dae7548c94; _gcl_au=1.1.747703786.1586774907; _vis_opt_s=1%7C; _gid=GA1.2.1518629517.1587966883; __hssrc=1; __hstc=59894770.c8a344e15c1a384e2645eafb285bf05a.1586497890226.1588134517730.1588141601363.59"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"botEvent\": {\n        \"CONVERSATION_END\": {\n            \"enabled\": true,\n            \"manageFirstMessage\": {},\n            \"action\": \"showMsg\",\n            \"script\": \".\",\n            \"msg\": [\n                {\n                    \"text\": \"API%3AThanks%20for%20Contacting%20us.%20Have%20a%20great%20day.\",\n                    \"type\": \"basic\",\n                    \"channel\": \"default\",\n                    \"_id\": \"\"\n                },\n                {\n                    \"text\": \"Webhook%20Channel%20Specific%20Override%20in%20EndOfConversation%20Event\",\n                    \"type\": \"basic\",\n                    \"channel\": \"ivr\",\n                    \"_id\": \"\"\n                }\n            ],\n            \"welcomeIvrOptions\": []\n        }\n    }\n}"
						},
						"url": {
							"raw": "{{url}}/api/{{version}}/users/{{SanityUserID1}}/builder/streams/{{SanityBotStreamId}}/events",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"{{version}}",
								"users",
								"{{SanityUserID1}}",
								"builder",
								"streams",
								"{{SanityBotStreamId}}",
								"events"
							]
						}
					},
					"response": []
				},
				{
					"name": "Enable_OnConnectEvent",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var body = JSON.parse(responseBody); ",
									"var endOfConv=body.botEvents.ON_CONNECT_EVENT.enabled",
									"    pm.test(\"ON_CONNECT_EVENT is available in the response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"ON_CONNECT_EVENT\");",
									"    });",
									"",
									" if (endOfConv === true)",
									" { tests[\"ON_CONNECT_EVENT is enabled\" ]= body.length !== 0 }",
									" else",
									" {tests[\"ON_CONNECT_EVENT is disbaled\"]= body.length !== 0}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Connection",
								"value": "keep-alive"
							},
							{
								"key": "X-Timezone-Offset",
								"value": "-330"
							},
							{
								"key": "Authorization",
								"value": "bearer {{SanityAcToken1}}"
							},
							{
								"key": "state",
								"value": "configured"
							},
							{
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8"
							},
							{
								"key": "Accept",
								"value": "application/json, text/plain, */*"
							},
							{
								"key": "bot-language",
								"value": "{{Lang}}"
							},
							{
								"key": "User-Agent",
								"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.122 Safari/537.36"
							},
							{
								"key": "X-HTTP-Method-Override",
								"value": "put"
							},
							{
								"key": "AccountId",
								"value": "{{SanityAccountID1}}"
							},
							{
								"key": "Origin",
								"value": "https://qa1-bots.kore.ai"
							},
							{
								"key": "Sec-Fetch-Site",
								"value": "same-origin"
							},
							{
								"key": "Sec-Fetch-Mode",
								"value": "cors"
							},
							{
								"key": "Sec-Fetch-Dest",
								"value": "empty"
							},
							{
								"key": "Referer",
								"value": "https://qa1-bots.kore.ai/botbuilder"
							},
							{
								"key": "Accept-Language",
								"value": "en-US,en;q=0.9"
							},
							{
								"key": "Cookie",
								"value": "_ga=GA1.2.911535481.1586497890; __hs_opt_out=no; hubspotutk=c8a344e15c1a384e2645eafb285bf05a; _vwo_uuid_v2=DA136D087CC5B2A2663395C6EECED51A9|065feef042135d1a68a721dae7548c94; _gcl_au=1.1.747703786.1586774907; _vis_opt_s=1%7C; _gid=GA1.2.1518629517.1587966883; __hssrc=1; __hstc=59894770.c8a344e15c1a384e2645eafb285bf05a.1586497890226.1588134517730.1588141601363.59"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"botEvent\": {\n\t\t\"ON_CONNECT_EVENT\": {\n\t\t\t\"enabled\": true,\n\t\t\t\"manageFirstMessage\": {},\n\t\t\t\"action\": \"showMsg\",\n\t\t\t\"script\": \".\",\n\t\t\t\"msg\": [{\n\t\t\t\t\"text\": \"Hey. I'm here to help you with all type of queries. Please say help to continue the conversation.\",\n\t\t\t\t\"type\": \"basic\",\n\t\t\t\t\"channel\": \"default\",\n\t\t\t\t\"_id\": \"\"\n\t\t\t}],\n\t\t\t\"welcomeIvrOptions\": []\n\t\t}\n\t}\n}"
						},
						"url": {
							"raw": "{{url}}/api/{{version}}/users/{{SanityUserID1}}/builder/streams/{{SanityBotStreamId}}/events",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"{{version}}",
								"users",
								"{{SanityUserID1}}",
								"builder",
								"streams",
								"{{SanityBotStreamId}}",
								"events"
							]
						}
					},
					"response": []
				},
				{
					"name": "Enable_WelcomeEvent",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var body = JSON.parse(responseBody); ",
									"var endOfConv=body.botEvents.WELCOME_MESSAGE_EVENT.enabled",
									"    pm.test(\"WELCOME_MESSAGE_EVENT is available in the response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"WELCOME_MESSAGE_EVENT\");",
									"    });",
									"",
									" if (endOfConv === true)",
									" { tests[\"WELCOME_MESSAGE_EVENT is enabled\" ]= body.length !== 0 }",
									" else",
									" {tests[\"WELCOME_MESSAGE_EVENT is disbaled\"]= body.length !== 0}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Connection",
								"value": "keep-alive"
							},
							{
								"key": "X-Timezone-Offset",
								"value": "-330"
							},
							{
								"key": "Authorization",
								"value": "bearer {{SanityAcToken1}}"
							},
							{
								"key": "state",
								"value": "configured"
							},
							{
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8"
							},
							{
								"key": "Accept",
								"value": "application/json, text/plain, */*"
							},
							{
								"key": "bot-language",
								"value": "{{Lang}}"
							},
							{
								"key": "User-Agent",
								"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.122 Safari/537.36"
							},
							{
								"key": "X-HTTP-Method-Override",
								"value": "put"
							},
							{
								"key": "AccountId",
								"value": "{{SanityAccountID1}}"
							},
							{
								"key": "Origin",
								"value": "https://qa1-bots.kore.ai"
							},
							{
								"key": "Sec-Fetch-Site",
								"value": "same-origin"
							},
							{
								"key": "Sec-Fetch-Mode",
								"value": "cors"
							},
							{
								"key": "Sec-Fetch-Dest",
								"value": "empty"
							},
							{
								"key": "Referer",
								"value": "https://qa1-bots.kore.ai/botbuilder"
							},
							{
								"key": "Accept-Language",
								"value": "en-US,en;q=0.9"
							},
							{
								"key": "Cookie",
								"value": "_ga=GA1.2.911535481.1586497890; __hs_opt_out=no; hubspotutk=c8a344e15c1a384e2645eafb285bf05a; _vwo_uuid_v2=DA136D087CC5B2A2663395C6EECED51A9|065feef042135d1a68a721dae7548c94; _gcl_au=1.1.747703786.1586774907; _vis_opt_s=1%7C; _gid=GA1.2.1518629517.1587966883; __hssrc=1; __hstc=59894770.c8a344e15c1a384e2645eafb285bf05a.1586497890226.1588134517730.1588141601363.59"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"botEvent\": {\n    \"WELCOME_MESSAGE_EVENT\": {\n      \"enabled\": true,\n      \"manageFirstMessage\": {\n        \"greetings\": \"displayWelcomeMsg\",\n        \"faq\": \"displayWelcomeMsg\",\n        \"task\": \"displayWelcomeMsg\"\n      },\n      \"action\": \"showMsg\",\n      \"script\": \".\",\n     \"msg\": [{\n    \t\t\t\"text\": \"Welcome to the Support . How can i help you today?\",\n\t\t\t\t\"type\": \"basic\",\n\t\t\t\t\"channel\": \"default\",\n\t\t\t\t\"_id\": \"\"\n\t\t\t}],\n      \"welcomeIvrOptions\": []\n    }\n  }\n}"
						},
						"url": {
							"raw": "{{url}}/api/{{version}}/users/{{SanityUserID1}}/builder/streams/{{SanityBotStreamId}}/events",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"{{version}}",
								"users",
								"{{SanityUserID1}}",
								"builder",
								"streams",
								"{{SanityBotStreamId}}",
								"events"
							]
						}
					},
					"response": []
				},
				{
					"name": "Enable_WebHookChannel",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Webhook Channel Is enabled\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Webhook\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "authority",
								"value": "staging-bots.korebots.com"
							},
							{
								"key": "x-timezone-offset",
								"value": "-330"
							},
							{
								"key": "authorization",
								"value": "bearer {{SanityAcToken1}}"
							},
							{
								"key": "state",
								"value": "configured"
							},
							{
								"key": "content-type",
								"value": "application/json;charset=UTF-8"
							},
							{
								"key": "accept",
								"value": "application/json, text/plain, */*"
							},
							{
								"key": "user-agent",
								"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.105 Safari/537.36"
							},
							{
								"key": "bot-language",
								"value": "{{Lang}}"
							},
							{
								"key": "accountid",
								"value": "{{SanityAccountID1}}"
							},
							{
								"key": "origin",
								"value": "https://staging-bots.korebots.com"
							},
							{
								"key": "sec-fetch-site",
								"value": "same-origin"
							},
							{
								"key": "sec-fetch-mode",
								"value": "cors"
							},
							{
								"key": "sec-fetch-dest",
								"value": "empty"
							},
							{
								"key": "referer",
								"value": "https://staging-bots.korebots.com/botbuilder"
							},
							{
								"key": "accept-language",
								"value": "en-US,en;q=0.9"
							},
							{
								"key": "cookie",
								"value": "_ga=GA1.2.1918917934.1596810297; _gid=GA1.2.434737481.1596810297"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"app\": {\r\n        \"clientId\": \"{{App1Stream1ClientId1}}\",\r\n        \"appName\": \"{{App1Stream1}}\"\r\n    },\r\n    \"displayName\": \"Webhook\",\r\n    \"type\": \"ivr\",\r\n    \"isAsync\": false,\r\n    \"enable\": true,\r\n    \"createInstance\": true\r\n}"
						},
						"url": {
							"raw": "{{url}}/api/{{version}}/users/{{SanityUserID1}}/builder/streams/{{SanityBotStreamId}}/channels/ivr",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"{{version}}",
								"users",
								"{{SanityUserID1}}",
								"builder",
								"streams",
								"{{SanityBotStreamId}}",
								"channels",
								"ivr"
							]
						}
					},
					"response": []
				},
				{
					"name": "GenerateJWT",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var data=JSON.parse(responseBody)\r",
									"pm.environment.set(\"SanityWebhookToken\",data.jwt)\r",
									"tests[\"Generated JWT token is: \" +data.jwt+ \"\"]=true;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\"clientId\": \"{{App1Stream1ClientId1}}\",\n\"clientSecret\": \"{{App1Stream1ClientSecret1}}\",\n\"identity\": \"{{SanityUserID1}}\",\n\"aud\": \"\",\n\"isAnonymous\": false\n}"
						},
						"url": {
							"raw": "https://mk2r2rmj21.execute-api.us-east-1.amazonaws.com/dev/users/sts",
							"protocol": "https",
							"host": [
								"mk2r2rmj21",
								"execute-api",
								"us-east-1",
								"amazonaws",
								"com"
							],
							"path": [
								"dev",
								"users",
								"sts"
							]
						}
					},
					"response": []
				},
				{
					"name": "EnablePII",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"var data=JSON.parse(responseBody)\r",
									"if(data.strict_pii='true'){\r",
									"tests[\"PII is enabled in the bot\"]=true;\r",
									"}else{\r",
									"tests[\"PII is disabled in the bot\"]=false;\r",
									"}\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "authority",
								"value": "staging-bots.korebots.com"
							},
							{
								"key": "x-timezone-offset",
								"value": "-330"
							},
							{
								"key": "authorization",
								"value": "bearer {{SanityAcToken1}}"
							},
							{
								"key": "state",
								"value": "configured"
							},
							{
								"key": "content-type",
								"value": "application/json;charset=UTF-8"
							},
							{
								"key": "accept",
								"value": "application/json, text/plain, */*"
							},
							{
								"key": "bot-language",
								"value": "{{Lang}}"
							},
							{
								"key": "user-agent",
								"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.105 Safari/537.36"
							},
							{
								"key": "x-http-method-override",
								"value": "put"
							},
							{
								"key": "accountid",
								"value": "{{SanityAccountID1}}"
							},
							{
								"key": "origin",
								"value": "https://staging-bots.korebots.com"
							},
							{
								"key": "sec-fetch-site",
								"value": "same-origin"
							},
							{
								"key": "sec-fetch-mode",
								"value": "cors"
							},
							{
								"key": "sec-fetch-dest",
								"value": "empty"
							},
							{
								"key": "referer",
								"value": "https://staging-bots.korebots.com/botbuilder"
							},
							{
								"key": "accept-language",
								"value": "en-US,en;q=0.9"
							},
							{
								"key": "cookie",
								"value": "_ga=GA1.2.1918917934.1596810297; _gid=GA1.2.434737481.1596810297"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"pii_patterns\": [\r\n        {\r\n            \"display\": {\r\n                \"type\": \"redaction\"\r\n            },\r\n            \"pii_type\": \"Email\",\r\n            \"regex\": \"[a-zA-Z0-9_+&*-]+(?:\\\\.[a-zA-Z0-9_+&*-]+)*@(?:[a-zA-Z0-9-]+\\\\.)+[a-zA-Z]{2,7}\",\r\n            \"ignoreCase\": true,\r\n            \"sourceType\": \"system\",\r\n            \"enabled\": true,\r\n            \"mappedEntities\": [\r\n                \"{{SendEmailEntityRefID1}}\"\r\n            ]\r\n        },\r\n        {\r\n            \"display\": {\r\n                \"type\": \"redaction\"\r\n            },\r\n            \"pii_type\": \"Phone\",\r\n            \"regex\": \"(\\\\(?\\\\+?[0-9]{1,2}\\\\)?[-. ]?)?(\\\\(?[0-9]{3}\\\\)?|[0-9]{3})[-. ]?([0-9]{3}[-. ]?[0-9]{4}|\\\\b[A-Z0-9]{7}\\\\b)\",\r\n            \"ignoreCase\": true,\r\n            \"sourceType\": \"system\",\r\n            \"enabled\": false,\r\n            \"mappedEntities\": []\r\n        },\r\n        {\r\n            \"display\": {\r\n                \"type\": \"redaction\"\r\n            },\r\n            \"pii_type\": \"SSN\",\r\n            \"regex\": \"\\\\d{3}-\\\\d{2}-\\\\d{4}$\",\r\n            \"ignoreCase\": true,\r\n            \"sourceType\": \"system\",\r\n            \"enabled\": false,\r\n            \"mappedEntities\": []\r\n        },\r\n        {\r\n            \"display\": {\r\n                \"type\": \"redaction\"\r\n            },\r\n            \"pii_type\": \"Credit Card Number\",\r\n            \"regex\": \"\\\\d{4}[ -]?\\\\d{4}[ -]?\\\\d{4}[ -]?\\\\d{4}|\\\\d{4}[ -]?\\\\d{6}[ -]?\\\\d{4}\\\\d?\",\r\n            \"ignoreCase\": true,\r\n            \"sourceType\": \"system\",\r\n            \"enabled\": false,\r\n            \"mappedEntities\": []\r\n        }\r\n    ],\r\n    \"strict_pii\": true,\r\n    \"enable_pii\": true\r\n}"
						},
						"url": {
							"raw": "{{url}}/api/{{version}}/users/{{SanityUserID1}}/builder/streams/{{SanityBotStreamId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"{{version}}",
								"users",
								"{{SanityUserID1}}",
								"builder",
								"streams",
								"{{SanityBotStreamId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "FileUpload_Function",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var data= JSON.parse(responseBody)\r",
									"pm.environment.set(\"FunctionFileID\",data.fileId)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "authority",
								"value": "staging-bots.korebots.com"
							},
							{
								"key": "x-timezone-offset",
								"value": "-330"
							},
							{
								"key": "authorization",
								"value": "bearer {{SanityAcToken1}}"
							},
							{
								"key": "state",
								"value": "configured"
							},
							{
								"key": "content-type",
								"value": "multipart/form-data; boundary=----WebKitFormBoundaryQ39hLeBKNZtO8YWA"
							},
							{
								"key": "accept",
								"value": "application/json, text/plain, */*"
							},
							{
								"key": "user-agent",
								"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.105 Safari/537.36"
							},
							{
								"key": "bot-language",
								"value": "{{Lang}}"
							},
							{
								"key": "accountid",
								"value": "{{SanityAccountID1}}"
							},
							{
								"key": "origin",
								"value": "https://staging-bots.korebots.com"
							},
							{
								"key": "sec-fetch-site",
								"value": "same-origin"
							},
							{
								"key": "sec-fetch-mode",
								"value": "cors"
							},
							{
								"key": "sec-fetch-dest",
								"value": "empty"
							},
							{
								"key": "referer",
								"value": "https://staging-bots.korebots.com/botbuilder"
							},
							{
								"key": "accept-language",
								"value": "en-US,en;q=0.9"
							},
							{
								"key": "cookie",
								"value": "_ga=GA1.2.1918917934.1596810297; _gid=GA1.2.434737481.1596810297"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "/C:/Users/Public/Kiran_Projects/SmokeSuite/temp.js"
								},
								{
									"key": "fileContext",
									"value": "bulkImport",
									"type": "text"
								},
								{
									"key": "fileExtension",
									"value": "txt",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/{{version}}/users/{{SanityUserID1}}/file",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"{{version}}",
								"users",
								"{{SanityUserID1}}",
								"file"
							]
						}
					},
					"response": []
				},
				{
					"name": "ImportBotFunctionFIle",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "authority",
								"value": "staging-bots.korebots.com"
							},
							{
								"key": "x-timezone-offset",
								"value": "-330"
							},
							{
								"key": "authorization",
								"value": "bearer {{SanityAcToken1}}"
							},
							{
								"key": "state",
								"value": "configured"
							},
							{
								"key": "content-type",
								"value": "application/json;charset=UTF-8"
							},
							{
								"key": "accept",
								"value": "application/json, text/plain, */*"
							},
							{
								"key": "user-agent",
								"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.105 Safari/537.36"
							},
							{
								"key": "bot-language",
								"value": "{{Lang}}"
							},
							{
								"key": "accountid",
								"value": "{{SanityAccountID1}}"
							},
							{
								"key": "origin",
								"value": "https://staging-bots.korebots.com"
							},
							{
								"key": "sec-fetch-site",
								"value": "same-origin"
							},
							{
								"key": "sec-fetch-mode",
								"value": "cors"
							},
							{
								"key": "sec-fetch-dest",
								"value": "empty"
							},
							{
								"key": "referer",
								"value": "https://staging-bots.korebots.com/botbuilder"
							},
							{
								"key": "accept-language",
								"value": "en-US,en;q=0.9"
							},
							{
								"key": "cookie",
								"value": "_ga=GA1.2.1918917934.1596810297; _gid=GA1.2.434737481.1596810297"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"fileName\": \"temp.js\",\r\n    \"fileId\": \"{{FunctionFileID}}\"\r\n}"
						},
						"url": {
							"raw": "{{url}}/api/{{version}}/builder/streams/{{SanityBotStreamId}}/botfunctions",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"{{version}}",
								"builder",
								"streams",
								"{{SanityBotStreamId}}",
								"botfunctions"
							]
						}
					},
					"response": []
				},
				{
					"name": "BasicAuth_IDP_Creation",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"postman.setEnvironmentVariable(\"AuthCheckName\", \"AuthCheck\" + parseInt(Math.random() * 1000000));\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "authority",
								"value": "staging-bots.korebots.com"
							},
							{
								"key": "x-timezone-offset",
								"value": "-330"
							},
							{
								"key": "authorization",
								"value": "bearer {{SanityAcToken1}}"
							},
							{
								"key": "state",
								"value": "configured"
							},
							{
								"key": "content-type",
								"value": "application/json;charset=UTF-8"
							},
							{
								"key": "accept",
								"value": "application/json, text/plain, */*"
							},
							{
								"key": "user-agent",
								"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.105 Safari/537.36"
							},
							{
								"key": "bot-language",
								"value": "{{Lang}}"
							},
							{
								"key": "accountid",
								"value": "{{SanityAccountID1}}"
							},
							{
								"key": "origin",
								"value": "https://staging-bots.korebots.com"
							},
							{
								"key": "sec-fetch-site",
								"value": "same-origin"
							},
							{
								"key": "sec-fetch-mode",
								"value": "cors"
							},
							{
								"key": "sec-fetch-dest",
								"value": "empty"
							},
							{
								"key": "referer",
								"value": "https://staging-bots.korebots.com/botbuilder"
							},
							{
								"key": "accept-language",
								"value": "en-US,en;q=0.9"
							},
							{
								"key": "cookie",
								"value": "_ga=GA1.2.1918917934.1596810297; _gid=GA1.2.434737481.1596810297"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"sso_type\": \"basic\",\r\n    \"name\": \"{{AuthCheckName}}\",\r\n    \"streamId\": \"{{SanityBotStreamId}}\",\r\n    \"hasTenancy\": false,\r\n    \"fields\": [\r\n        {\r\n            \"type\": \"header\",\r\n            \"key\": \"Authorization\",\r\n            \"value\": \"Basic {{passphrase}}\"\r\n        }\r\n    ],\r\n    \"appConfig\": {\r\n        \"baseURL\": \"\"\r\n    },\r\n    \"formfields\": [\r\n        {\r\n            \"title\": \"Username or email\",\r\n            \"placeholder\": \"\",\r\n            \"key\": \"username\",\r\n            \"type\": \"string\",\r\n            \"fieldType\": \"textbox\",\r\n            \"isRequired\": true\r\n        },\r\n        {\r\n            \"title\": \"Password\",\r\n            \"placeholder\": \"\",\r\n            \"key\": \"password\",\r\n            \"type\": \"string\",\r\n            \"fieldType\": \"password\",\r\n            \"isRequired\": true\r\n        }\r\n    ],\r\n    \"connectorEnabled\": false\r\n}"
						},
						"url": {
							"raw": "{{url}}/api/{{version}}/builder/streams/{{SanityBotStreamId}}/idp",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"{{version}}",
								"builder",
								"streams",
								"{{SanityBotStreamId}}",
								"idp"
							]
						}
					},
					"response": []
				},
				{
					"name": "Test_CreatedIDP",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "authority",
								"value": "staging-bots.korebots.com"
							},
							{
								"key": "x-timezone-offset",
								"value": "-330"
							},
							{
								"key": "authorization",
								"value": "bearer {{SanityAcToken1}}"
							},
							{
								"key": "state",
								"value": "configured"
							},
							{
								"key": "content-type",
								"value": "application/json;charset=UTF-8"
							},
							{
								"key": "accept",
								"value": "application/json, text/plain, */*"
							},
							{
								"key": "user-agent",
								"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.105 Safari/537.36"
							},
							{
								"key": "bot-language",
								"value": "{{Lang}}"
							},
							{
								"key": "accountid",
								"value": "{{SanityAccountID1}}"
							},
							{
								"key": "origin",
								"value": "https://staging-bots.korebots.com"
							},
							{
								"key": "sec-fetch-site",
								"value": "same-origin"
							},
							{
								"key": "sec-fetch-mode",
								"value": "cors"
							},
							{
								"key": "sec-fetch-dest",
								"value": "empty"
							},
							{
								"key": "referer",
								"value": "https://staging-bots.korebots.com/botbuilder"
							},
							{
								"key": "accept-language",
								"value": "en-US,en;q=0.9"
							},
							{
								"key": "cookie",
								"value": "_ga=GA1.2.1918917934.1596810297; _gid=GA1.2.434737481.1596810297"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"tokens\": {\r\n        \"username\": \"admin\",\r\n        \"password\": \"password\"\r\n    }\r\n}"
						},
						"url": {
							"raw": "{{url}}/api/{{version}}/stream/{{SanityBotStreamId}}/authorize?idp={{AuthCheckName}}&rurl={{url}}/botbuilder/views/succ-redirect.html&label=Check1%20Account&tenant=&isTryOutUserConnection=false&isDeveloper=true",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"{{version}}",
								"stream",
								"{{SanityBotStreamId}}",
								"authorize"
							],
							"query": [
								{
									"key": "idp",
									"value": "{{AuthCheckName}}"
								},
								{
									"key": "rurl",
									"value": "{{url}}/botbuilder/views/succ-redirect.html"
								},
								{
									"key": "label",
									"value": "Check1%20Account"
								},
								{
									"key": "tenant",
									"value": ""
								},
								{
									"key": "isTryOutUserConnection",
									"value": "false"
								},
								{
									"key": "isDeveloper",
									"value": "true"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "CreateCustomDashboard",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"DashboardName\", \"Dashboard1\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"var data= JSON.parse(responseBody)\r",
									"pm.environment.set(\"SanityDashBoardID\",data._id)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "authority",
								"value": "staging-bots.korebots.com"
							},
							{
								"key": "accept",
								"value": "application/json, text/plain, */*"
							},
							{
								"key": "x-timezone-offset",
								"value": "-330"
							},
							{
								"key": "authorization",
								"value": "bearer {{SanityAcToken1}}"
							},
							{
								"key": "user-agent",
								"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.105 Safari/537.36"
							},
							{
								"key": "accountid",
								"value": "{{SanityAccountID1}}"
							},
							{
								"key": "content-type",
								"value": "application/json;charset=UTF-8"
							},
							{
								"key": "origin",
								"value": "https://staging-bots.korebots.com"
							},
							{
								"key": "sec-fetch-site",
								"value": "same-origin"
							},
							{
								"key": "sec-fetch-mode",
								"value": "cors"
							},
							{
								"key": "sec-fetch-dest",
								"value": "empty"
							},
							{
								"key": "referer",
								"value": "https://staging-bots.korebots.com/analytics/customdashboard/st-30c3a572-5446-5846-839b-d7ad838ccaf3"
							},
							{
								"key": "accept-language",
								"value": "en-US,en;q=0.9"
							},
							{
								"key": "cookie",
								"value": "_ga=GA1.2.1918917934.1596810297; _gid=GA1.2.434737481.1596810297"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{DashboardName}}\"\r\n}"
						},
						"url": {
							"raw": "{{url}}/api/{{version}}/users/{{SanityUserID1}}/builder/streams/{{SanityBotStreamId}}/dashboards",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"{{version}}",
								"users",
								"{{SanityUserID1}}",
								"builder",
								"streams",
								"{{SanityBotStreamId}}",
								"dashboards"
							]
						}
					},
					"response": []
				},
				{
					"name": "RunQuery",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "authority",
								"value": "staging-bots.korebots.com"
							},
							{
								"key": "accept",
								"value": "application/json, text/plain, */*"
							},
							{
								"key": "x-timezone-offset",
								"value": "-330"
							},
							{
								"key": "authorization",
								"value": "bearer {{SanityAcToken1}}"
							},
							{
								"key": "user-agent",
								"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.105 Safari/537.36"
							},
							{
								"key": "accountid",
								"value": "{{SanityAccountID1}}"
							},
							{
								"key": "content-type",
								"value": "application/json;charset=UTF-8"
							},
							{
								"key": "origin",
								"value": "https://staging-bots.korebots.com"
							},
							{
								"key": "sec-fetch-site",
								"value": "same-origin"
							},
							{
								"key": "sec-fetch-mode",
								"value": "cors"
							},
							{
								"key": "sec-fetch-dest",
								"value": "empty"
							},
							{
								"key": "referer",
								"value": "https://staging-bots.korebots.com/analytics/customdashboard/st-30c3a572-5446-5846-839b-d7ad838ccaf3"
							},
							{
								"key": "accept-language",
								"value": "en-US,en;q=0.9"
							},
							{
								"key": "cookie",
								"value": "_ga=GA1.2.1918917934.1596810297; _gid=GA1.2.434737481.1596810297"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"sqlQuery\": {\r\n        \"dataSet\": \"Analytics\",\r\n        \"select\": \"metricType,taskname,channel\",\r\n        \"filterBy\": \"metricType='successtasks' \"\r\n    }\r\n}"
						},
						"url": {
							"raw": "{{url}}/api/{{version}}/users/{{SanityUserID1}}/builder/streams/{{SanityBotStreamId}}/dashboards/{{SanityDashBoardID}}/executeSQLQuery?startDate={{DashboardFromDate}}&endDate={{DashboardToDate}}&limit=-1&offset=0",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"{{version}}",
								"users",
								"{{SanityUserID1}}",
								"builder",
								"streams",
								"{{SanityBotStreamId}}",
								"dashboards",
								"{{SanityDashBoardID}}",
								"executeSQLQuery"
							],
							"query": [
								{
									"key": "startDate",
									"value": "{{DashboardFromDate}}"
								},
								{
									"key": "endDate",
									"value": "{{DashboardToDate}}"
								},
								{
									"key": "limit",
									"value": "-1"
								},
								{
									"key": "offset",
									"value": "0"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "CreateWidget",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"var data= JSON.parse(responseBody)\r",
									"pm.environment.set(\"SanityWidgetID\",data._id)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "authority",
								"value": "staging-bots.korebots.com"
							},
							{
								"key": "accept",
								"value": "application/json, text/plain, */*"
							},
							{
								"key": "x-timezone-offset",
								"value": "-330"
							},
							{
								"key": "authorization",
								"value": "bearer {{SanityAcToken1}}"
							},
							{
								"key": "user-agent",
								"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.105 Safari/537.36"
							},
							{
								"key": "accountid",
								"value": "{{SanityAccountID1}}"
							},
							{
								"key": "content-type",
								"value": "application/json;charset=UTF-8"
							},
							{
								"key": "origin",
								"value": "https://staging-bots.korebots.com"
							},
							{
								"key": "sec-fetch-site",
								"value": "same-origin"
							},
							{
								"key": "sec-fetch-mode",
								"value": "cors"
							},
							{
								"key": "sec-fetch-dest",
								"value": "empty"
							},
							{
								"key": "referer",
								"value": "https://staging-bots.korebots.com/analytics/customdashboard/st-30c3a572-5446-5846-839b-d7ad838ccaf3"
							},
							{
								"key": "accept-language",
								"value": "en-US,en;q=0.9"
							},
							{
								"key": "cookie",
								"value": "_ga=GA1.2.1918917934.1596810297; _gid=GA1.2.434737481.1596810297"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"SuccessTasks\",\r\n    \"type\": \"table\",\r\n    \"layout\": {},\r\n    \"sqlQuery\": {\r\n        \"dataSet\": \"Analytics\",\r\n        \"select\": \"metricType,taskname,channel\",\r\n        \"filterBy\": \"metricType='successtasks'\"\r\n    },\r\n    \"overlay\": [],\r\n    \"properties\": {},\r\n    \"dimensions\": [\r\n        {\r\n            \"fieldName\": \"metrictype\",\r\n            \"displayName\": \"metrictype\",\r\n            \"type\": \"string\"\r\n        },\r\n        {\r\n            \"fieldName\": \"taskname\",\r\n            \"displayName\": \"taskname\",\r\n            \"type\": \"string\"\r\n        },\r\n        {\r\n            \"fieldName\": \"channel\",\r\n            \"displayName\": \"channel\",\r\n            \"type\": \"string\"\r\n        }\r\n    ],\r\n    \"metrics\": []\r\n}"
						},
						"url": {
							"raw": "{{url}}/api/{{version}}/users/{{SanityUserID1}}/builder/streams/{{SanityBotStreamId}}/dashboards/{{SanityDashBoardID}}/widgets",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"{{version}}",
								"users",
								"{{SanityUserID1}}",
								"builder",
								"streams",
								"{{SanityBotStreamId}}",
								"dashboards",
								"{{SanityDashBoardID}}",
								"widgets"
							]
						}
					},
					"response": []
				},
				{
					"name": "AddWidgetToDashboard",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "authority",
								"value": "staging-bots.korebots.com"
							},
							{
								"key": "accept",
								"value": "application/json, text/plain, */*"
							},
							{
								"key": "x-timezone-offset",
								"value": "-330"
							},
							{
								"key": "authorization",
								"value": "bearer {{SanityAcToken1}}"
							},
							{
								"key": "content-type",
								"value": "application/json;charset=UTF-8"
							},
							{
								"key": "user-agent",
								"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.105 Safari/537.36"
							},
							{
								"key": "x-http-method-override",
								"value": "put"
							},
							{
								"key": "accountid",
								"value": "{{SanityAccountID1}}"
							},
							{
								"key": "origin",
								"value": "https://staging-bots.korebots.com"
							},
							{
								"key": "sec-fetch-site",
								"value": "same-origin"
							},
							{
								"key": "sec-fetch-mode",
								"value": "cors"
							},
							{
								"key": "sec-fetch-dest",
								"value": "empty"
							},
							{
								"key": "referer",
								"value": "https://staging-bots.korebots.com/analytics/customdashboard/st-30c3a572-5446-5846-839b-d7ad838ccaf3"
							},
							{
								"key": "accept-language",
								"value": "en-US,en;q=0.9"
							},
							{
								"key": "cookie",
								"value": "_ga=GA1.2.1918917934.1596810297; _gid=GA1.2.434737481.1596810297"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"properties\": {\r\n        \"0\": {\r\n            \"ind\": 0,\r\n            \"id\": \"{{SanityWidgetID}}\",\r\n            \"meta\": 100,\r\n            \"metaHeight\": 300\r\n        }\r\n    }\r\n}"
						},
						"url": {
							"raw": "{{url}}/api/{{version}}/users/{{SanityUserID1}}/builder/streams/{{SanityBotStreamId}}/dashboards/{{SanityDashBoardID}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"{{version}}",
								"users",
								"{{SanityUserID1}}",
								"builder",
								"streams",
								"{{SanityBotStreamId}}",
								"dashboards",
								"{{SanityDashBoardID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Publish the bot",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"setTimeout(() => {}, 5000); \r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "bearer {{SanityAcToken1}}"
							},
							{
								"key": "accountid",
								"type": "text",
								"value": "{{SanityAccountID1}}"
							},
							{
								"key": "user-agent",
								"type": "text",
								"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/63.0.3239.132 Safari/537.36"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "bot-language",
								"type": "text",
								"value": "{{Lang}}"
							},
							{
								"key": "Connection",
								"type": "text",
								"value": "keep-alive"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"resources\": [\r\n        {\r\n            \"namespace\": \"enterprise\",\r\n            \"resourceId\": \"{{SanityDialogID1}}\",\r\n            \"namespaceIds\": [],\r\n            \"resourceType\": \"dialog\",\r\n            \"versionComment\": \"Publish\",\r\n            \"approvalRequestedLanguages\": [\r\n                \"en\"\r\n            ]\r\n        },\r\n        {\r\n            \"namespace\": \"enterprise\",\r\n            \"resourceId\": \"{{GetbalanceDialogID}}\",\r\n            \"namespaceIds\": [],\r\n            \"resourceType\": \"dialog\",\r\n            \"versionComment\": \"Publish\",\r\n            \"approvalRequestedLanguages\": [\r\n                \"en\"\r\n            ]\r\n        },\r\n        {\r\n            \"namespace\": \"enterprise\",\r\n            \"resourceId\": \"{{FunctionDialogID}}\",\r\n            \"namespaceIds\": [],\r\n            \"resourceType\": \"dialog\",\r\n            \"versionComment\": \"Publish\",\r\n            \"approvalRequestedLanguages\": [\r\n                \"en\"\r\n            ]\r\n        },\r\n        {\r\n            \"namespace\": \"enterprise\",\r\n            \"resourceId\": \"{{KGTaskID}}\",\r\n            \"namespaceIds\": [],\r\n            \"resourceType\": \"knowledge\",\r\n            \"publishRoot\": true,\r\n            \"nodesToPublish\": []\r\n        },\r\n        {\r\n            \"resourceId\": \"smalltalk\",\r\n            \"resourceType\": \"smalltalk\",\r\n            \"approvalRequestedLanguages\": [\r\n                \"en\"\r\n            ],\r\n            \"namespace\": \"enterprise\"\r\n        },\r\n        {\r\n            \"resourceId\": \"NL\",\r\n            \"resourceType\": \"NL\",\r\n            \"modules\": [\r\n                \"nl_model\",\r\n                \"settings\"\r\n            ]\r\n        },\r\n        {\r\n            \"resourceId\": \"CHANNELS\",\r\n            \"resourceType\": \"CHANNELS\",\r\n            \"modules\": [\r\n                \"ivr\"\r\n            ]\r\n        },\r\n        {\r\n            \"resourceId\": \"EXTENSIONS\",\r\n            \"resourceType\": \"EXTENSIONS\",\r\n            \"modules\": [\r\n                \"botkit\",\r\n                \"agent_transfer\",\r\n                \"websdk\",\r\n                \"events\"\r\n            ]\r\n        },\r\n        {\r\n            \"resourceId\": \"SETTINGS\",\r\n            \"resourceType\": \"SETTINGS\",\r\n            \"modules\": [\r\n                \"general\",\r\n                \"bot_variables\",\r\n                \"pii\",\r\n                \"ivr\",\r\n                \"hold_resume\",\r\n                \"custom_script\",\r\n                \"advanced\"\r\n            ]\r\n        },\r\n        {\r\n            \"resourceId\": \"BOTLANGUAGES\",\r\n            \"resourceType\": \"BOTLANGUAGES\",\r\n            \"modules\": {\r\n                \"enabledLanguages\": [\r\n                    \"en\"\r\n                ]\r\n            }\r\n        }\r\n    ],\r\n    \"publishAllComponents\": true,\r\n    \"versionComment\": \"Publish\"\r\n}"
						},
						"url": {
							"raw": "{{url}}/api/{{version}}/builder/streams/{{SanityBotStreamId}}/standardpublish",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"{{version}}",
								"builder",
								"streams",
								"{{SanityBotStreamId}}",
								"standardpublish"
							]
						}
					},
					"response": []
				},
				{
					"name": "ChangeLogs",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"var data = JSON.parse(responseBody);\r",
									"var check=false\r",
									"_.forEach(data.btlogs,function (ind,value){\r",
									"if(ind.streamId === pm.environment.get('SanityBotStreamId')){\r",
									"    check=true;\r",
									"    tests[\"Entries that are being recorded in ChangeLogs are: \" +ind.message+ \".\"]=true;\r",
									"}\r",
									"if (data.btlogs.length == value+1){\r",
									"    if(check == false){\r",
									"    tests[\"Bot ChangeLogs are not recorded\"]=false;\r",
									"\r",
									"    }\r",
									"}\r",
									"\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "authority",
								"value": "staging-bots.korebots.com"
							},
							{
								"key": "x-timezone-offset",
								"value": "-330"
							},
							{
								"key": "authorization",
								"value": "bearer {{SanityAcToken1}}"
							},
							{
								"key": "state",
								"value": "configured"
							},
							{
								"key": "content-type",
								"value": "application/json;charset=UTF-8"
							},
							{
								"key": "accept",
								"value": "application/json, text/plain, */*"
							},
							{
								"key": "user-agent",
								"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.105 Safari/537.36"
							},
							{
								"key": "bot-language",
								"value": "{{Lang}}"
							},
							{
								"key": "accountid",
								"value": "{{SanityAccountID1}}"
							},
							{
								"key": "sec-fetch-site",
								"value": "same-origin"
							},
							{
								"key": "sec-fetch-mode",
								"value": "cors"
							},
							{
								"key": "sec-fetch-dest",
								"value": "empty"
							},
							{
								"key": "referer",
								"value": "https://staging-bots.korebots.com/botbuilder"
							},
							{
								"key": "accept-language",
								"value": "en-US,en;q=0.9"
							},
							{
								"key": "cookie",
								"value": "_ga=GA1.2.1918917934.1596810297; _gid=GA1.2.434737481.1596810297"
							}
						],
						"url": {
							"raw": "{{url}}/api/{{version}}/users/{{SanityUserID1}}/bt/{{SanityBotStreamId}}/getbtlogs?offset=0&limit=10",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"{{version}}",
								"users",
								"{{SanityUserID1}}",
								"bt",
								"{{SanityBotStreamId}}",
								"getbtlogs"
							],
							"query": [
								{
									"key": "offset",
									"value": "0"
								},
								{
									"key": "limit",
									"value": "10"
								}
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "1.14 RunTime_TaskExecution Copy",
			"item": [
				{
					"name": "InitialMessage",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"SanityfromId\", \"kore\" + parseInt(Math.random() * 1000000));",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"var body = JSON.parse(responseBody);",
									"var message=body.text",
									"tests[\"Response Contains: \" + message]= body.length !== 0",
									" "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "bearer {{SanityWebhookToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"message\": {\n        \"text\": \"Hi\"\n    },\n    \"from\": {\n        \"id\": \"{{SanityfromId}}\"\n    },\n    \"to\": {\n        \"id\": \"4321\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/chatbot/hooks/{{SanityBotStreamId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"chatbot",
								"hooks",
								"{{SanityBotStreamId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Input SmallTalk",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"    });",
									"var body = JSON.parse(responseBody);",
									"var message=body.text",
									"tests[\"Response Contains: \" + message]= body.length !== 0",
									"",
									"",
									"pm.test(\"The terminologies Internet, Intranet, and Extranet are used to define how the applications in the network can be accessed. They use similar TCP/IP technology but differ in terms of access levels for each user inside the network and outside the network.\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Internet\");",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "bearer {{SanityWebhookToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"message\": {\n        \"text\": \"difference between the Internet, Intranet, and Extranet?\"\n    },\n    \"from\": {\n        \"id\": \"{{SanityfromId}}\"\n    },\n    \"to\": {\n        \"id\": \"4321\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/chatbot/hooks/{{SanityBotStreamId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"chatbot",
								"hooks",
								"{{SanityBotStreamId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "InitialMessage_variableCheck",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"SanityfromId\", \"kore\" + parseInt(Math.random() * 1000000));",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"var body = JSON.parse(responseBody);",
									"var message=body.text",
									"tests[\"Response Contains: \" + message]= body.length !== 0",
									"",
									"pm.test(\"GLobal Variable defined is able to access at nodes\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Mumbai\");",
									"});",
									" "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "bearer {{SanityWebhookToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"message\": {\n        \"text\": \"variableCheck\"\n    },\n    \"from\": {\n        \"id\": \"{{SanityfromId}}\"\n    },\n    \"to\": {\n        \"id\": \"4321\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/chatbot/hooks/{{SanityBotStreamId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"chatbot",
								"hooks",
								"{{SanityBotStreamId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Input_FAQ",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"SanityfromId\", \"kore\" + parseInt(Math.random() * 1000000));",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"var body = JSON.parse(responseBody);",
									"var message=body.text",
									"tests[\"Response Contains: \" + message]= body.length !== 0",
									"",
									"pm.test(\"FAQ Response is available in the response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"You need to have admin access to verify the logs\");",
									"});",
									" "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "bearer {{SanityWebhookToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"message\": {\n        \"text\": \"How can i check the logs?\"\n    },\n    \"from\": {\n        \"id\": \"{{SanityfromId}}\"\n    },\n    \"to\": {\n        \"id\": \"4321\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/chatbot/hooks/{{SanityBotStreamId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"chatbot",
								"hooks",
								"{{SanityBotStreamId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Input_Discardall",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"var body = JSON.parse(responseBody);",
									"var message=body.text",
									"tests[\"Response Contains: \" + message]= body.length !== 0",
									"",
									"",
									" "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "bearer {{SanityWebhookToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"message\": {\n        \"text\": \"Discard all\"\n    },\n    \"from\": {\n        \"id\": \"{{SanityfromId}}\"\n    },\n    \"to\": {\n        \"id\": \"4321\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/chatbot/hooks/{{SanityBotStreamId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"chatbot",
								"hooks",
								"{{SanityBotStreamId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Input_FunctionCheck",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"SanityfromId\", \"kore\" + parseInt(Math.random() * 1000000));",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"var body = JSON.parse(responseBody);",
									"var message=body.text",
									"tests[\"Response Contains: \" + message]= body.length !== 0",
									"pm.test(\"Thanks. BotFunctions Validation is completed. is available in the response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"BotFunctions\");",
									"});",
									"",
									"",
									" "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "bearer {{SanityWebhookToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"message\": {\n        \"text\": \"FunctionCheck\"\n    },\n    \"from\": {\n        \"id\": \"{{SanityfromId}}\"\n    },\n    \"to\": {\n        \"id\": \"4321\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/chatbot/hooks/{{SanityBotStreamId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"chatbot",
								"hooks",
								"{{SanityBotStreamId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Input_InitialMessage",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"SanityfromId\", \"kore\" + parseInt(Math.random() * 1000000));",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"var body = JSON.parse(responseBody);",
									"var message=body.text",
									"tests[\"Response Contains: \" + message]= body.length !== 0",
									"",
									"",
									" "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "bearer {{SanityWebhookToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"message\": {\n        \"text\": \"hi\"\n    },\n    \"from\": {\n        \"id\": \"{{SanityfromId}}\"\n    },\n    \"to\": {\n        \"id\": \"4321\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/chatbot/hooks/{{SanityBotStreamId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"chatbot",
								"hooks",
								"{{SanityBotStreamId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Input_Discardall ",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"var body = JSON.parse(responseBody);",
									"var message=body.text",
									"tests[\"Response Contains: \" + message]= body.length !== 0",
									"",
									"",
									" "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "bearer {{SanityWebhookToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"message\": {\n        \"text\": \"Discard all\"\n    },\n    \"from\": {\n        \"id\": \"{{SanityfromId}}\"\n    },\n    \"to\": {\n        \"id\": \"4321\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/chatbot/hooks/{{SanityBotStreamId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"chatbot",
								"hooks",
								"{{SanityBotStreamId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Input_InitialMessage ",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"SanityfromId\", \"kore\" + parseInt(Math.random() * 1000000));",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"var body = JSON.parse(responseBody);",
									"var message=body.text",
									"tests[\"Response Contains: \" + message]= body.length !== 0",
									"",
									"",
									" "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "bearer {{SanityWebhookToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"message\": {\n        \"text\": \"hi\"\n    },\n    \"from\": {\n        \"id\": \"{{SanityfromId}}\"\n    },\n    \"to\": {\n        \"id\": \"4321\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/chatbot/hooks/{{SanityBotStreamId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"chatbot",
								"hooks",
								"{{SanityBotStreamId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Input_GetBalance",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"var body = JSON.parse(responseBody);",
									"var message=body.text",
									"tests[\"Response Contains: \" + message]= body.length !== 0",
									"pm.test(\"Please provide your account number is available in the response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Please provide your account number\");",
									"});",
									"",
									"",
									" "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "bearer {{SanityWebhookToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"message\": {\n        \"text\": \"GetBalance\"\n    },\n    \"from\": {\n        \"id\": \"{{SanityfromId}}\"\n    },\n    \"to\": {\n        \"id\": \"4321\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/chatbot/hooks/{{SanityBotStreamId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"chatbot",
								"hooks",
								"{{SanityBotStreamId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Input_ProvideNumber",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"    });",
									"var body = JSON.parse(responseBody);",
									"var message=body.text",
									"var reason=body.endReason",
									"tests[\"Response Contains: \" + message]= body.length !== 0",
									"if (reason)",
									"{ tests[\"Reason for Triggering End of Conversation event is :\" +reason]= body.length !== 0 }",
									"else",
									"{ tests[\"End of COnversation event is not triggered as the reason is not available :\" ]= body.length !== 0 }",
									"",
									"",
									"pm.test(\"Amount available in your account is 200 is available in the response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Amount available in your account is 200\");",
									"});",
									"pm.test(\"Webhook Channel Specific Override in EndOfConversation Event is available in the response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Webhook Channel Specific Override in EndOfConversation Event\");",
									"    ",
									"});",
									"",
									"pm.test(\"endReason is available in the response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"endReason\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "bearer {{SanityWebhookToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"message\": {\n        \"text\": \"200\"\n    },\n    \"from\": {\n        \"id\": \"{{SanityfromId}}\"\n    },\n    \"to\": {\n        \"id\": \"4321\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/chatbot/hooks/{{SanityBotStreamId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"chatbot",
								"hooks",
								"{{SanityBotStreamId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Input_Discardall  Copy",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"var body = JSON.parse(responseBody);",
									"var message=body.text",
									"tests[\"Response Contains: \" + message]= body.length !== 0",
									"",
									"",
									" "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "bearer {{SanityWebhookToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"message\": {\n        \"text\": \"Discard all\"\n    },\n    \"from\": {\n        \"id\": \"{{SanityfromId}}\"\n    },\n    \"to\": {\n        \"id\": \"4321\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/chatbot/hooks/{{SanityBotStreamId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"chatbot",
								"hooks",
								"{{SanityBotStreamId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Input_InitialMessage ",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"SanityfromId\", \"kore\" + parseInt(Math.random() * 1000000));",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"var body = JSON.parse(responseBody);",
									"var message=body.text",
									"tests[\"Response Contains: \" + message]= body.length !== 0",
									"",
									"",
									" "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "bearer {{SanityWebhookToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"message\": {\n        \"text\": \"hi\"\n    },\n    \"from\": {\n        \"id\": \"{{SanityfromId}}\"\n    },\n    \"to\": {\n        \"id\": \"4321\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/chatbot/hooks/{{SanityBotStreamId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"chatbot",
								"hooks",
								"{{SanityBotStreamId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Input_Using Pattern",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"var body = JSON.parse(responseBody);",
									"var message=body.text",
									"tests[\"Response Contains: \" + message]= body.length !== 0",
									"",
									"",
									" "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "bearer {{SanityWebhookToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"message\": {\n        \"text\": \"send me a mail\"\n    },\n    \"from\": {\n        \"id\": \"{{SanityfromId}}\"\n    },\n    \"to\": {\n        \"id\": \"4321\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/chatbot/hooks/{{SanityBotStreamId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"chatbot",
								"hooks",
								"{{SanityBotStreamId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Input_InitialMessage ",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"SanityfromId\", \"kore\" + parseInt(Math.random() * 1000000));",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"var body = JSON.parse(responseBody);",
									"var message=body.text",
									"tests[\"Response Contains: \" + message]= body.length !== 0",
									"",
									"",
									" "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "bearer {{SanityWebhookToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"message\": {\n        \"text\": \"hi\"\n    },\n    \"from\": {\n        \"id\": \"{{SanityfromId}}\"\n    },\n    \"to\": {\n        \"id\": \"4321\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/chatbot/hooks/{{SanityBotStreamId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"chatbot",
								"hooks",
								"{{SanityBotStreamId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Input_Using Synonyms",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"    });",
									"var body = JSON.parse(responseBody);",
									"var message=body.text",
									"var reason=body.endReason",
									"tests[\"Response Contains: \" + message]= body.length !== 0",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "bearer {{SanityWebhookToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"message\": {\n        \"text\": \"send mail to  a@a.com\"\n    },\n    \"from\": {\n        \"id\": \"{{SanityfromId}}\"\n    },\n    \"to\": {\n        \"id\": \"4321\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/chatbot/hooks/{{SanityBotStreamId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"chatbot",
								"hooks",
								"{{SanityBotStreamId}}"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "1.15 New Bot Import",
			"item": [
				{
					"name": "Bot Definition File Upload",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"var responseJson=JSON.parse(responseBody);",
									"var flag = 0;",
									"pm.test(\"File uploaded successfully\", function () {",
									"pm.expect(responseJson).to.have.property('fileId');",
									"flag=1;",
									"});",
									"if (flag === 0)",
									"    {",
									"    tests[\"file id does not exist\"] = false;",
									"    }else",
									"    {",
									"    tests[\"file id exists\"] = true;",
									"    }",
									"    ",
									"var responseJson=JSON.parse(responseBody);    ",
									"pm.environment.set(\"importbotdefid\", responseJson.fileId);",
									"",
									"var responseJson=JSON.parse(responseBody);",
									"var flag = 0;",
									"pm.test(\"File ID is generated\", function () {",
									"pm.expect(responseJson.fileId).to.equal(pm.environment.get('importbotdefid'));",
									"flag=1;",
									"});",
									"if (flag === 0)",
									"    {",
									"    tests[\"file Id is not generated\"] = false;",
									"    }else",
									"    {",
									"    tests[\"Bot definition ID is \" + pm.environment.get('importbotdefid')] = true;",
									"    }",
									"    ",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "auth",
								"value": "{{EERSJWT}}"
							},
							{
								"key": "Content-Type",
								"value": "multipart/form-data"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "/C:/Users/Public/Kiran_Projects/SmokeSuite/1.15 New Bot Import/botDefinition.json"
								},
								{
									"key": "fileContext",
									"value": "bulkImport",
									"type": "text"
								},
								{
									"key": "fileExtension",
									"value": "json",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/public/uploadfile",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"public",
								"uploadfile"
							]
						}
					},
					"response": []
				},
				{
					"name": "Bot Config File Upload",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"var responseJson=JSON.parse(responseBody);",
									"var flag = 0;",
									"pm.test(\"File uploaded successfully\", function () {",
									"pm.expect(responseJson).to.have.property('fileId');",
									"flag=1;",
									"});",
									"if (flag === 0)",
									"    {",
									"    tests[\"file id does not exist\"] = false;",
									"    }else",
									"    {",
									"    tests[\"file id exists\"] = true;",
									"    }",
									"    ",
									"var responseJson=JSON.parse(responseBody);    ",
									"pm.environment.set(\"importbotconfigid\", responseJson.fileId);",
									"",
									"var responseJson=JSON.parse(responseBody);",
									"var flag = 0;",
									"pm.test(\"File ID is generated\", function () {",
									"pm.expect(responseJson.fileId).to.equal(pm.environment.get('importbotconfigid'));",
									"flag=1;",
									"});",
									"if (flag === 0)",
									"    {",
									"    tests[\"file Id is not generated\"] = false;",
									"    }else",
									"    {",
									"    tests[\"Bot Config ID is \" + pm.environment.get('importbotconfigid')] = true;",
									"    }",
									"    ",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "auth",
								"value": "{{EERSJWT}}"
							},
							{
								"key": "Content-Type",
								"value": "multipart/form-data"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "/C:/Users/Public/Kiran_Projects/SmokeSuite/1.15 New Bot Import/config.json"
								},
								{
									"key": "fileContext",
									"value": "bulkImport",
									"type": "text"
								},
								{
									"key": "fileExtension",
									"value": "json",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/public/uploadfile",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"public",
								"uploadfile"
							]
						}
					},
					"response": []
				},
				{
					"name": "Bot Import",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"var responseJson = JSON.parse(responseBody);",
									"var status = responseJson.status;",
									"var flag = 0;",
									"pm.test(\"status is pending\", function () {",
									"    pm.expect(status).to.equal(\"pending\");",
									"    flag = 1;",
									"});",
									"if (flag === 0) {",
									"    tests[\"Status is not available\"] = false;",
									"} else {",
									"    tests[\"Status is pending\"] = true;",
									"}",
									"var responseJson = JSON.parse(responseBody);",
									"var statuslogs = responseJson.statusLogs[0].status;",
									"var flag = 0;",
									"pm.test(\"status logs--success\", function () {",
									"    pm.expect(statuslogs).to.equal(\"success\");",
									"    flag = 1;",
									"});",
									"if (flag === 0) {",
									"    tests[\"Status is not available\"] = false;",
									"} else {",
									"    tests[\"Status is success\"] = true;",
									"}",
									"",
									"var responseJson = JSON.parse(responseBody);",
									"var botname = responseJson.statusLogs[0].taskName;",
									"var flag = 0;",
									"pm.test(\"botname created\", function () {",
									"    pm.expect(botname).to.equal(pm.environment.get(\"SanityImportBot\"));",
									"    flag = 1;",
									"});",
									"if (flag === 0) {",
									"    tests[\"botname is not available\"] = false;",
									"} else {",
									"    tests[\"Bot name is\" + pm.environment.get(\"SanityImportBot\")] = true;",
									"}",
									"var responseJson = JSON.parse(responseBody);",
									"pm.environment.set(\"ImportRequestId1\", responseJson._id);",
									"",
									"var responseJson = JSON.parse(responseBody);",
									"var request = responseJson._id;",
									"var flag = 0;",
									"pm.test(\"Check Request ID\", function () {",
									"    pm.expect(request).to.equal(pm.environment.get(\"ImportRequestId1\"));",
									"    flag = 1;",
									"});",
									"if (flag === 0) {",
									"    tests[\"Request id does not exists\"] = false;",
									"} else {",
									"    tests[\"Request id is\" + pm.environment.get(\"ImportRequestId1\")] = true;",
									"}",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"postman.setEnvironmentVariable(\"SanityImportBot\", \"Importbot\" + parseInt(Math.random() * 1000000));\r",
									"postman.setEnvironmentVariable(\"SanityImportDesc\", \"Importbot\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "auth",
								"value": "{{EERSJWT}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\"botDefinition\" : \"{{importbotdefid}}\",\n\"configInfo\" : \"{{importbotconfigid}}\",\n\"icon\" : \"{{CreateBotIcon}}\",\n\"name\" : \"{{SanityImportBot}}\",\n\"purpose\" : \"customer\",\n\"color\" : \"{{CreateBotColor}}\"\n\n}"
						},
						"url": {
							"raw": "{{url}}/api/public/bot/import",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"public",
								"bot",
								"import"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Import Status",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"var responseJson = JSON.parse(responseBody);\r",
									"var requestid = responseJson._id;\r",
									"var flag = 0;\r",
									"pm.test(\"validate Request _id\", function () {\r",
									"    pm.expect(requestid).to.equal(pm.environment.get(\"ImportRequestId1\"));\r",
									"    flag = 1;\r",
									"});\r",
									"if (flag === 0) {\r",
									"    tests[\"Status is not available\"] = false;\r",
									"} else {\r",
									"    tests[\"Request Id is Matching\" + \"with\" + pm.environment.get(\"ImportRequestId1\")] = true;\r",
									"}\r",
									"\r",
									"var responseJson = JSON.parse(responseBody);\r",
									"var status = responseJson.status;\r",
									"var flag = 0;\r",
									"pm.test(\"status is Success\", function () {\r",
									"    pm.expect(status).to.equal(\"success\");\r",
									"    flag = 1;\r",
									"});\r",
									"if (flag === 0) {\r",
									"    tests[\"Status is failed\"] = false;\r",
									"} else {\r",
									"    tests[\"Bot import is success\"] = true;\r",
									"}\r",
									"var responseJson = JSON.parse(responseBody);\r",
									"pm.environment.set(\"ImportstreamId1\", responseJson.streamId);\r",
									"\r",
									"var responseJson = JSON.parse(responseBody);\r",
									"var streamid = responseJson.streamId;\r",
									"var flag = 0;\r",
									"pm.test(\"validate streamId\", function () {\r",
									"    pm.expect(streamid).to.equal(pm.environment.get(\"ImportstreamId1\"));\r",
									"    flag = 1;\r",
									"});\r",
									"if (flag === 0) {\r",
									"    tests[\"Status is not available\"] = false;\r",
									"} else {\r",
									"    tests[\"StreamId is Matching\" + \"with\" + pm.environment.get(\"ImporttreamId1\")] = true;\r",
									"}\r",
									"var responseJson = JSON.parse(responseBody);\r",
									"var botname = responseJson.statusLogs[0].taskName;\r",
									"var flag = 0;\r",
									"pm.test(\"botname created\", function () {\r",
									"    pm.expect(botname).to.equal(pm.environment.get(\"SanityImportBot\"));\r",
									"    flag = 1;\r",
									"});\r",
									"if (flag === 0) {\r",
									"    tests[\"botname is not available\"] = false;\r",
									"} else {\r",
									"    tests[\"Bot name is\" + pm.environment.get(\"SanityImportBot\")] = true;\r",
									"}\r",
									"\r",
									"var responseJson = JSON.parse(responseBody);\r",
									"pm.environment.set(\"Importbotrefid\",responseJson.streamRefId);\r",
									"tests[\"ImportBotrefid is\" + pm.environment.get(\"Importbotrefid\")] = true;\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"    function delay(ms) {\r",
									"        var cur_d = new Date();\r",
									"        var cur_ticks = cur_d.getTime();\r",
									"        var ms_passed = 0;\r",
									"        while(ms_passed < ms) {\r",
									"            var d = new Date();  // Possible memory leak?\r",
									"            var ticks = d.getTime();\r",
									"            ms_passed = ticks - cur_ticks;\r",
									"        }\r",
									"    }\r",
									"    delay(4000);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "auth",
								"value": "{{EERSJWT}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{url}}/api/public/bot/import/status/{{ImportRequestId1}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"public",
								"bot",
								"import",
								"status",
								"{{ImportRequestId1}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "CreateApp",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"var data = JSON.parse(responseBody);\r",
									"pm.environment.set(\"Import1stream\", data.appName);\r",
									"pm.test(\"AppName is available in the response\", function () {\r",
									"    var responseJson = JSON.parse(responseBody);\r",
									"    var app = responseJson.appName;\r",
									"    pm.expect(app).to.equal(pm.environment.get(\"Import1stream\"));\r",
									"});\r",
									"pm.environment.set(\"Import1streamClientId1\", data.clientId);\r",
									"pm.test(\"ClientID is available in the response\", function () {\r",
									"    var responseJson = JSON.parse(responseBody);\r",
									"    var id = responseJson.clientId;\r",
									"    pm.expect(id).to.equal(pm.environment.get(\"Import1streamClientId1\"));\r",
									"});\r",
									"pm.environment.set(\"Import1streamClientSecret1\", data.clientSecret);\r",
									"pm.test(\"ClientSecret is available in the response\", function () {\r",
									"    var responseJson = JSON.parse(responseBody);\r",
									"    var secret = responseJson.clientSecret;\r",
									"    pm.expect(secret).to.equal(pm.environment.get(\"Import1streamClientSecret1\"));\r",
									"});\r",
									"tests[\"ClientID for created app is : \" + data.clientId] = true;\r",
									"tests[\"clientSecret for created app is : \" + data.clientSecret] = true;\r",
									"tests[\"AppName is : \" + data.appName] = true;\r",
									"\r",
									"pm.test(\"AppName available in the response \", function () {\r",
									"    var responseJson = JSON.parse(responseBody);\r",
									"    var name = responseJson.appName;\r",
									"    pm.expect(name).to.equal(pm.environment.get(\"Import1stream\"));\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"Import1stream\", \"Import2\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Connection",
								"value": "keep-alive"
							},
							{
								"key": "X-Timezone-Offset",
								"value": "-330"
							},
							{
								"key": "Authorization",
								"value": "bearer {{SanityAcToken1}}"
							},
							{
								"key": "state",
								"value": "configured"
							},
							{
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8"
							},
							{
								"key": "Accept",
								"value": "application/json, text/plain, */*"
							},
							{
								"key": "User-Agent",
								"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.138 Safari/537.36"
							},
							{
								"key": "bot-language",
								"value": "{{Lang}}"
							},
							{
								"key": "AccountId",
								"value": "{{SanityAccountID1}}"
							},
							{
								"key": "Origin",
								"value": "https://qa1-bots.kore.ai"
							},
							{
								"key": "Sec-Fetch-Site",
								"value": "same-origin"
							},
							{
								"key": "Sec-Fetch-Mode",
								"value": "cors"
							},
							{
								"key": "Sec-Fetch-Dest",
								"value": "empty"
							},
							{
								"key": "Referer",
								"value": "https://qa1-bots.kore.ai/botbuilder"
							},
							{
								"key": "Accept-Language",
								"value": "en-US,en;q=0.9"
							},
							{
								"key": "Cookie",
								"value": "_ga=GA1.2.911535481.1586497890; __hs_opt_out=no; hubspotutk=c8a344e15c1a384e2645eafb285bf05a; _vwo_uuid_v2=DA136D087CC5B2A2663395C6EECED51A9|065feef042135d1a68a721dae7548c94; _gcl_au=1.1.747703786.1586774907; _vis_opt_s=2%7C; __hssrc=1; _gid=GA1.2.1823592650.1589179004; __hstc=59894770.c8a344e15c1a384e2645eafb285bf05a.1586497890226.1589179012271.1589203884380.86"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"appName\": \"{{Import1stream}}\",\n    \"scope\": [],\n    \"pushNotifications\": {\n        \"enable\": false,\n        \"webhookUrl\": \"\"\n    },\n    \"algorithm\": \"HS256\",\n    \"bots\": [\n        \"{{ImportstreamId1}}\"\n    ]\n}"
						},
						"url": {
							"raw": "{{url}}/api/{{version}}/users/{{SanityUserID1}}/streams/{{ImportstreamId1}}/sdk/apps",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"{{version}}",
								"users",
								"{{SanityUserID1}}",
								"streams",
								"{{ImportstreamId1}}",
								"sdk",
								"apps"
							]
						}
					},
					"response": []
				},
				{
					"name": "Enable_WebHookChannel",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Webhook Channel Is enabled\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Webhook\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "authority",
								"value": "staging-bots.korebots.com"
							},
							{
								"key": "x-timezone-offset",
								"value": "-330"
							},
							{
								"key": "authorization",
								"value": "bearer {{SanityAcToken1}}"
							},
							{
								"key": "state",
								"value": "configured"
							},
							{
								"key": "content-type",
								"value": "application/json;charset=UTF-8"
							},
							{
								"key": "accept",
								"value": "application/json, text/plain, */*"
							},
							{
								"key": "user-agent",
								"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.105 Safari/537.36"
							},
							{
								"key": "bot-language",
								"value": "{{Lang}}"
							},
							{
								"key": "accountid",
								"value": "{{SanityAccountID1}}"
							},
							{
								"key": "origin",
								"value": "https://staging-bots.korebots.com"
							},
							{
								"key": "sec-fetch-site",
								"value": "same-origin"
							},
							{
								"key": "sec-fetch-mode",
								"value": "cors"
							},
							{
								"key": "sec-fetch-dest",
								"value": "empty"
							},
							{
								"key": "referer",
								"value": "{{url}}/botbuilder"
							},
							{
								"key": "accept-language",
								"value": "en-US,en;q=0.9"
							},
							{
								"key": "cookie",
								"value": "_ga=GA1.2.1918917934.1596810297; _gid=GA1.2.434737481.1596810297"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"app\": {\r\n        \"clientId\": \"{{Import1streamClientId1}}\",\r\n        \"appName\": \"{{Import1streamClientSecret1}}\"\r\n    },\r\n    \"displayName\": \"Webhook\",\r\n    \"type\": \"ivr\",\r\n    \"isAsync\": false,\r\n    \"enable\": true,\r\n    \"createInstance\": true\r\n}"
						},
						"url": {
							"raw": "{{url}}/api/{{version}}/users/{{SanityUserID1}}/builder/streams/{{ImportstreamId1}}/channels/ivr",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"{{version}}",
								"users",
								"{{SanityUserID1}}",
								"builder",
								"streams",
								"{{ImportstreamId1}}",
								"channels",
								"ivr"
							]
						}
					},
					"response": []
				},
				{
					"name": "GenerateJWT",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var data=JSON.parse(responseBody)\r",
									"pm.environment.set(\"ImportWebhookToken\",data.jwt)\r",
									"tests[\"Generated JWT token is: \" +data.jwt+ \"\"]=true;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\"clientId\": \"{{Import1streamClientId1}}\",\n\"clientSecret\": \"{{Import1streamClientSecret1}}\",\n\"identity\": \"{{SanityUserID1}}\",\n\"aud\": \"\",\n\"isAnonymous\": false\n}"
						},
						"url": {
							"raw": "https://mk2r2rmj21.execute-api.us-east-1.amazonaws.com/dev/users/sts",
							"protocol": "https",
							"host": [
								"mk2r2rmj21",
								"execute-api",
								"us-east-1",
								"amazonaws",
								"com"
							],
							"path": [
								"dev",
								"users",
								"sts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Fetchingdialog id's and names",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var data = JSON.parse(responseBody);\r",
									"var check = false;\r",
									"_.forEach(data, function (ind, value) {\r",
									"    if (check=true) {\r",
									"    dialogId=value+1\r",
									"        pm.environment.set(\"IBdc\"+dialogId,ind._id);\r",
									"        tests[\"dialog Components are available and they are : \" +ind._id+ \"\"] = true;\r",
									"    }\r",
									"});\r",
									"if (!check) {\r",
									"    tests[\"dialog components are not available in the response\"] = false;\r",
									"}\r",
									"\r",
									"var data = JSON.parse(responseBody);\r",
									"var check = false;\r",
									"_.forEach(data, function (ind, value) {\r",
									"    if (check=true) {\r",
									"    dialogId=value+1\r",
									"        pm.environment.set(\"IBdg\"+dialogId,ind.dialogId);\r",
									"        tests[\"dialog ids are available and they are : \" +ind.dialogId+ \"\"] = true;\r",
									"    }\r",
									"});\r",
									"if (!check) {\r",
									"    tests[\"dialog ids are not available in the response\"] = false;\r",
									"}\r",
									"\r",
									"\r",
									"var data = JSON.parse(responseBody);\r",
									"var check = false;\r",
									"_.forEach(data, function (ind, value) {\r",
									"    if (check=true) {\r",
									"    dialogId=value+1\r",
									"        pm.environment.set(\"IBtask\"+dialogId,ind.name);\r",
									"        tests[\"Intent names are available and they are : \" +ind.name+ \"\"] = true;\r",
									"    }\r",
									"});\r",
									"if (!check) {\r",
									"    tests[\"Intent names are not available in the response\"] = false;\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "authority",
								"value": "staging-bots.korebots.com"
							},
							{
								"key": "x-timezone-offset",
								"value": "-330"
							},
							{
								"key": "authorization",
								"value": "bearer {{SanityAcToken1}}"
							},
							{
								"key": "state",
								"value": "configured"
							},
							{
								"key": "content-type",
								"value": "application/json;charset=UTF-8"
							},
							{
								"key": "accept",
								"value": "application/json, text/plain, */*"
							},
							{
								"key": "user-agent",
								"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.105 Safari/537.36"
							},
							{
								"key": "bot-language",
								"value": "en"
							},
							{
								"key": "accountid",
								"value": "{{SanityAccountID1}}"
							},
							{
								"key": "sec-fetch-site",
								"value": "same-origin"
							},
							{
								"key": "sec-fetch-mode",
								"value": "cors"
							},
							{
								"key": "sec-fetch-dest",
								"value": "empty"
							},
							{
								"key": "referer",
								"value": "{{url}}/botbuilder"
							},
							{
								"key": "accept-language",
								"value": "en-US,en;q=0.9"
							},
							{
								"key": "cookie",
								"value": "_ga=GA1.2.56645577.1596813294; _gid=GA1.2.113920096.1596813294"
							}
						],
						"url": {
							"raw": "{{url}}/api/{{version}}/builder/streams/{{ImportstreamId1}}/components?type=intent&status=configured",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"{{version}}",
								"builder",
								"streams",
								"{{ImportstreamId1}}",
								"components"
							],
							"query": [
								{
									"key": "type",
									"value": "intent"
								},
								{
									"key": "status",
									"value": "configured"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Bot Publish",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Import bot is published successfully\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "authority",
								"value": "staging-bots.korebots.com"
							},
							{
								"key": "x-timezone-offset",
								"value": "-330"
							},
							{
								"key": "authorization",
								"value": "bearer {{SanityAcToken1}}"
							},
							{
								"key": "state",
								"value": "configured"
							},
							{
								"key": "content-type",
								"value": "application/json;charset=UTF-8"
							},
							{
								"key": "accept",
								"value": "application/json, text/plain, */*"
							},
							{
								"key": "user-agent",
								"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.105 Safari/537.36"
							},
							{
								"key": "bot-language",
								"value": "en"
							},
							{
								"key": "accountid",
								"value": "{{SanityAccountID1}}"
							},
							{
								"key": "origin",
								"value": "{{url}}"
							},
							{
								"key": "sec-fetch-site",
								"value": "same-origin"
							},
							{
								"key": "sec-fetch-mode",
								"value": "cors"
							},
							{
								"key": "sec-fetch-dest",
								"value": "empty"
							},
							{
								"key": "referer",
								"value": "{{url}}/botbuilder"
							},
							{
								"key": "accept-language",
								"value": "en-US,en;q=0.9"
							},
							{
								"key": "cookie",
								"value": "_ga=GA1.2.1849430234.1597040966; _gid=GA1.2.152439828.1597040966"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"resources\": [\r\n        {\r\n            \"namespace\": \"enterprise\",\r\n            \"resourceId\": \"{{IBdg1}}\",\r\n            \"namespaceIds\": [],\r\n            \"resourceType\": \"dialog\",\r\n            \"versionComment\": \"Test\",\r\n            \"approvalRequestedLanguages\": [\r\n                \"en\"\r\n                \r\n            ]\r\n        },\r\n        {\r\n            \"resourceId\": \"smalltalk\",\r\n            \"resourceType\": \"smalltalk\",\r\n            \"approvalRequestedLanguages\": [\r\n                \"en\"\r\n                \r\n            ],\r\n            \"namespace\": \"enterprise\"\r\n        },\r\n        {\r\n            \"resourceId\": \"NL\",\r\n            \"resourceType\": \"NL\",\r\n            \"modules\": [\r\n                \"nl_model\",\r\n                \"settings\"\r\n            ]\r\n        },\r\n        {\r\n            \"resourceId\": \"CHANNELS\",\r\n            \"resourceType\": \"CHANNELS\",\r\n            \"modules\": [\r\n                \"ivr\"\r\n            ]\r\n        },\r\n        {\r\n            \"resourceId\": \"EXTENSIONS\",\r\n            \"resourceType\": \"EXTENSIONS\",\r\n            \"modules\": [\r\n                \"botkit\",\r\n                \"agent_transfer\",\r\n                \"websdk\",\r\n                \"events\"\r\n            ]\r\n        },\r\n        {\r\n            \"resourceId\": \"SETTINGS\",\r\n            \"resourceType\": \"SETTINGS\",\r\n            \"modules\": [\r\n                \"general\",\r\n                \"bot_variables\",\r\n                \"pii\",\r\n                \"ivr\",\r\n                \"hold_resume\",\r\n                \"custom_script\",\r\n                \"advanced\"\r\n            ]\r\n        },\r\n        {\r\n            \"resourceId\": \"BOTLANGUAGES\",\r\n            \"resourceType\": \"BOTLANGUAGES\",\r\n            \"modules\": {\r\n                \"enabledLanguages\": [\r\n                    \"en\"\r\n                    \r\n                ]\r\n            }\r\n        }\r\n    ],\r\n    \"publishAllComponents\": true,\r\n    \"versionComment\": \"Test\"\r\n}"
						},
						"url": {
							"raw": "{{url}}/api/{{version}}/builder/streams/{{ImportstreamId1}}/standardpublish",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"{{version}}",
								"builder",
								"streams",
								"{{ImportstreamId1}}",
								"standardpublish"
							]
						}
					},
					"response": []
				},
				{
					"name": "InitialMessage ",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"SanityfromId\", \"kore\" + parseInt(Math.random() * 1000000));",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"var body = JSON.parse(responseBody);",
									"var message=body.text",
									"tests[\"Response Contains: \" + message]= body.length !== 0",
									" "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "bearer {{ImportWebhookToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"message\": {\n        \"text\": \"Hi\"\n    },\n    \"from\": {\n        \"id\": \"{{SanityfromId}}\"\n    },\n    \"to\": {\n        \"id\": \"4321\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/chatbot/hooks/{{ImportstreamId1}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"chatbot",
								"hooks",
								"{{ImportstreamId1}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Input_Language",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"var body = JSON.parse(responseBody);",
									"var message=body.text",
									"tests[\"Response Contains: \" + message]= body.length !== 0",
									"// pm.test(\"Intent Not Found response is displayed\", function () {",
									"//     pm.expect(pm.response.text()).to.include(\"I am unable to find an answer\");",
									"// });",
									" "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "bearer {{ImportWebhookToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"message\": {\n        \"text\": \"English\"\n    },\n    \"from\": {\n        \"id\": \"{{SanityfromId}}\"\n    },\n    \"to\": {\n        \"id\": \"4321\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/chatbot/hooks/{{ImportstreamId1}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"chatbot",
								"hooks",
								"{{ImportstreamId1}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Input-Task",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"var body = JSON.parse(responseBody);",
									"var message=body.text",
									"tests[\"Response Contains: \" + message]= body.length !== 0",
									"pm.test(\"Please provide your mail: is available in the response \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Please provide your mail\");",
									"});",
									" ",
									" "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "bearer {{ImportWebhookToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"message\": {\n        \"text\": \"Simple message task\"\n    },\n    \"from\": {\n        \"id\": \"{{SanityfromId}}\"\n    },\n    \"to\": {\n        \"id\": \"4321\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/chatbot/hooks/{{ImportstreamId1}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"chatbot",
								"hooks",
								"{{ImportstreamId1}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Input-EntityValue",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"var body = JSON.parse(responseBody);",
									"var message=body.text",
									"tests[\"Response Contains: \" + message]= body.length !== 0",
									"pm.test(\"Thanks for Providing your email id: is available in the response \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Thanks for Providing your email id\");",
									"});",
									" "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "bearer {{ImportWebhookToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"message\": {\n        \"text\": \"a@a.com\"\n    },\n    \"from\": {\n        \"id\": \"{{SanityfromId}}\"\n    },\n    \"to\": {\n        \"id\": \"4321\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/chatbot/hooks/{{ImportstreamId1}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"chatbot",
								"hooks",
								"{{ImportstreamId1}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Enable Spanish Language",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Language Enabled Successfully\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"dialogs are added\", function () {\r",
									"    var responseJson = JSON.parse(responseBody);\r",
									"    var dialog = responseJson.dialogs;\r",
									"    pm.expect(dialog).to.equal(1);\r",
									"});\r",
									"\r",
									"pm.test(\"Small talk is added\", function () {\r",
									"    var responseJson = JSON.parse(responseBody);\r",
									"    var smalltalk = responseJson.smallTalk;\r",
									"    pm.expect(smalltalk).to.equal(1);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "authority",
								"value": "staging-bots.korebots.com"
							},
							{
								"key": "x-timezone-offset",
								"value": "-330"
							},
							{
								"key": "authorization",
								"value": "bearer {{SanityAcToken1}}"
							},
							{
								"key": "state",
								"value": "configured"
							},
							{
								"key": "content-type",
								"value": "application/json;charset=UTF-8"
							},
							{
								"key": "accept",
								"value": "application/json, text/plain, */*"
							},
							{
								"key": "user-agent",
								"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.105 Safari/537.36"
							},
							{
								"key": "bot-language",
								"value": "en"
							},
							{
								"key": "accountid",
								"value": "{{SanityAccountID1}}"
							},
							{
								"key": "origin",
								"value": "{{url}}"
							},
							{
								"key": "sec-fetch-site",
								"value": "same-origin"
							},
							{
								"key": "sec-fetch-mode",
								"value": "cors"
							},
							{
								"key": "sec-fetch-dest",
								"value": "empty"
							},
							{
								"key": "referer",
								"value": "{{url}}/botbuilder"
							},
							{
								"key": "accept-language",
								"value": "en-US,en;q=0.9"
							},
							{
								"key": "cookie",
								"value": "_ga=GA1.2.1849430234.1597040966; _gid=GA1.2.152439828.1597040966"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{}"
						},
						"url": {
							"raw": "{{url}}/api/{{version}}/builder/streams/{{ImportstreamId1}}/supportedLanguage?language=es",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"{{version}}",
								"builder",
								"streams",
								"{{ImportstreamId1}}",
								"supportedLanguage"
							],
							"query": [
								{
									"key": "language",
									"value": "es"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Bot Publish Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Import bot is published successfully\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "authority",
								"value": "staging-bots.korebots.com"
							},
							{
								"key": "x-timezone-offset",
								"value": "-330"
							},
							{
								"key": "authorization",
								"value": "bearer {{SanityAcToken1}}"
							},
							{
								"key": "state",
								"value": "configured"
							},
							{
								"key": "content-type",
								"value": "application/json;charset=UTF-8"
							},
							{
								"key": "accept",
								"value": "application/json, text/plain, */*"
							},
							{
								"key": "user-agent",
								"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.105 Safari/537.36"
							},
							{
								"key": "bot-language",
								"value": "en"
							},
							{
								"key": "accountid",
								"value": "{{SanityAccountID1}}"
							},
							{
								"key": "origin",
								"value": "{{url}}"
							},
							{
								"key": "sec-fetch-site",
								"value": "same-origin"
							},
							{
								"key": "sec-fetch-mode",
								"value": "cors"
							},
							{
								"key": "sec-fetch-dest",
								"value": "empty"
							},
							{
								"key": "referer",
								"value": "{{url}}/botbuilder"
							},
							{
								"key": "accept-language",
								"value": "en-US,en;q=0.9"
							},
							{
								"key": "cookie",
								"value": "_ga=GA1.2.1849430234.1597040966; _gid=GA1.2.152439828.1597040966"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"resources\": [\r\n        {\r\n            \"namespace\": \"enterprise\",\r\n            \"resourceId\": \"{{IBdg1}}\",\r\n            \"namespaceIds\": [],\r\n            \"resourceType\": \"dialog\",\r\n            \"versionComment\": \"Test\",\r\n            \"approvalRequestedLanguages\": [\r\n                \"en\",\r\n                \"es\"\r\n            ]\r\n        },\r\n        {\r\n            \"resourceId\": \"smalltalk\",\r\n            \"resourceType\": \"smalltalk\",\r\n            \"approvalRequestedLanguages\": [\r\n                \"en\",\r\n                \"es\"\r\n            ],\r\n            \"namespace\": \"enterprise\"\r\n        },\r\n        {\r\n            \"resourceId\": \"NL\",\r\n            \"resourceType\": \"NL\",\r\n            \"modules\": [\r\n                \"nl_model\",\r\n                \"settings\"\r\n            ]\r\n        },\r\n        {\r\n            \"resourceId\": \"CHANNELS\",\r\n            \"resourceType\": \"CHANNELS\",\r\n            \"modules\": [\r\n                \"ivr\"\r\n            ]\r\n        },\r\n        {\r\n            \"resourceId\": \"EXTENSIONS\",\r\n            \"resourceType\": \"EXTENSIONS\",\r\n            \"modules\": [\r\n                \"botkit\",\r\n                \"agent_transfer\",\r\n                \"websdk\",\r\n                \"events\"\r\n            ]\r\n        },\r\n        {\r\n            \"resourceId\": \"SETTINGS\",\r\n            \"resourceType\": \"SETTINGS\",\r\n            \"modules\": [\r\n                \"general\",\r\n                \"bot_variables\",\r\n                \"pii\",\r\n                \"ivr\",\r\n                \"hold_resume\",\r\n                \"custom_script\",\r\n                \"advanced\"\r\n            ]\r\n        },\r\n        {\r\n            \"resourceId\": \"BOTLANGUAGES\",\r\n            \"resourceType\": \"BOTLANGUAGES\",\r\n            \"modules\": {\r\n                \"enabledLanguages\": [\r\n                    \"en\",\r\n                    \"es\"\r\n                ]\r\n            }\r\n        }\r\n    ],\r\n    \"publishAllComponents\": true,\r\n    \"versionComment\": \"Test\"\r\n}"
						},
						"url": {
							"raw": "{{url}}/api/{{version}}/builder/streams/{{ImportstreamId1}}/standardpublish",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"{{version}}",
								"builder",
								"streams",
								"{{ImportstreamId1}}",
								"standardpublish"
							]
						}
					},
					"response": []
				},
				{
					"name": "Published-Fetchingdialog id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var data = JSON.parse(responseBody);\r",
									"var check = false;\r",
									"_.forEach(data, function (ind, value) {\r",
									"    if (check=true) {\r",
									"    dialogId=value+1\r",
									"        pm.environment.set(\"PublishedIBdc\"+dialogId,ind._id);\r",
									"        tests[\"Published dialog Components are available and they are : \" +ind._id+ \"\"] = true;\r",
									"    }\r",
									"});\r",
									"if (!check) {\r",
									"    tests[\"Published dialog components are not available in the response\"] = false;\r",
									"}\r",
									"\r",
									"var data = JSON.parse(responseBody);\r",
									"var check = false;\r",
									"_.forEach(data, function (ind, value) {\r",
									"    if (check=true) {\r",
									"    dialogId=value+1\r",
									"        pm.environment.set(\"PublishedIBdg\"+dialogId,ind.dialogId);\r",
									"        tests[\"Publisheddialog ids are available and they are : \" +ind.dialogId+ \"\"] = true;\r",
									"    }\r",
									"});\r",
									"if (!check) {\r",
									"    tests[\"Published dialog ids are not available in the response\"] = false;\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "authority",
								"value": "staging-bots.korebots.com"
							},
							{
								"key": "x-timezone-offset",
								"value": "-330"
							},
							{
								"key": "authorization",
								"value": "bearer {{SanityAcToken1}}"
							},
							{
								"key": "state",
								"value": "configured"
							},
							{
								"key": "content-type",
								"value": "application/json;charset=UTF-8"
							},
							{
								"key": "accept",
								"value": "application/json, text/plain, */*"
							},
							{
								"key": "user-agent",
								"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.105 Safari/537.36"
							},
							{
								"key": "bot-language",
								"value": "en"
							},
							{
								"key": "accountid",
								"value": "{{SanityAccountID1}}"
							},
							{
								"key": "sec-fetch-site",
								"value": "same-origin"
							},
							{
								"key": "sec-fetch-mode",
								"value": "cors"
							},
							{
								"key": "sec-fetch-dest",
								"value": "empty"
							},
							{
								"key": "referer",
								"value": "{{url}}/botbuilder"
							},
							{
								"key": "accept-language",
								"value": "en-US,en;q=0.9"
							},
							{
								"key": "cookie",
								"value": "_ga=GA1.2.56645577.1596813294; _gid=GA1.2.113920096.1596813294"
							}
						],
						"url": {
							"raw": "{{url}}/api/{{version}}/builder/streams/{{ImportstreamId1}}/components?type=intent&status=published",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"{{version}}",
								"builder",
								"streams",
								"{{ImportstreamId1}}",
								"components"
							],
							"query": [
								{
									"key": "type",
									"value": "intent"
								},
								{
									"key": "status",
									"value": "published"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "SuspendTasks",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Task is Suspended successfully\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "authority",
								"value": "staging-bots.korebots.com"
							},
							{
								"key": "authorization",
								"value": "bearer {{botadminaccesstokenuser1}}"
							},
							{
								"key": "x-timezone-offset",
								"value": "-330"
							},
							{
								"key": "requester-type",
								"value": "admin"
							},
							{
								"key": "content-type",
								"value": "application/json;charset=UTF-8"
							},
							{
								"key": "user-agent",
								"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.105 Safari/537.36"
							},
							{
								"key": "x-http-method-override",
								"value": "PUT"
							},
							{
								"key": "accountid",
								"value": "{{SanityAccountID1}}"
							},
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "origin",
								"value": "{{url}}"
							},
							{
								"key": "sec-fetch-site",
								"value": "same-origin"
							},
							{
								"key": "sec-fetch-mode",
								"value": "cors"
							},
							{
								"key": "sec-fetch-dest",
								"value": "empty"
							},
							{
								"key": "referer",
								"value": "{{url}}/admin/"
							},
							{
								"key": "accept-language",
								"value": "en-US,en;q=0.9"
							},
							{
								"key": "cookie",
								"value": "_ga=GA1.2.1918917934.1596810297; _gid=GA1.2.434737481.1596810297"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\r\n    {\r\n        \"status\": \"suspended\",\r\n        \"dialogId\": \"{{PublishedIBdg1}}\"\r\n    }\r\n]"
						},
						"url": {
							"raw": "{{url}}/api/{{version}}/organization/{{SanityOrgId1}}/workflows/updateTaskStatus",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"{{version}}",
								"organization",
								"{{SanityOrgId1}}",
								"workflows",
								"updateTaskStatus"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Created Bot",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Imported bot is deleted successfully\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Connection",
								"value": "keep-alive"
							},
							{
								"key": "X-Timezone-Offset",
								"value": "-330"
							},
							{
								"key": "Authorization",
								"value": "bearer {{SanityAcToken1}}"
							},
							{
								"key": "state",
								"value": "configured"
							},
							{
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8"
							},
							{
								"key": "Accept",
								"value": "application/json, text/plain, */*"
							},
							{
								"key": "bot-language",
								"value": "en"
							},
							{
								"key": "User-Agent",
								"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.138 Safari/537.36"
							},
							{
								"key": "X-HTTP-Method-Override",
								"value": "delete"
							},
							{
								"key": "AccountId",
								"value": "{{SanityAccountID1}}"
							},
							{
								"key": "Origin",
								"value": "{{url}}"
							},
							{
								"key": "Sec-Fetch-Site",
								"value": "same-origin"
							},
							{
								"key": "Sec-Fetch-Mode",
								"value": "cors"
							},
							{
								"key": "Sec-Fetch-Dest",
								"value": "empty"
							},
							{
								"key": "Referer",
								"value": "{{url}}/botbuilder"
							},
							{
								"key": "Accept-Language",
								"value": "en-US,en;q=0.9"
							},
							{
								"key": "Cookie",
								"value": "_ga=GA1.2.544935457.1580188389; __hs_opt_out=yes; _gid=GA1.2.1583365579.1589694244"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{}"
						},
						"url": {
							"raw": "{{url}}/api/{{version}}/users/{{SanityUserID1}}/builder/streams/{{ImportstreamId1}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"{{version}}",
								"users",
								"{{SanityUserID1}}",
								"builder",
								"streams",
								"{{ImportstreamId1}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Check Deleted Bot",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"    function delay(ms) {\r",
									"        var cur_d = new Date();\r",
									"        var cur_ticks = cur_d.getTime();\r",
									"        var ms_passed = 0;\r",
									"        while(ms_passed < ms) {\r",
									"            var d = new Date();  // Possible memory leak?\r",
									"            var ticks = d.getTime();\r",
									"            ms_passed = ticks - cur_ticks;\r",
									"        }\r",
									"    }\r",
									"    delay(5000);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get Streams is successful\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var data = JSON.parse(responseBody);",
									"var check = false;",
									"",
									"_.forEach(data,function(ind,value){",
									"   ",
									"   if(ind.name === postman.getEnvironmentVariable(\"Import1stream\")){",
									"       ",
									"       postman.setEnvironmentVariable(\"IssstreamId\", ind._id);",
									"       check = true;",
									"       tests[\"StreamID found\"] = responseCode.code === 100;",
									"   }",
									"    ",
									"});",
									"",
									"",
									"if(!check){",
									"    ",
									"    tests[\"Stream ID not found\"] = responseCode.code === 200;",
									"}",
									"",
									"tests[\"EndofTest\"] = true;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "bearer {{SanityAcToken1}}"
							},
							{
								"key": "accountid",
								"value": "{{SanityAccountID1}}"
							},
							{
								"key": "user-agent",
								"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/63.0.3239.132 Safari/537.36"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "bot-language",
								"value": "{{Lang}}"
							},
							{
								"key": "Connection",
								"value": "keep-alive"
							}
						],
						"url": {
							"raw": "{{url}}/api/1.1/users/{{SanityUserID1}}/builder/streams",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"1.1",
								"users",
								"{{SanityUserID1}}",
								"builder",
								"streams"
							]
						},
						"description": "Generated from a curl request: \ncurl 'https://qa1-bots.kore.com/api/1.1/users/u-bff670bb-b592-5a95-930c-d06be3a1e607/builder/streams?rnd=o6uo5' -H 'Cookie: unq=D9Gy1TnE2hRQtC6X' -H 'Accept-Encoding: gzip, deflate, sdch, br' -H 'Accept-Language: en-US,en;q=0.8' -H 'Authorization: bearer f6U3YUh780JNLSA0TzpGusMay2_NhiybzkptlJrZRYHCMsQsmjdOaDp9blZ1RUTt' -H 'Content-Type: application/json;charset=UTF-8' -H 'Accept: application/json, text/plain, */*' -H 'Referer: https://qa1-bots.kore.com/botbuilder' -H 'User-Agent: Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/57.0.2987.133 Safari/537.36' -H 'Connection: keep-alive' --compressed"
					},
					"response": []
				},
				{
					"name": "Editing Assigned scopes to have only EERS scopes asigned",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"validate client Id\", function () {",
									"    var responseJson = JSON.parse(responseBody);",
									"    var clientId = responseJson.clientId;",
									"    pm.expect(clientId).to.equal(pm.environment.get(\"scopeclientId\"));",
									"});",
									"pm.test(\"validate client secret\", function () {",
									"    var responseJson = JSON.parse(responseBody);",
									"    var clientSecret = responseJson.clientSecret;",
									"    pm.expect(clientSecret).to.equal(pm.environment.get(\"scopeclientSecret\"));",
									"});",
									"pm.test(\"validate appname\", function () {",
									"    var responseJson = JSON.parse(responseBody);",
									"    var appName = responseJson.appName;",
									"    pm.expect(appName).to.equal(pm.environment.get(\"scopeappName\"));",
									"});",
									"pm.test(\"validate Scopes\", function () {",
									"    var responseJson = JSON.parse(responseBody);",
									"    var scopes = responseJson.scope;",
									"    pm.expect(scopes).to.be.an(\"array\");",
									"});",
									"pm.test(\"validate Scopes array\", function () {",
									"    var responseJson = JSON.parse(responseBody);",
									"    var scopen = responseJson.scope[0];",
									"    pm.expect(scopen).to.have.keys(\"scopes\");",
									"});",
									"pm.test(\"validate Scopes assigned\", function () {",
									"    var responseJson = JSON.parse(responseBody);",
									"    var scopa = responseJson.scope[0].scopes;",
									"    pm.expect(scopa).to.be.an(\"array\");",
									"});",
									"pm.test(\"botimport scope\", function () {",
									"    var responseJson = JSON.parse(responseBody);",
									"    var data = responseJson.scope[0].scopes[0];",
									"    pm.expect(data).to.equal(\"bot_definition:bot_import\");",
									"});",
									"pm.test(\"botexport scope\", function () {",
									"    var responseJson = JSON.parse(responseBody);",
									"    var data = responseJson.scope[0].scopes[1];",
									"    pm.expect(data).to.equal(\"bot_definition:bot_export\");",
									"});",
									"pm.test(\"botcreate scope\", function () {",
									"    var responseJson = JSON.parse(responseBody);",
									"    var data = responseJson.scope[0].scopes[2];",
									"    pm.expect(data).to.equal(\"bot_definition:bot_create\");",
									"});",
									"pm.test(\"botpublish scope\", function () {",
									"    var responseJson = JSON.parse(responseBody);",
									"    var data = responseJson.scope[0].scopes[3];",
									"    pm.expect(data).to.equal(\"bot_publish:publish_request\");",
									"});",
									"pm.test(\"ML train scope\", function () {",
									"    var responseJson = JSON.parse(responseBody);",
									"    var data = responseJson.scope[0].scopes[4];",
									"    pm.expect(data).to.equal(\"test_and_train:ml\");",
									"});",
									"pm.test(\"Faq train scope\", function () {",
									"    var responseJson = JSON.parse(responseBody);",
									"    var data = responseJson.scope[0].scopes[5];",
									"    pm.expect(data).to.equal(\"test_and_train:faq\");",
									"});",
									"pm.test(\"ml import scope\", function () {",
									"    var responseJson = JSON.parse(responseBody);",
									"    var data = responseJson.scope[0].scopes[6];",
									"    pm.expect(data).to.equal(\"test_and_train:ml_import\");",
									"});",
									"pm.test(\"ml export scope\", function () {",
									"    var responseJson = JSON.parse(responseBody);",
									"    var data = responseJson.scope[0].scopes[7];",
									"    pm.expect(data).to.equal(\"test_and_train:ml_export\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Connection",
								"value": "keep-alive"
							},
							{
								"key": "Authorization",
								"value": "bearer {{botadminaccesstokenuser1}}"
							},
							{
								"key": "AccountId",
								"value": "{{adminaccountID1}}"
							},
							{
								"key": "Requester-Type",
								"value": "admin"
							},
							{
								"key": "User-Agent",
								"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.129 Safari/537.36"
							},
							{
								"key": "X-HTTP-Method-Override",
								"value": "PUT"
							},
							{
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8"
							},
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Origin",
								"value": "{{url}}"
							},
							{
								"key": "Sec-Fetch-Site",
								"value": "same-origin"
							},
							{
								"key": "Sec-Fetch-Mode",
								"value": "cors"
							},
							{
								"key": "Sec-Fetch-Dest",
								"value": "empty"
							},
							{
								"key": "Referer",
								"value": "{{url}}/botadmin/"
							},
							{
								"key": "Accept-Language",
								"value": "en-US,en;q=0.9"
							},
							{
								"key": "Cookie",
								"value": "_ga=GA1.2.544935457.1580188389; __hs_opt_out=yes; _gid=GA1.2.1275676766.1588748980"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"algorithm\":\"HS256\",\n\"appName\":\"{{scopeappName}}\",\n\"bots\":[],\n\"pushNotifications\":{\"enable\":false,\"webhookUrl\":\"\"},\n\"scope\":\n[{\"scopes\":\n[       \"bot_definition:bot_import\",\n\t\t\"bot_definition:bot_export\",\n\t\t\"bot_definition:bot_create\",\n\t\t\"bot_publish:publish_request\",\n\t\t\"test_and_train:ml\",\n\t\t\"test_and_train:faq\",\n\t\t\"test_and_train:ml_import\",\n\t\t\"test_and_train:ml_export\"]}\n]\n}"
						},
						"url": {
							"raw": "{{url}}/api/{{version}}/organization/{{botadminorgID1}}/users/{{botadminUserID1}}/sdk/apps/{{scopeclientId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"{{version}}",
								"organization",
								"{{botadminorgID1}}",
								"users",
								"{{botadminUserID1}}",
								"sdk",
								"apps",
								"{{scopeclientId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Deleting scopes assigned for an app",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"var flag = 0;",
									"_.forEach(jsonData, function (ind, val) {",
									"    // if(ind.name === postman.getEnvironmentVariable(\"Consumerbotname\")){",
									"    pm.test(\"scopes set are deleted\", function () {",
									"        pm.expect(jsonData.scope.length).to.eql(0);",
									"        flag = 1;",
									"    });",
									"    if (flag === 0) {",
									"        tests[\"Scopes set for \" + pm.environment.get(\"scopeappName\") + \" are not deleted\"] = false;",
									"    } else {",
									"        tests[\"scopes set for \" + pm.environment.get(\"scopeappName\") + \" are deleted\"] = true;",
									"    }",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Connection",
								"value": "keep-alive"
							},
							{
								"key": "Authorization",
								"value": "bearer {{botadminaccesstokenuser1}}"
							},
							{
								"key": "AccountId",
								"value": "{{adminaccountID1}}"
							},
							{
								"key": "Requester-Type",
								"value": "admin"
							},
							{
								"key": "User-Agent",
								"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.129 Safari/537.36"
							},
							{
								"key": "X-HTTP-Method-Override",
								"value": "PUT"
							},
							{
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8"
							},
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Origin",
								"value": "{{url}}"
							},
							{
								"key": "Sec-Fetch-Site",
								"value": "same-origin"
							},
							{
								"key": "Sec-Fetch-Mode",
								"value": "cors"
							},
							{
								"key": "Sec-Fetch-Dest",
								"value": "empty"
							},
							{
								"key": "Referer",
								"value": "{{url}}/botadmin/"
							},
							{
								"key": "Accept-Language",
								"value": "en-US,en;q=0.9"
							},
							{
								"key": "Cookie",
								"value": "_ga=GA1.2.544935457.1580188389; __hs_opt_out=yes; _gid=GA1.2.1275676766.1588748980"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"algorithm\":\"HS256\",\n\"appName\":\"{{scopeappName}}\",\n\"bots\":[],\n\"pushNotifications\":{\"enable\":false,\"webhookUrl\":\"\"},\n\"scope\":[]}"
						},
						"url": {
							"raw": "{{url}}/api/{{version}}/organization/{{botadminorgID1}}/users/{{botadminUserID1}}/sdk/apps/{{scopeclientId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"{{version}}",
								"organization",
								"{{botadminorgID1}}",
								"users",
								"{{botadminUserID1}}",
								"sdk",
								"apps",
								"{{scopeclientId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete App Created",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"App is deleted\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"tests[\"Deleted App is \" + pm.environment.get(\"scopeappName\")] = true;\r",
									"\r",
									"pm.test(\"Response body is null\", function () {\r",
									"    pm.responseBody === null\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Connection",
								"value": "keep-alive"
							},
							{
								"key": "Authorization",
								"value": "bearer {{botadminaccesstokenuser1}}"
							},
							{
								"key": "AccountId",
								"value": "{{adminaccountID1}}"
							},
							{
								"key": "Requester-Type",
								"value": "admin"
							},
							{
								"key": "User-Agent",
								"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.138 Safari/537.36"
							},
							{
								"key": "X-HTTP-Method-Override",
								"value": "DELETE"
							},
							{
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8"
							},
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Origin",
								"value": "{{url}}"
							},
							{
								"key": "Sec-Fetch-Site",
								"value": "same-origin"
							},
							{
								"key": "Sec-Fetch-Mode",
								"value": "cors"
							},
							{
								"key": "Sec-Fetch-Dest",
								"value": "empty"
							},
							{
								"key": "Referer",
								"value": "{{url}}/botadmin/"
							},
							{
								"key": "Accept-Language",
								"value": "en-US,en;q=0.9"
							},
							{
								"key": "Cookie",
								"value": "_ga=GA1.2.544935457.1580188389; __hs_opt_out=yes; _gid=GA1.2.1583365579.1589694244"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{}"
						},
						"url": {
							"raw": "{{url}}/api/{{version}}/organization/{{botadminorgID1}}/users/{{botadminUserID1}}/sdk/apps/{{scopeclientId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"{{version}}",
								"organization",
								"{{botadminorgID1}}",
								"users",
								"{{botadminUserID1}}",
								"sdk",
								"apps",
								"{{scopeclientId}}"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		}
	]
}